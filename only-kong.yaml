---
# Source: canvas-oda/charts/canvas-namespaces/templates/namespace-cert-manager.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: cert-manager
  annotations:
    "helm.sh/resource-policy": "keep"
  labels:
    helm.sh/chart: canvas-namespaces-1.0.1
    app.kubernetes.io/name: canvas-namespaces
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/version: "v1beta4"
    app.kubernetes.io/managed-by: Helm
---
# Source: canvas-oda/charts/canvas-namespaces/templates/namespace-default.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: components
  annotations:
    "helm.sh/resource-policy": "keep"
  labels:
    helm.sh/chart: canvas-namespaces-1.0.1
    app.kubernetes.io/name: canvas-namespaces
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/version: "v1beta4"
    app.kubernetes.io/managed-by: Helm
    istio-injection: enabled
---
# Source: canvas-oda/charts/canvas-vault/templates/namespace-canvas-vault.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: canvas-vault
  annotations:
    "helm.sh/resource-policy": "keep"
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/charts/etcd/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: canvas-etcd
  namespace: "canvas"
  labels:
    app.kubernetes.io/name: etcd
    helm.sh/chart: etcd-8.7.7
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/managed-by: Helm
spec:
  minAvailable: 51%
  selector:
    matchLabels:
      app.kubernetes.io/name: etcd
      app.kubernetes.io/instance: canvas
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/charts/ingress-controller/templates/service-account.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: v1
kind: ServiceAccount
metadata:
  name: canvas-ingress-controller
  namespace: canvas
automountServiceAccountToken: true
---
# Source: canvas-oda/charts/apisix-gateway/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: canvas-operator
  namespace: canvas
---
# Source: canvas-oda/charts/apisix-gateway/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: canvas-apisix-operator
  namespace: canvas
---
# Source: canvas-oda/charts/apisix-gateway/templates/rbacapioperator.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: canvas
  name: apisixapioperator-account
---
# Source: canvas-oda/charts/canvas-vault/charts/vault/templates/server-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: canvas-vault-hc
  namespace: canvas-vault
  labels:
    helm.sh/chart: vault-0.26.1
    app.kubernetes.io/name: vault-hc
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/managed-by: Helm
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/cainjector-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: canvas-cert-manager-cainjector
  namespace: cert-manager
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "cainjector"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: canvas-cert-manager
  namespace: cert-manager
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/webhook-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: canvas-cert-manager-webhook
  namespace: cert-manager
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
---
# Source: canvas-oda/charts/component-operator/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: canvas
  name: odacomponent-account
  labels:
    helm.sh/chart: component-operator-1.2.1
    app.kubernetes.io/name: component-operator
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/version: "v1beta4"
    app.kubernetes.io/managed-by: Helm
---
# Source: canvas-oda/charts/dependentapi-simple-operator/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: "canvas"
  name: canvas-depapi-op-account
---
# Source: canvas-oda/charts/keycloak/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: canvas-keycloak
  namespace: "canvas"
  labels:
    app.kubernetes.io/name: keycloak
    helm.sh/chart: keycloak-13.0.2
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: keycloak
automountServiceAccountToken: true
---
# Source: canvas-oda/charts/secretsmanagement-operator/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: "canvas"
  name: canvas-smanop-account
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/charts/etcd/templates/token-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: canvas-etcd-jwt-token
  namespace: "canvas"
  labels:
    app.kubernetes.io/name: etcd
    helm.sh/chart: etcd-8.7.7
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  jwt-token.pem: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBeWYwR1YwYXp3LzJacUMzODFwQ1NMSG9LZG1jMTVFemdoWjJ3SGpYNXVkRlltdm1uCjBMNFJPVHczNmNhM1FtSmdxNzVoM004VmZJdjgyV3l4WGNWZWdBY1lEeW8rcEpVa1JnL0JSdm1aZVFqWmxxTjkKekRKYlpNaDFGWkZ0Z1ZHV1hJNUlJVE43cmpVVTBkSG8rekhTNWliUEpTNnIzL0U1Y2o3ZzUzcDdoL0JQaDFOMQpOamR5VE9Udjl1ekpEcVAvelRnOXJ4TUlwcUZaUjQ3MVZ4djNHa0hmckZxQVdzVTRweDI5VUlaOUt3SDZ4WUVhCkJobE9QRVJlbmpJSUUyQnFCWi94VjE3WFVpazRWblN1UjIwNkc2dndpMjdPWkhYc3I4cVV4TXVvcHdoSnROa2EKZzJxV0Ywa2NWZFgyOVQyZ1ZqTnRiUFdvY3pWME9EdUNGN0pweEt1eFhxSm9Vb2RMMVFFRjZGT29kcEgwb2Z1NQpZYVFlSDVramhwQ3pNRklSUGJLUXFxK2VRL3crRzY0NTl1U1RFdENBN1QxRTRsOXlVT1VPaURSQit3dWJkUFlyCmZFRllCVXg0Vml3U3VTVnFiejF1MnlBMUdhdEo1a3p4NCt4OG5PUmRJckpHS0VYbXF3RWdIY2dtajhxQzUrekoKaWJhdDc3aTRMRk5JdFZVQ2QxeE1McXhHMC9DZ3l4TFFPMDlHeWZvMnoxekVkbU5UVm92L1ZJMXVhTE9RZWQ3ZAorOWQ5TU5IOEFmbkpQUjJDaDI5RkJwbVVseUs0OGZBU3plckJXTXh4RDk0ekR4ZXFPM2xUWFkxaTNnWEh6ZUdXCmVvU29TSE1oSzdxUFNOSTUvU0tDNGxLLzBMRHBtUGE1ZjdJYkdvRFg3RFBCK2FUVk1jMnlsRkV0YmpjQ0F3RUEKQVFLQ0FnQVNOWEVnNVFySG5GRUJ6RU9DeEQycExNZE1yVGs2ZjRPdUIrMGNqQmtiR3pnMW9GUDBpVzNjRHdXcgpXWEtqMVdLSm1Qd1JmOG1jRkxLU2x5M1dHampPcWRVTmFPMkV3TDBvWTdzMHZzT0xHYlVqMDFFLzJ6cEo5NWcyCmZZbTFvcmsvVnNSQjJmWklXaGlxWVpYekx5YW9BTStqdG5WZ0ZzcnE5YWdvdGUzMDcwRDhIaFh1OFVpb2plcmsKQTZ5TVdWUnlGNlBYNkl0YkdpaUdQdWozRlZwTlQ2cnVTcXBQaEgvNjhMOWtSdnQ1cVJBR1JnRW1rNWx0N1d2cQpMdkJ6YnJtZ0VDOGRoVHM3K09OUFIrMStHdWFtSC9YclcrM1hPSnBCcnEyQ29DbHdCVnMvcG1LeGZpWlJxeEdXCjIxY0wvS1k3bng4Nk4xc2NKN0YyY0VibUEvdHN5a3VFeUJMMktIWjNFd25pWGVRYkZkRDVWT2JkSU54T1FFbzAKN1dKdTkrQ1VuNWV3WHdPcEF0VVU3a1U3aXhVT3JyY0NwUmM2QU1zaW5yMGhzZklPRnY2elFCaU5MN3Y4elpScwp2aVRvc0FVOW96MTNXMlY4Tmw4VnhSTmFqYkwvV00xYnRwdC9IQWtUSEk5VkRBeXh1WklSSnpvemZHWkVxS2pNCkZrWVZZZUdjY2RIMTRXVlhCQmpWY3lDV0ZWdzFGN3BaVFBHbStXY0p1ZDJRYjg5bEs5bjJydEJiRXhnb2FkTXYKV25Wdkg4UVYvb2tUbUlYY0pPNy9SSit3bk1KbXVaaSttWkNNYmM2Mmp6K2RrU2c3aXJVY3RqVkxQdzZjekJJdApQNTRMRkZnTWpsckFiU1JQWGxZZ2FCcGUzUmRYM0JvRDVSa0x6YUtIZUhBMnpXTVNZUUtDQVFFQThUaUtOb2tOCmlSUE1zdmJKUHF0UVg3Tm5uNUo3NGNyK0xlSXY0UHFhTXBad1huMEU4bkVzdXVsaURtYXdaemJoUTg4T0w4a3AKczhzZjQ4UExLUnhXeFU4eGk4OHk0eExXbFNrWVlJZklqa0I1bVFWU05Fa0VSdkNGa0dzMlQ3ZGtFek96OGRHOAovZk9RRXM2T2lxeUZuOEFKcjdkRmVCZ3FxSTVVTGU1YUZYaXFsT1RWcVJHQWlYR0FJNHVDajF3d0dHamN3dWNOCmxyN3liR3ZOeWE2cUV0UHdCOFUvWG93WllURVkwWUR4TTY5U3M0ZjRMckdxaVNCdmsvYWVYUFBUUFhzUXpIVDQKK2x3UVg4MnBjTFJHOXBONzMycHVzYzlsdlIvNHFPWTB1V2t6WEo5Z0dEUDhLWjFNTnk3T0FCTUo0S2Rpb0x5VworbytFODU3YUE2YU00d0tDQVFFQTFsMGpUVFJ5eG80RmQzRXBmYjR3cjVEU0hGd3hnNFRwd1kwSFVsT3lSbExxCmNIMEh1VEExcHZ0TXpnSlhTZHRXVGVESWhDRWNyWUtsT1hXMFBuWThhR2lYVzBvMGpwT3MxQWMyRHJpVElOK0kKRkplR3plYU4yOHpPUlRyemx2dkdGY1NKR1RzbHpGeUYrWHFSV01sWWFWY2Rub0h4ZE1KeERCMG95QzhLVHFrKwpnUnBubVlPbWlWWU00dC9MWW1VMVcxUTZ2QTRkOXNpWmQ5US8vU0JxeFlUS29Ud0RObXNpR2MwYzZQd2plaENvCjY1M0QvZm5HTEp5cEJ3MlNyUXMvWExoSXppN1ZpU1oyRUdwSWNiVE1xWnVsbEl0UHdHVHdIUzFYQ3U1MjlqQkEKT1FHTDhJRThQQzhQL1BPWm9HNGNtL0xWaDE0V29nWmRLdHdmb05DTm5RS0NBUUVBaXdmSWVhaENtZWhFaWoyOQpQaGFsYTVOT3ZXVkRhNStCSXRjRU80cVZCMlUzL08zWHhSaS83RGNKb2oxRG5TbS9ha0xUN1d6blVVNVk0Z0QrCmZvSnI3S3M1WmxpVS90WGp3ZkwrcnR4MEZyRklwSTZ4azVzbUVQRWVPbC9nM005WnFjdWFBbDJkclUwTmxCbGoKaEwvdEFHZEI3Zm9XMnlJcXJCM2tuTmlOS1dUMEJIOWtPbDd4RThiTVVUQmVudHhHaURzZ1NtRzdyay8rRDhtTwp3WmlmUTl6TnN0ellLbGxiWTI1VjNLS1I0dlZCR0dMZEE2UzVJdklEL1djZVhYclhITTlxbmowcEo3dWFZRzE4CkpJNXpmRGtESTRFSHJncFluRW5xR3djY0NtVjlDZng5K1ZVMUdKTWwwNFJ4alE5c0dRVEF6dDREc3dTM1gyY0cKUnlaZWV3S0NBUUJRUkhmZmhQQWxZVEN5MVBEUVlOTWlLbnhDbWxNQUNGanZYTHVOSEVINUN6czErOXRVZ0xUVwpYZXNZaU0vZW0vN3BFbTZDNjFNdHRXbmc1aTRqNVdvaFBtak9paTY3NUpnbW5MeWxMb0FKSXlwMWEzZlN5YTM4CnkrZkJESjRCdnkwaElZS2txLzB2Vk1YbDhQdFQzN0QzWU9ONll2WGkzcHd1Q1Ewb1NGVDN0Mi9zTDlMekxOVEQKUURGN0VvbTV3bVFFV3JuVGlRVzNUczRJakxXWk52WkVGOEU0TnB5TlYvaGc2T2tXWkxOMEZhRHErUnhXa1p5ZgpQOW9iQmY0U1JjL29EQ2xXNnpxU0xKQ3cvTnM3bUpPNlBzbjFvV1N2aWh4UEVKY3pSSy9PNTZwa3JpdVVWeEFUCkNSeFhmMi9iSHVBZmxRSlh1ZWVIckJKZTVpWUJ0WllSQW9JQkFRQ1ZRRmtGYzBJV1hzcDNzUUtvQUtOUGhyNVUKakFmQWZmRko3WkZDMkFrdW9NU0VJUGtQRGRkMHhRUTM4Z2F2c2gvNVhyMjdPUGpuL1dnUDZFTk02eVU0cGJHZgphNlhaUlF2RFhLSDdyUWJ4Vit2TmpTdFgxclRqR05RK09UTmZkM3hxVmkyVGZaOU5NbklwaVVyeGllMnpTT002ClR4Z2FJaFJPSzljVHBXdzBoenJnai9OTXA0RlBTelJHSzNPZktzZVk4TlR0elp3ajVhTjdzUlMrOEUwSDlrYTcKeEJXY1dZdVhpVDAzOWphZkJvNFJ4ckxmZGI4NStjd09iVXdOL2Zpb1hncktabWkvTDhsYjdSZTE5Ykp5NVdmZQp3ZlZUOHNrNFJMbklpcnd4MFRvSnc1WmZNMlBHQUhZK1pPbS81QlpPZkxTSzlNWDVXbjdCakhtOXBpQ1oKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
---
# Source: canvas-oda/charts/component-operator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: component-operator-secret
  labels:
    helm.sh/chart: component-operator-1.2.1
    app.kubernetes.io/name: component-operator
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/version: "v1beta4"
    app.kubernetes.io/managed-by: Helm
  namespace: canvas
data:
  KEYCLOAK_USER: "YWRtaW4="
  KEYCLOAK_PASSWORD: "YWRwYXNz"
---
# Source: canvas-oda/charts/keycloak/charts/postgresql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: canvas-postgresql
  namespace: "canvas"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-12.1.9
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  postgres-password: "NjJxSm5za1VSYw=="
  password: "a2V5Y2xvYWtkYnVzZXI="
  # We don't auto-generate LDAP password when it's not provided as we do for other passwords
---
# Source: canvas-oda/charts/keycloak/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: canvas-keycloak
  namespace: "canvas"
  labels:
    app.kubernetes.io/name: keycloak
    helm.sh/chart: keycloak-13.0.2
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: keycloak
type: Opaque
data:
  admin-password: "YWRwYXNz"
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/charts/ingress-controller/templates/configmap.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: v1
data:
  config.yaml: |-
    # log options
    log_level: "info"
    log_output: "stderr"
    cert_file: "/etc/webhook/certs/cert.pem"
    key_file: "/etc/webhook/certs/key.pem"
    http_listen: ":8080"
    https_listen: ":8443"
    ingress_publish_service: ""
    enable_profiling: true
    apisix_resource_sync_interval: 1h
    plugin_metadata_cm: ""
    kubernetes:
      kubeconfig: ""
      resync_interval: "6h"
      namespace_selector:
      - ""
      election_id: "ingress-apisix-leader"
      ingress_class: "apisix"
      ingress_version: "networking/v1"
      watch_endpointslices: false
      apisix_route_version: "apisix.apache.org/v2"
      enable_gateway_api: false
      apisix_version: "apisix.apache.org/v2"
    apisix:
      admin_api_version: "v3"
      default_cluster_base_url: http://canvas-apisix-admin:9180/apisix/admin
      
      default_cluster_admin_key: "edd1c9f034335f136f87ad84b625c8f1"
      default_cluster_name: "default"
    
kind: ConfigMap
metadata:
  name: canvas-configmap
  namespace: canvas
  labels:
    helm.sh/chart: ingress-controller-0.13.0
    
    app.kubernetes.io/name: ingress-controller
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/version: "1.7.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/templates/configmap.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: canvas-apisix
  namespace: canvas
data:
  config.yaml: |-
    #
    # Licensed to the Apache Software Foundation (ASF) under one or more
    # contributor license agreements.  See the NOTICE file distributed with
    # this work for additional information regarding copyright ownership.
    # The ASF licenses this file to You under the Apache License, Version 2.0
    # (the "License"); you may not use this file except in compliance with
    # the License.  You may obtain a copy of the License at
    #
    #     http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    #
    apisix:    # universal configurations
      node_listen:    # APISIX listening port
        - 9080
      enable_heartbeat: true
      enable_admin: true
      enable_admin_cors: true
      enable_debug: false

      enable_dev_mode: false                       # Sets nginx worker_processes to 1 if set to true
      enable_reuseport: true                       # Enable nginx SO_REUSEPORT switch if set to true.
      enable_ipv6: true # Enable nginx IPv6 resolver
      enable_http2: true
      enable_server_tokens: true # Whether the APISIX version number should be shown in Server header

      # proxy_protocol:                   # Proxy Protocol configuration
      #   listen_http_port: 9181          # The port with proxy protocol for http, it differs from node_listen and admin_listen.
      #                                   # This port can only receive http request with proxy protocol, but node_listen & admin_listen
      #                                   # can only receive http request. If you enable proxy protocol, you must use this port to
      #                                   # receive http request with proxy protocol
      #   listen_https_port: 9182         # The port with proxy protocol for https
      #   enable_tcp_pp: true             # Enable the proxy protocol for tcp proxy, it works for stream_proxy.tcp option
      #   enable_tcp_pp_to_upstream: true # Enables the proxy protocol to the upstream server

      proxy_cache:                         # Proxy Caching configuration
        cache_ttl: 10s                     # The default caching time if the upstream does not specify the cache time
        zones:                             # The parameters of a cache
        - name: disk_cache_one             # The name of the cache, administrator can be specify
                                           # which cache to use by name in the admin api
          memory_size: 50m                 # The size of shared memory, it's used to store the cache index
          disk_size: 1G                    # The size of disk, it's used to store the cache data
          disk_path: "/tmp/disk_cache_one" # The path to store the cache data
          cache_levels: "1:2"              # The hierarchy levels of a cache
      #  - name: disk_cache_two
      #    memory_size: 50m
      #    disk_size: 1G
      #    disk_path: "/tmp/disk_cache_two"
      #    cache_levels: "1:2"

      router:
        http: radixtree_host_uri  # radixtree_uri: match route by uri(base on radixtree)
                                    # radixtree_host_uri: match route by host + uri(base on radixtree)
                                    # radixtree_uri_with_parameter: match route by uri with parameters
        ssl: 'radixtree_sni'        # radixtree_sni: match route by SNI(base on radixtree)

      proxy_mode: http
      stream_proxy:                 # TCP/UDP proxy
        tcp:                        # TCP proxy port list
          - 9100
        udp:                        # UDP proxy port list
          - 9200
      # dns_resolver:
      #
      #   - 127.0.0.1
      #
      #   - 172.20.0.10
      #
      #   - 114.114.114.114
      #
      #   - 223.5.5.5
      #
      #   - 1.1.1.1
      #
      #   - 8.8.8.8
      #
      dns_resolver_valid: 30
      resolver_timeout: 5
      ssl:
        enable: true
        listen:
          - port: 9443
            enable_http3: false
        ssl_protocols: "TLSv1.2 TLSv1.3"
        ssl_ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA"

    nginx_config:    # config for render the template to genarate nginx.conf
      error_log: "/dev/stderr"
      error_log_level: "warn"    # warn,error
      worker_processes: "auto"
      enable_cpu_affinity: true
      worker_rlimit_nofile: 20480  # the number of files a worker process can open, should be larger than worker_connections
      event:
        worker_connections: 10620
      http:
        enable_access_log: true
        access_log: "/dev/stdout"
        access_log_format: '$remote_addr - $remote_user [$time_local] $http_host \"$request\" $status $body_bytes_sent $request_time \"$http_referer\" \"$http_user_agent\" $upstream_addr $upstream_status $upstream_response_time \"$upstream_scheme://$upstream_host$upstream_uri\"'
        access_log_format_escape: default
        keepalive_timeout: "60s"
        client_header_timeout: 60s     # timeout for reading client request header, then 408 (Request Time-out) error is returned to the client
        client_body_timeout: 60s       # timeout for reading client request body, then 408 (Request Time-out) error is returned to the client
        send_timeout: 10s              # timeout for transmitting a response to the client.then the connection is closed
        underscores_in_headers: "on"   # default enables the use of underscores in client request header fields
        real_ip_header: "X-Real-IP"    # http://nginx.org/en/docs/http/ngx_http_realip_module.html#real_ip_header
        real_ip_from:                  # http://nginx.org/en/docs/http/ngx_http_realip_module.html#set_real_ip_from
          - 127.0.0.1
          - 'unix:'

    deployment:
      role: traditional
      role_traditional:
        config_provider: etcd
      admin:
        allow_admin:    # http://nginx.org/en/docs/http/ngx_http_access_module.html#allow
          - 127.0.0.1/24
          - 0.0.0.0/0
        #   - "::/64"
        admin_listen:
          ip: 0.0.0.0
          port: 9180
        # Default token when use API to call for Admin API.
        # *NOTE*: Highly recommended to modify this value to protect APISIX's Admin API.
        # Disabling this configuration item means that the Admin API does not
        # require any authentication.
        admin_key:
          # admin: can everything for configuration data
          - name: "admin"
            key: edd1c9f034335f136f87ad84b625c8f1
            role: admin
          # viewer: only can view configuration data
          - name: "viewer"
            key: 4054f7cf07e344346cd3f287985e76a2
            role: viewer
      etcd:
        host:                          # it's possible to define multiple etcd hosts addresses of the same etcd cluster.
          - "http://canvas-etcd.canvas.svc.cluster.local:2379"
        prefix: "/apisix"    # configuration prefix in etcd
        timeout: 30    # 30 seconds
---
# Source: canvas-oda/charts/canvas-vault/charts/vault/templates/server-config-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: canvas-vault-hc-config
  namespace: canvas-vault
  labels:
    helm.sh/chart: vault-0.26.1
    app.kubernetes.io/name: vault-hc
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/managed-by: Helm
data:
  extraconfig-from-values.hcl: |-
    disable_mlock = true
    ui = true
    listener "tcp" {
      tls_disable = 0
      address = "[::]:8200"
      cluster_address = "[::]:8201"
      tls_cert_file = "/vault/userconfig/canvasvault-tls/tls.crt"
      tls_key_file  = "/vault/userconfig/canvasvault-tls/tls.key"
      tls_client_ca_file = "/vault/userconfig/canvasvault-tls/ca.crt"
    }
    storage "file" {
      path = "/vault/data"
    }
---
# Source: canvas-oda/charts/canvas-vault/templates/canvas-vault-certificate-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: canvas-vault
  name: canvas-canvasvault-cert-cm
data:
  canvas-vault-certificate.yaml: "apiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n
    \ # {{ .Release.Name }}-vault-tls can not be used as name, because the extra env
    variables for hc vault \n  # are defined in values yaml, which does not allow templating
    \n  name: canvasvault-tls\n  # TODO[FH]: this should be\n  # namespace: {{ include
    \"canvasvault.namespace\" . }}\n  # This file is written into a configmap and then
    deployed in a post-install hook,\n  # because cert-manager CRDs are not available
    at deploy time. \n  # This file is not in the tempaltes folder. So, templating does
    not work.\n  # When installation is refactored this can be changed.\n  # Also all
    other occurrences of \"canvas-vault\" namespace / domain name should be replaced
    \n  # then with the template.  \n  namespace: canvas-vault\nspec:\n  commonName:
    canvasvault-tls\n  dnsNames:\n  - canvasvault-tls\n  - canvasvault-tls.canvas-vault\n
    \ - canvasvault-tls.canvas-vault.svc\n  - canvasvault-tls.canvas-vault.svc.cluster.local\n
    \ duration: 21600h0m0s\n  issuerRef:\n    name: canvas-cert-manager-init-selfsigned-cluster\n
    \   kind: ClusterIssuer\n  privateKey:\n    algorithm: RSA\n    encoding: PKCS1\n
    \   size: 2048\n  secretName: canvasvault-tls\n  usages:\n  - digital signature\n
    \ - content commitment\n  - key encipherment\n  - server auth\n"
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/webhook-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: canvas-cert-manager-webhook
  namespace: cert-manager
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
data:
---
# Source: canvas-oda/charts/component-operator/templates/configMap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: component-operator-configmap
  labels:
    helm.sh/chart: component-operator-1.2.1
    app.kubernetes.io/name: component-operator
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/version: "v1beta4"
    app.kubernetes.io/managed-by: Helm
  namespace: canvas
data:
  LOGGING: "20"
  KEYCLOAK_BASE: "http://canvas-keycloak-headless.canvas:8083/auth"
  KEYCLOAK_REALM: "myrealm"
  COMPONENT_NAMESPACE: "components"
---
# Source: canvas-oda/charts/keycloak/templates/configmap-env-vars.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: canvas-keycloak-env-vars
  namespace: "canvas"
  labels:
    app.kubernetes.io/name: keycloak
    helm.sh/chart: keycloak-13.0.2
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: keycloak
data:
  KEYCLOAK_ADMIN: "admin"
  KEYCLOAK_HTTP_PORT: "8083"
  KEYCLOAK_PROXY: "passthrough"
  KEYCLOAK_ENABLE_STATISTICS: "false"
  KEYCLOAK_DATABASE_HOST: "canvas-postgresql"
  KEYCLOAK_DATABASE_PORT: "5432"
  KEYCLOAK_DATABASE_NAME: "keycloak"
  KEYCLOAK_DATABASE_USER: "keycloak"
  KEYCLOAK_PRODUCTION:  "false"
  KEYCLOAK_ENABLE_HTTPS: "false"
  KEYCLOAK_CACHE_TYPE: "ispn"
  KEYCLOAK_CACHE_STACK: "kubernetes"
  JAVA_OPTS_APPEND: "-Djgroups.dns.query=canvas-keycloak-headless.canvas.svc.cluster.local"
  KEYCLOAK_LOG_OUTPUT: "default"
  KC_LOG_LEVEL: "INFO"
---
# Source: canvas-oda/charts/keycloak/templates/keycloak-config-cli-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: canvas-keycloak-keycloak-config-cli-configmap
  namespace: "canvas"
  labels:
    app.kubernetes.io/name: keycloak
    helm.sh/chart: keycloak-13.0.2
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: keycloak-config-cli
data:
  myrealm.json: |
    {
      "enabled": true,
      "realm": "myrealm",
      "users": [
        {
        "username": "seccon",
        "email": "seccon@oda.io",
        "enabled": true,
        "firstName": "Security",
        "lastName": "User"
        }
       ]
    }
---
# Source: canvas-oda/charts/dependentapi-simple-operator/templates/serviceinventoryapi-mongodb-persistentVolumeClaim.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: canvas-svcinv-mongodb-pv-claim
  labels:
    app: canvas-svcinv-mongodb
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 128Mi
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: clusterissuers.cert-manager.io
  labels:
    app: 'cert-manager'
    app.kubernetes.io/name: 'cert-manager'
    app.kubernetes.io/instance: 'canvas'
    # Generated labels
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
spec:
  group: cert-manager.io
  names:
    kind: ClusterIssuer
    listKind: ClusterIssuerList
    plural: clusterissuers
    singular: clusterissuer
    categories:
      - cert-manager
  scope: Cluster
  versions:
    - name: v1
      subresources:
        status: {}
      additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          priority: 1
          type: string
        - jsonPath: .metadata.creationTimestamp
          description: CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
          name: Age
          type: date
      schema:
        openAPIV3Schema:
          description: A ClusterIssuer represents a certificate issuing authority which can be referenced as part of `issuerRef` fields. It is similar to an Issuer, however it is cluster-scoped and therefore can be referenced by resources that exist in *any* namespace, not just the same namespace as the referent.
          type: object
          required:
            - spec
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the ClusterIssuer resource.
              type: object
              properties:
                acme:
                  description: ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
                  type: object
                  required:
                    - privateKeySecretRef
                    - server
                  properties:
                    caBundle:
                      description: Base64-encoded bundle of PEM CAs which can be used to validate the certificate chain presented by the ACME server. Mutually exclusive with SkipTLSVerify; prefer using CABundle to prevent various kinds of security vulnerabilities. If CABundle and SkipTLSVerify are unset, the system certificate bundle inside the container is used to validate the TLS connection.
                      type: string
                      format: byte
                    disableAccountKeyGeneration:
                      description: Enables or disables generating a new ACME account key. If true, the Issuer resource will *not* request a new account but will expect the account key to be supplied via an existing secret. If false, the cert-manager system will generate a new ACME account key for the Issuer. Defaults to false.
                      type: boolean
                    email:
                      description: Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.
                      type: string
                    enableDurationFeature:
                      description: Enables requesting a Not After date on certificates that matches the duration of the certificate. This is not supported by all ACME servers like Let's Encrypt. If set to true when the ACME server does not support it it will create an error on the Order. Defaults to false.
                      type: boolean
                    externalAccountBinding:
                      description: ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
                      type: object
                      required:
                        - keyID
                        - keySecretRef
                      properties:
                        keyAlgorithm:
                          description: 'Deprecated: keyAlgorithm field exists for historical compatibility reasons and should not be used. The algorithm is now hardcoded to HS256 in golang/x/crypto/acme.'
                          type: string
                          enum:
                            - HS256
                            - HS384
                            - HS512
                        keyID:
                          description: keyID is the ID of the CA key that the External Account is bound to.
                          type: string
                        keySecretRef:
                          description: keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
                          type: object
                          required:
                            - name
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                    preferredChain:
                      description: 'PreferredChain is the chain to use if the ACME server outputs multiple. PreferredChain is no guarantee that this one gets delivered by the ACME endpoint. For example, for Let''s Encrypt''s DST crosssign you would use: "DST Root CA X3" or "ISRG Root X1" for the newer Let''s Encrypt root CA. This value picks the first certificate bundle in the ACME alternative chains that has a certificate with this value as its issuer''s CN'
                      type: string
                      maxLength: 64
                    privateKeySecretRef:
                      description: PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
                      type: object
                      required:
                        - name
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                    server:
                      description: 'Server is the URL used to access the ACME server''s ''directory'' endpoint. For example, for Let''s Encrypt''s staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory". Only ACME v2 endpoints (i.e. RFC 8555) are supported.'
                      type: string
                    skipTLSVerify:
                      description: 'INSECURE: Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have the TLS certificate chain validated. Mutually exclusive with CABundle; prefer using CABundle to prevent various kinds of security vulnerabilities. Only enable this option in development environments. If CABundle and SkipTLSVerify are unset, the system certificate bundle inside the container is used to validate the TLS connection. Defaults to false.'
                      type: boolean
                    solvers:
                      description: 'Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/'
                      type: array
                      items:
                        description: An ACMEChallengeSolver describes how to solve ACME challenges for the issuer it is part of. A selector may be provided to use different solving strategies for different DNS names. Only one of HTTP01 or DNS01 must be provided.
                        type: object
                        properties:
                          dns01:
                            description: Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
                            type: object
                            properties:
                              acmeDNS:
                                description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
                                type: object
                                required:
                                  - accountSecretRef
                                  - host
                                properties:
                                  accountSecretRef:
                                    description: A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                  host:
                                    type: string
                              akamai:
                                description: Use the Akamai DNS zone management API to manage DNS01 challenge records.
                                type: object
                                required:
                                  - accessTokenSecretRef
                                  - clientSecretSecretRef
                                  - clientTokenSecretRef
                                  - serviceConsumerDomain
                                properties:
                                  accessTokenSecretRef:
                                    description: A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                  clientSecretSecretRef:
                                    description: A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                  clientTokenSecretRef:
                                    description: A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                  serviceConsumerDomain:
                                    type: string
                              azureDNS:
                                description: Use the Microsoft Azure DNS API to manage DNS01 challenge records.
                                type: object
                                required:
                                  - resourceGroupName
                                  - subscriptionID
                                properties:
                                  clientID:
                                    description: if both this and ClientSecret are left unset MSI will be used
                                    type: string
                                  clientSecretSecretRef:
                                    description: if both this and ClientID are left unset MSI will be used
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                  environment:
                                    description: name of the Azure environment (default AzurePublicCloud)
                                    type: string
                                    enum:
                                      - AzurePublicCloud
                                      - AzureChinaCloud
                                      - AzureGermanCloud
                                      - AzureUSGovernmentCloud
                                  hostedZoneName:
                                    description: name of the DNS zone that should be used
                                    type: string
                                  managedIdentity:
                                    description: managed identity configuration, can not be used at the same time as clientID, clientSecretSecretRef or tenantID
                                    type: object
                                    properties:
                                      clientID:
                                        description: client ID of the managed identity, can not be used at the same time as resourceID
                                        type: string
                                      resourceID:
                                        description: resource ID of the managed identity, can not be used at the same time as clientID
                                        type: string
                                  resourceGroupName:
                                    description: resource group the DNS zone is located in
                                    type: string
                                  subscriptionID:
                                    description: ID of the Azure subscription
                                    type: string
                                  tenantID:
                                    description: when specifying ClientID and ClientSecret then this field is also needed
                                    type: string
                              cloudDNS:
                                description: Use the Google Cloud DNS API to manage DNS01 challenge records.
                                type: object
                                required:
                                  - project
                                properties:
                                  hostedZoneName:
                                    description: HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.
                                    type: string
                                  project:
                                    type: string
                                  serviceAccountSecretRef:
                                    description: A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                              cloudflare:
                                description: Use the Cloudflare API to manage DNS01 challenge records.
                                type: object
                                properties:
                                  apiKeySecretRef:
                                    description: 'API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.'
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                  apiTokenSecretRef:
                                    description: API token used to authenticate with Cloudflare.
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                  email:
                                    description: Email of the account, only required when using API key based authentication.
                                    type: string
                              cnameStrategy:
                                description: CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.
                                type: string
                                enum:
                                  - None
                                  - Follow
                              digitalocean:
                                description: Use the DigitalOcean DNS API to manage DNS01 challenge records.
                                type: object
                                required:
                                  - tokenSecretRef
                                properties:
                                  tokenSecretRef:
                                    description: A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                              rfc2136:
                                description: Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
                                type: object
                                required:
                                  - nameserver
                                properties:
                                  nameserver:
                                    description: The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.
                                    type: string
                                  tsigAlgorithm:
                                    description: 'The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'
                                    type: string
                                  tsigKeyName:
                                    description: The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.
                                    type: string
                                  tsigSecretSecretRef:
                                    description: The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                              route53:
                                description: Use the AWS Route53 API to manage DNS01 challenge records.
                                type: object
                                required:
                                  - region
                                properties:
                                  accessKeyID:
                                    description: 'The AccessKeyID is used for authentication. Cannot be set when SecretAccessKeyID is set. If neither the Access Key nor Key ID are set, we fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    type: string
                                  accessKeyIDSecretRef:
                                    description: 'The SecretAccessKey is used for authentication. If set, pull the AWS access key ID from a key within a Kubernetes Secret. Cannot be set when AccessKeyID is set. If neither the Access Key nor Key ID are set, we fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                  hostedZoneID:
                                    description: If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.
                                    type: string
                                  region:
                                    description: Always set the region when using AccessKeyID and SecretAccessKey
                                    type: string
                                  role:
                                    description: Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
                                    type: string
                                  secretAccessKeySecretRef:
                                    description: 'The SecretAccessKey is used for authentication. If neither the Access Key nor Key ID are set, we fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                              webhook:
                                description: Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
                                type: object
                                required:
                                  - groupName
                                  - solverName
                                properties:
                                  config:
                                    description: Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.
                                    x-kubernetes-preserve-unknown-fields: true
                                  groupName:
                                    description: The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.
                                    type: string
                                  solverName:
                                    description: The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.
                                    type: string
                          http01:
                            description: Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
                            type: object
                            properties:
                              gatewayHTTPRoute:
                                description: The Gateway API is a sig-network community API that models service networking in Kubernetes (https://gateway-api.sigs.k8s.io/). The Gateway solver will create HTTPRoutes with the specified labels in the same namespace as the challenge. This solver is experimental, and fields / behaviour may change in the future.
                                type: object
                                properties:
                                  labels:
                                    description: Custom labels that will be applied to HTTPRoutes created by cert-manager while solving HTTP-01 challenges.
                                    type: object
                                    additionalProperties:
                                      type: string
                                  parentRefs:
                                    description: 'When solving an HTTP-01 challenge, cert-manager creates an HTTPRoute. cert-manager needs to know which parentRefs should be used when creating the HTTPRoute. Usually, the parentRef references a Gateway. See: https://gateway-api.sigs.k8s.io/api-types/httproute/#attaching-to-gateways'
                                    type: array
                                    items:
                                      description: "ParentReference identifies an API object (usually a Gateway) that can be considered a parent of this resource (usually a route). The only kind of parent resource with \"Core\" support is Gateway. This API may be extended in the future to support additional kinds of parent resources, such as HTTPRoute. \n The API object must be valid in the cluster; the Group and Kind must be registered in the cluster for this reference to be valid."
                                      type: object
                                      required:
                                        - name
                                      properties:
                                        group:
                                          description: "Group is the group of the referent. When unspecified, \"gateway.networking.k8s.io\" is inferred. To set the core API group (such as for a \"Service\" kind referent), Group must be explicitly set to \"\" (empty string). \n Support: Core"
                                          type: string
                                          default: gateway.networking.k8s.io
                                          maxLength: 253
                                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                        kind:
                                          description: "Kind is kind of the referent. \n Support: Core (Gateway) \n Support: Implementation-specific (Other Resources)"
                                          type: string
                                          default: Gateway
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                        name:
                                          description: "Name is the name of the referent. \n Support: Core"
                                          type: string
                                          maxLength: 253
                                          minLength: 1
                                        namespace:
                                          description: "Namespace is the namespace of the referent. When unspecified, this refers to the local namespace of the Route. \n Note that there are specific rules for ParentRefs which cross namespace boundaries. Cross-namespace references are only valid if they are explicitly allowed by something in the namespace they are referring to. For example: Gateway has the AllowedRoutes field, and ReferenceGrant provides a generic way to enable any other kind of cross-namespace reference. \n Support: Core"
                                          type: string
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                        port:
                                          description: "Port is the network port this Route targets. It can be interpreted differently based on the type of parent resource. \n When the parent resource is a Gateway, this targets all listeners listening on the specified port that also support this kind of Route(and select this Route). It's not recommended to set `Port` unless the networking behaviors specified in a Route must apply to a specific port as opposed to a listener(s) whose port(s) may be changed. When both Port and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support other parent resources. Implementations supporting other types of parent resources MUST clearly document how/if Port is interpreted. \n For the purpose of status, an attachment is considered successful as long as the parent resource accepts it partially. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Extended \n <gateway:experimental>"
                                          type: integer
                                          format: int32
                                          maximum: 65535
                                          minimum: 1
                                        sectionName:
                                          description: "SectionName is the name of a section within the target resource. In the following resources, SectionName is interpreted as the following: \n * Gateway: Listener Name. When both Port (experimental) and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support attaching Routes to other resources. If that is the case, they MUST clearly document how SectionName is interpreted. \n When unspecified (empty string), this will reference the entire resource. For the purpose of status, an attachment is considered successful if at least one section in the parent resource accepts it. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Core"
                                          type: string
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  serviceType:
                                    description: Optional service type for Kubernetes solver service. Supported values are NodePort or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                              ingress:
                                description: The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
                                type: object
                                properties:
                                  class:
                                    description: The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.
                                    type: string
                                  ingressTemplate:
                                    description: Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges.
                                    type: object
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
                                        type: object
                                        properties:
                                          annotations:
                                            description: Annotations that should be added to the created ACME HTTP01 solver ingress.
                                            type: object
                                            additionalProperties:
                                              type: string
                                          labels:
                                            description: Labels that should be added to the created ACME HTTP01 solver ingress.
                                            type: object
                                            additionalProperties:
                                              type: string
                                  name:
                                    description: The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.
                                    type: string
                                  podTemplate:
                                    description: Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges.
                                    type: object
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
                                        type: object
                                        properties:
                                          annotations:
                                            description: Annotations that should be added to the create ACME HTTP01 solver pods.
                                            type: object
                                            additionalProperties:
                                              type: string
                                          labels:
                                            description: Labels that should be added to the created ACME HTTP01 solver pods.
                                            type: object
                                            additionalProperties:
                                              type: string
                                      spec:
                                        description: PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.
                                        type: object
                                        properties:
                                          affinity:
                                            description: If specified, the pod's scheduling constraints
                                            type: object
                                            properties:
                                              nodeAffinity:
                                                description: Describes node affinity scheduling rules for the pod.
                                                type: object
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
                                                    type: array
                                                    items:
                                                      description: An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                                      type: object
                                                      required:
                                                        - preference
                                                        - weight
                                                      properties:
                                                        preference:
                                                          description: A node selector term, associated with the corresponding weight.
                                                          type: object
                                                          properties:
                                                            matchExpressions:
                                                              description: A list of node selector requirements by node's labels.
                                                              type: array
                                                              items:
                                                                description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                type: object
                                                                required:
                                                                  - key
                                                                  - operator
                                                                properties:
                                                                  key:
                                                                    description: The label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                            matchFields:
                                                              description: A list of node selector requirements by node's fields.
                                                              type: array
                                                              items:
                                                                description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                type: object
                                                                required:
                                                                  - key
                                                                  - operator
                                                                properties:
                                                                  key:
                                                                    description: The label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                          x-kubernetes-map-type: atomic
                                                        weight:
                                                          description: Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                                                          type: integer
                                                          format: int32
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
                                                    type: object
                                                    required:
                                                      - nodeSelectorTerms
                                                    properties:
                                                      nodeSelectorTerms:
                                                        description: Required. A list of node selector terms. The terms are ORed.
                                                        type: array
                                                        items:
                                                          description: A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                                          type: object
                                                          properties:
                                                            matchExpressions:
                                                              description: A list of node selector requirements by node's labels.
                                                              type: array
                                                              items:
                                                                description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                type: object
                                                                required:
                                                                  - key
                                                                  - operator
                                                                properties:
                                                                  key:
                                                                    description: The label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                            matchFields:
                                                              description: A list of node selector requirements by node's fields.
                                                              type: array
                                                              items:
                                                                description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                type: object
                                                                required:
                                                                  - key
                                                                  - operator
                                                                properties:
                                                                  key:
                                                                    description: The label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                          x-kubernetes-map-type: atomic
                                                    x-kubernetes-map-type: atomic
                                              podAffinity:
                                                description: Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
                                                type: object
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
                                                    type: array
                                                    items:
                                                      description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                                      type: object
                                                      required:
                                                        - podAffinityTerm
                                                        - weight
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A pod affinity term, associated with the corresponding weight.
                                                          type: object
                                                          required:
                                                            - topologyKey
                                                          properties:
                                                            labelSelector:
                                                              description: A label query over a set of resources, in this case pods.
                                                              type: object
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                  type: array
                                                                  items:
                                                                    description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                    type: object
                                                                    required:
                                                                      - key
                                                                      - operator
                                                                    properties:
                                                                      key:
                                                                        description: key is the label key that the selector applies to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                        type: array
                                                                        items:
                                                                          type: string
                                                                matchLabels:
                                                                  description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                  type: object
                                                                  additionalProperties:
                                                                    type: string
                                                              x-kubernetes-map-type: atomic
                                                            namespaceSelector:
                                                              description: A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
                                                              type: object
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                  type: array
                                                                  items:
                                                                    description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                    type: object
                                                                    required:
                                                                      - key
                                                                      - operator
                                                                    properties:
                                                                      key:
                                                                        description: key is the label key that the selector applies to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                        type: array
                                                                        items:
                                                                          type: string
                                                                matchLabels:
                                                                  description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                  type: object
                                                                  additionalProperties:
                                                                    type: string
                                                              x-kubernetes-map-type: atomic
                                                            namespaces:
                                                              description: namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                              type: array
                                                              items:
                                                                type: string
                                                            topologyKey:
                                                              description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                                              type: string
                                                        weight:
                                                          description: weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
                                                          type: integer
                                                          format: int32
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                                    type: array
                                                    items:
                                                      description: Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
                                                      type: object
                                                      required:
                                                        - topologyKey
                                                      properties:
                                                        labelSelector:
                                                          description: A label query over a set of resources, in this case pods.
                                                          type: object
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                              type: array
                                                              items:
                                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                type: object
                                                                required:
                                                                  - key
                                                                  - operator
                                                                properties:
                                                                  key:
                                                                    description: key is the label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                            matchLabels:
                                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                              type: object
                                                              additionalProperties:
                                                                type: string
                                                          x-kubernetes-map-type: atomic
                                                        namespaceSelector:
                                                          description: A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
                                                          type: object
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                              type: array
                                                              items:
                                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                type: object
                                                                required:
                                                                  - key
                                                                  - operator
                                                                properties:
                                                                  key:
                                                                    description: key is the label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                            matchLabels:
                                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                              type: object
                                                              additionalProperties:
                                                                type: string
                                                          x-kubernetes-map-type: atomic
                                                        namespaces:
                                                          description: namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                          type: array
                                                          items:
                                                            type: string
                                                        topologyKey:
                                                          description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                                          type: string
                                              podAntiAffinity:
                                                description: Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
                                                type: object
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
                                                    type: array
                                                    items:
                                                      description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                                      type: object
                                                      required:
                                                        - podAffinityTerm
                                                        - weight
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A pod affinity term, associated with the corresponding weight.
                                                          type: object
                                                          required:
                                                            - topologyKey
                                                          properties:
                                                            labelSelector:
                                                              description: A label query over a set of resources, in this case pods.
                                                              type: object
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                  type: array
                                                                  items:
                                                                    description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                    type: object
                                                                    required:
                                                                      - key
                                                                      - operator
                                                                    properties:
                                                                      key:
                                                                        description: key is the label key that the selector applies to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                        type: array
                                                                        items:
                                                                          type: string
                                                                matchLabels:
                                                                  description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                  type: object
                                                                  additionalProperties:
                                                                    type: string
                                                              x-kubernetes-map-type: atomic
                                                            namespaceSelector:
                                                              description: A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
                                                              type: object
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                  type: array
                                                                  items:
                                                                    description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                    type: object
                                                                    required:
                                                                      - key
                                                                      - operator
                                                                    properties:
                                                                      key:
                                                                        description: key is the label key that the selector applies to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                        type: array
                                                                        items:
                                                                          type: string
                                                                matchLabels:
                                                                  description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                  type: object
                                                                  additionalProperties:
                                                                    type: string
                                                              x-kubernetes-map-type: atomic
                                                            namespaces:
                                                              description: namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                              type: array
                                                              items:
                                                                type: string
                                                            topologyKey:
                                                              description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                                              type: string
                                                        weight:
                                                          description: weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
                                                          type: integer
                                                          format: int32
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                                    type: array
                                                    items:
                                                      description: Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
                                                      type: object
                                                      required:
                                                        - topologyKey
                                                      properties:
                                                        labelSelector:
                                                          description: A label query over a set of resources, in this case pods.
                                                          type: object
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                              type: array
                                                              items:
                                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                type: object
                                                                required:
                                                                  - key
                                                                  - operator
                                                                properties:
                                                                  key:
                                                                    description: key is the label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                            matchLabels:
                                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                              type: object
                                                              additionalProperties:
                                                                type: string
                                                          x-kubernetes-map-type: atomic
                                                        namespaceSelector:
                                                          description: A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
                                                          type: object
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                              type: array
                                                              items:
                                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                type: object
                                                                required:
                                                                  - key
                                                                  - operator
                                                                properties:
                                                                  key:
                                                                    description: key is the label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                            matchLabels:
                                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                              type: object
                                                              additionalProperties:
                                                                type: string
                                                          x-kubernetes-map-type: atomic
                                                        namespaces:
                                                          description: namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                          type: array
                                                          items:
                                                            type: string
                                                        topologyKey:
                                                          description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                                          type: string
                                          nodeSelector:
                                            description: 'NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node''s labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                            type: object
                                            additionalProperties:
                                              type: string
                                          priorityClassName:
                                            description: If specified, the pod's priorityClassName.
                                            type: string
                                          serviceAccountName:
                                            description: If specified, the pod's service account
                                            type: string
                                          tolerations:
                                            description: If specified, the pod's tolerations.
                                            type: array
                                            items:
                                              description: The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
                                              type: object
                                              properties:
                                                effect:
                                                  description: Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                                  type: string
                                                key:
                                                  description: Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                                  type: string
                                                operator:
                                                  description: Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
                                                  type: string
                                                tolerationSeconds:
                                                  description: TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                                                  type: integer
                                                  format: int64
                                                value:
                                                  description: Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
                                                  type: string
                                  serviceType:
                                    description: Optional service type for Kubernetes solver service. Supported values are NodePort or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                          selector:
                            description: Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
                            type: object
                            properties:
                              dnsNames:
                                description: List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
                                type: array
                                items:
                                  type: string
                              dnsZones:
                                description: List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
                                type: array
                                items:
                                  type: string
                              matchLabels:
                                description: A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
                                type: object
                                additionalProperties:
                                  type: string
                ca:
                  description: CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
                  type: object
                  required:
                    - secretName
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.
                      type: array
                      items:
                        type: string
                    ocspServers:
                      description: The OCSP server list is an X.509 v3 extension that defines a list of URLs of OCSP responders. The OCSP responders can be queried for the revocation status of an issued certificate. If not set, the certificate will be issued with no OCSP servers set. For example, an OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
                      type: array
                      items:
                        type: string
                    secretName:
                      description: SecretName is the name of the secret used to sign Certificates issued by this Issuer.
                      type: string
                selfSigned:
                  description: SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
                  type: object
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.
                      type: array
                      items:
                        type: string
                vault:
                  description: Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
                  type: object
                  required:
                    - auth
                    - path
                    - server
                  properties:
                    auth:
                      description: Auth configures how cert-manager authenticates with the Vault server.
                      type: object
                      properties:
                        appRole:
                          description: AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
                          type: object
                          required:
                            - path
                            - roleId
                            - secretRef
                          properties:
                            path:
                              description: 'Path where the App Role authentication backend is mounted in Vault, e.g: "approle"'
                              type: string
                            roleId:
                              description: RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
                              type: string
                            secretRef:
                              description: Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
                              type: object
                              required:
                                - name
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                        kubernetes:
                          description: Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
                          type: object
                          required:
                            - role
                            - secretRef
                          properties:
                            mountPath:
                              description: The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value "/v1/auth/kubernetes" will be used.
                              type: string
                            role:
                              description: A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
                              type: string
                            secretRef:
                              description: The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
                              type: object
                              required:
                                - name
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                        tokenSecretRef:
                          description: TokenSecretRef authenticates with Vault by presenting a token.
                          type: object
                          required:
                            - name
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                    caBundle:
                      description: Base64-encoded bundle of PEM CAs which will be used to validate the certificate chain presented by Vault. Only used if using HTTPS to connect to Vault and ignored for HTTP connections. Mutually exclusive with CABundleSecretRef. If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in the cert-manager controller container is used to validate the TLS connection.
                      type: string
                      format: byte
                    caBundleSecretRef:
                      description: Reference to a Secret containing a bundle of PEM-encoded CAs to use when verifying the certificate chain presented by Vault when using HTTPS. Mutually exclusive with CABundle. If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in the cert-manager controller container is used to validate the TLS connection. If no key for the Secret is specified, cert-manager will default to 'ca.crt'.
                      type: object
                      required:
                        - name
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                    namespace:
                      description: 'Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1" More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                      type: string
                    path:
                      description: 'Path is the mount path of the Vault PKI backend''s `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".'
                      type: string
                    server:
                      description: 'Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".'
                      type: string
                venafi:
                  description: Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
                  type: object
                  required:
                    - zone
                  properties:
                    cloud:
                      description: Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
                      type: object
                      required:
                        - apiTokenSecretRef
                      properties:
                        apiTokenSecretRef:
                          description: APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
                          type: object
                          required:
                            - name
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                        url:
                          description: URL is the base URL for Venafi Cloud. Defaults to "https://api.venafi.cloud/v1".
                          type: string
                    tpp:
                      description: TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
                      type: object
                      required:
                        - credentialsRef
                        - url
                      properties:
                        caBundle:
                          description: Base64-encoded bundle of PEM CAs which will be used to validate the certificate chain presented by the TPP server. Only used if using HTTPS; ignored for HTTP. If undefined, the certificate bundle in the cert-manager controller container is used to validate the chain.
                          type: string
                          format: byte
                        credentialsRef:
                          description: CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
                          type: object
                          required:
                            - name
                          properties:
                            name:
                              description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                        url:
                          description: 'URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".'
                          type: string
                    zone:
                      description: Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.
                      type: string
            status:
              description: Status of the ClusterIssuer. This is set and managed automatically.
              type: object
              properties:
                acme:
                  description: ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
                  type: object
                  properties:
                    lastRegisteredEmail:
                      description: LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer
                      type: string
                    uri:
                      description: URI is the unique account identifier, which can also be used to retrieve account details from the CA
                      type: string
                conditions:
                  description: List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.
                  type: array
                  items:
                    description: IssuerCondition contains condition information for an Issuer.
                    type: object
                    required:
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding to the last status change of this condition.
                        type: string
                        format: date-time
                      message:
                        description: Message is a human readable description of the details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the Issuer.
                        type: integer
                        format: int64
                      reason:
                        description: Reason is a brief machine readable explanation for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`, `Unknown`).
                        type: string
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                      type:
                        description: Type of the condition, known values are (`Ready`).
                        type: string
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
      served: true
      storage: true
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: challenges.acme.cert-manager.io
  labels:
    app: 'cert-manager'
    app.kubernetes.io/name: 'cert-manager'
    app.kubernetes.io/instance: 'canvas'
    # Generated labels
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
spec:
  group: acme.cert-manager.io
  names:
    kind: Challenge
    listKind: ChallengeList
    plural: challenges
    singular: challenge
    categories:
      - cert-manager
      - cert-manager-acme
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .spec.dnsName
          name: Domain
          type: string
        - jsonPath: .status.reason
          name: Reason
          priority: 1
          type: string
        - description: CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: Challenge is a type to represent a Challenge request with an ACME server
          type: object
          required:
            - metadata
            - spec
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              type: object
              required:
                - authorizationURL
                - dnsName
                - issuerRef
                - key
                - solver
                - token
                - type
                - url
              properties:
                authorizationURL:
                  description: The URL to the ACME Authorization resource that this challenge is a part of.
                  type: string
                dnsName:
                  description: dnsName is the identifier that this challenge is for, e.g. example.com. If the requested DNSName is a 'wildcard', this field MUST be set to the non-wildcard domain, e.g. for `*.example.com`, it must be `example.com`.
                  type: string
                issuerRef:
                  description: References a properly configured ACME-type Issuer which should be used to create this Challenge. If the Issuer does not exist, processing will be retried. If the Issuer is not an 'ACME' Issuer, an error will be returned and the Challenge will be marked as failed.
                  type: object
                  required:
                    - name
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                key:
                  description: 'The ACME challenge key for this challenge For HTTP01 challenges, this is the value that must be responded with to complete the HTTP01 challenge in the format: `<private key JWK thumbprint>.<key from acme server for challenge>`. For DNS01 challenges, this is the base64 encoded SHA256 sum of the `<private key JWK thumbprint>.<key from acme server for challenge>` text that must be set as the TXT record content.'
                  type: string
                solver:
                  description: Contains the domain solving configuration that should be used to solve this challenge resource.
                  type: object
                  properties:
                    dns01:
                      description: Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
                      type: object
                      properties:
                        acmeDNS:
                          description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
                          type: object
                          required:
                            - accountSecretRef
                            - host
                          properties:
                            accountSecretRef:
                              description: A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
                              type: object
                              required:
                                - name
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                            host:
                              type: string
                        akamai:
                          description: Use the Akamai DNS zone management API to manage DNS01 challenge records.
                          type: object
                          required:
                            - accessTokenSecretRef
                            - clientSecretSecretRef
                            - clientTokenSecretRef
                            - serviceConsumerDomain
                          properties:
                            accessTokenSecretRef:
                              description: A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
                              type: object
                              required:
                                - name
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                            clientSecretSecretRef:
                              description: A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
                              type: object
                              required:
                                - name
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                            clientTokenSecretRef:
                              description: A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
                              type: object
                              required:
                                - name
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                            serviceConsumerDomain:
                              type: string
                        azureDNS:
                          description: Use the Microsoft Azure DNS API to manage DNS01 challenge records.
                          type: object
                          required:
                            - resourceGroupName
                            - subscriptionID
                          properties:
                            clientID:
                              description: if both this and ClientSecret are left unset MSI will be used
                              type: string
                            clientSecretSecretRef:
                              description: if both this and ClientID are left unset MSI will be used
                              type: object
                              required:
                                - name
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                            environment:
                              description: name of the Azure environment (default AzurePublicCloud)
                              type: string
                              enum:
                                - AzurePublicCloud
                                - AzureChinaCloud
                                - AzureGermanCloud
                                - AzureUSGovernmentCloud
                            hostedZoneName:
                              description: name of the DNS zone that should be used
                              type: string
                            managedIdentity:
                              description: managed identity configuration, can not be used at the same time as clientID, clientSecretSecretRef or tenantID
                              type: object
                              properties:
                                clientID:
                                  description: client ID of the managed identity, can not be used at the same time as resourceID
                                  type: string
                                resourceID:
                                  description: resource ID of the managed identity, can not be used at the same time as clientID
                                  type: string
                            resourceGroupName:
                              description: resource group the DNS zone is located in
                              type: string
                            subscriptionID:
                              description: ID of the Azure subscription
                              type: string
                            tenantID:
                              description: when specifying ClientID and ClientSecret then this field is also needed
                              type: string
                        cloudDNS:
                          description: Use the Google Cloud DNS API to manage DNS01 challenge records.
                          type: object
                          required:
                            - project
                          properties:
                            hostedZoneName:
                              description: HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.
                              type: string
                            project:
                              type: string
                            serviceAccountSecretRef:
                              description: A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
                              type: object
                              required:
                                - name
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                        cloudflare:
                          description: Use the Cloudflare API to manage DNS01 challenge records.
                          type: object
                          properties:
                            apiKeySecretRef:
                              description: 'API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.'
                              type: object
                              required:
                                - name
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                            apiTokenSecretRef:
                              description: API token used to authenticate with Cloudflare.
                              type: object
                              required:
                                - name
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                            email:
                              description: Email of the account, only required when using API key based authentication.
                              type: string
                        cnameStrategy:
                          description: CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.
                          type: string
                          enum:
                            - None
                            - Follow
                        digitalocean:
                          description: Use the DigitalOcean DNS API to manage DNS01 challenge records.
                          type: object
                          required:
                            - tokenSecretRef
                          properties:
                            tokenSecretRef:
                              description: A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
                              type: object
                              required:
                                - name
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                        rfc2136:
                          description: Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
                          type: object
                          required:
                            - nameserver
                          properties:
                            nameserver:
                              description: The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.
                              type: string
                            tsigAlgorithm:
                              description: 'The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'
                              type: string
                            tsigKeyName:
                              description: The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.
                              type: string
                            tsigSecretSecretRef:
                              description: The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
                              type: object
                              required:
                                - name
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                        route53:
                          description: Use the AWS Route53 API to manage DNS01 challenge records.
                          type: object
                          required:
                            - region
                          properties:
                            accessKeyID:
                              description: 'The AccessKeyID is used for authentication. Cannot be set when SecretAccessKeyID is set. If neither the Access Key nor Key ID are set, we fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                              type: string
                            accessKeyIDSecretRef:
                              description: 'The SecretAccessKey is used for authentication. If set, pull the AWS access key ID from a key within a Kubernetes Secret. Cannot be set when AccessKeyID is set. If neither the Access Key nor Key ID are set, we fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                              type: object
                              required:
                                - name
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                            hostedZoneID:
                              description: If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.
                              type: string
                            region:
                              description: Always set the region when using AccessKeyID and SecretAccessKey
                              type: string
                            role:
                              description: Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
                              type: string
                            secretAccessKeySecretRef:
                              description: 'The SecretAccessKey is used for authentication. If neither the Access Key nor Key ID are set, we fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                              type: object
                              required:
                                - name
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                        webhook:
                          description: Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
                          type: object
                          required:
                            - groupName
                            - solverName
                          properties:
                            config:
                              description: Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.
                              x-kubernetes-preserve-unknown-fields: true
                            groupName:
                              description: The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.
                              type: string
                            solverName:
                              description: The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.
                              type: string
                    http01:
                      description: Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
                      type: object
                      properties:
                        gatewayHTTPRoute:
                          description: The Gateway API is a sig-network community API that models service networking in Kubernetes (https://gateway-api.sigs.k8s.io/). The Gateway solver will create HTTPRoutes with the specified labels in the same namespace as the challenge. This solver is experimental, and fields / behaviour may change in the future.
                          type: object
                          properties:
                            labels:
                              description: Custom labels that will be applied to HTTPRoutes created by cert-manager while solving HTTP-01 challenges.
                              type: object
                              additionalProperties:
                                type: string
                            parentRefs:
                              description: 'When solving an HTTP-01 challenge, cert-manager creates an HTTPRoute. cert-manager needs to know which parentRefs should be used when creating the HTTPRoute. Usually, the parentRef references a Gateway. See: https://gateway-api.sigs.k8s.io/api-types/httproute/#attaching-to-gateways'
                              type: array
                              items:
                                description: "ParentReference identifies an API object (usually a Gateway) that can be considered a parent of this resource (usually a route). The only kind of parent resource with \"Core\" support is Gateway. This API may be extended in the future to support additional kinds of parent resources, such as HTTPRoute. \n The API object must be valid in the cluster; the Group and Kind must be registered in the cluster for this reference to be valid."
                                type: object
                                required:
                                  - name
                                properties:
                                  group:
                                    description: "Group is the group of the referent. When unspecified, \"gateway.networking.k8s.io\" is inferred. To set the core API group (such as for a \"Service\" kind referent), Group must be explicitly set to \"\" (empty string). \n Support: Core"
                                    type: string
                                    default: gateway.networking.k8s.io
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  kind:
                                    description: "Kind is kind of the referent. \n Support: Core (Gateway) \n Support: Implementation-specific (Other Resources)"
                                    type: string
                                    default: Gateway
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                  name:
                                    description: "Name is the name of the referent. \n Support: Core"
                                    type: string
                                    maxLength: 253
                                    minLength: 1
                                  namespace:
                                    description: "Namespace is the namespace of the referent. When unspecified, this refers to the local namespace of the Route. \n Note that there are specific rules for ParentRefs which cross namespace boundaries. Cross-namespace references are only valid if they are explicitly allowed by something in the namespace they are referring to. For example: Gateway has the AllowedRoutes field, and ReferenceGrant provides a generic way to enable any other kind of cross-namespace reference. \n Support: Core"
                                    type: string
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                  port:
                                    description: "Port is the network port this Route targets. It can be interpreted differently based on the type of parent resource. \n When the parent resource is a Gateway, this targets all listeners listening on the specified port that also support this kind of Route(and select this Route). It's not recommended to set `Port` unless the networking behaviors specified in a Route must apply to a specific port as opposed to a listener(s) whose port(s) may be changed. When both Port and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support other parent resources. Implementations supporting other types of parent resources MUST clearly document how/if Port is interpreted. \n For the purpose of status, an attachment is considered successful as long as the parent resource accepts it partially. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Extended \n <gateway:experimental>"
                                    type: integer
                                    format: int32
                                    maximum: 65535
                                    minimum: 1
                                  sectionName:
                                    description: "SectionName is the name of a section within the target resource. In the following resources, SectionName is interpreted as the following: \n * Gateway: Listener Name. When both Port (experimental) and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support attaching Routes to other resources. If that is the case, they MUST clearly document how SectionName is interpreted. \n When unspecified (empty string), this will reference the entire resource. For the purpose of status, an attachment is considered successful if at least one section in the parent resource accepts it. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Core"
                                    type: string
                                    maxLength: 253
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            serviceType:
                              description: Optional service type for Kubernetes solver service. Supported values are NodePort or ClusterIP. If unset, defaults to NodePort.
                              type: string
                        ingress:
                          description: The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
                          type: object
                          properties:
                            class:
                              description: The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.
                              type: string
                            ingressTemplate:
                              description: Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges.
                              type: object
                              properties:
                                metadata:
                                  description: ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
                                  type: object
                                  properties:
                                    annotations:
                                      description: Annotations that should be added to the created ACME HTTP01 solver ingress.
                                      type: object
                                      additionalProperties:
                                        type: string
                                    labels:
                                      description: Labels that should be added to the created ACME HTTP01 solver ingress.
                                      type: object
                                      additionalProperties:
                                        type: string
                            name:
                              description: The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.
                              type: string
                            podTemplate:
                              description: Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges.
                              type: object
                              properties:
                                metadata:
                                  description: ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
                                  type: object
                                  properties:
                                    annotations:
                                      description: Annotations that should be added to the create ACME HTTP01 solver pods.
                                      type: object
                                      additionalProperties:
                                        type: string
                                    labels:
                                      description: Labels that should be added to the created ACME HTTP01 solver pods.
                                      type: object
                                      additionalProperties:
                                        type: string
                                spec:
                                  description: PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.
                                  type: object
                                  properties:
                                    affinity:
                                      description: If specified, the pod's scheduling constraints
                                      type: object
                                      properties:
                                        nodeAffinity:
                                          description: Describes node affinity scheduling rules for the pod.
                                          type: object
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
                                              type: array
                                              items:
                                                description: An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                                type: object
                                                required:
                                                  - preference
                                                  - weight
                                                properties:
                                                  preference:
                                                    description: A node selector term, associated with the corresponding weight.
                                                    type: object
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node selector requirements by node's labels.
                                                        type: array
                                                        items:
                                                          description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                          type: object
                                                          required:
                                                            - key
                                                            - operator
                                                          properties:
                                                            key:
                                                              description: The label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                              type: string
                                                            values:
                                                              description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                              type: array
                                                              items:
                                                                type: string
                                                      matchFields:
                                                        description: A list of node selector requirements by node's fields.
                                                        type: array
                                                        items:
                                                          description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                          type: object
                                                          required:
                                                            - key
                                                            - operator
                                                          properties:
                                                            key:
                                                              description: The label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                              type: string
                                                            values:
                                                              description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                              type: array
                                                              items:
                                                                type: string
                                                    x-kubernetes-map-type: atomic
                                                  weight:
                                                    description: Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                                                    type: integer
                                                    format: int32
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
                                              type: object
                                              required:
                                                - nodeSelectorTerms
                                              properties:
                                                nodeSelectorTerms:
                                                  description: Required. A list of node selector terms. The terms are ORed.
                                                  type: array
                                                  items:
                                                    description: A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                                    type: object
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node selector requirements by node's labels.
                                                        type: array
                                                        items:
                                                          description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                          type: object
                                                          required:
                                                            - key
                                                            - operator
                                                          properties:
                                                            key:
                                                              description: The label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                              type: string
                                                            values:
                                                              description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                              type: array
                                                              items:
                                                                type: string
                                                      matchFields:
                                                        description: A list of node selector requirements by node's fields.
                                                        type: array
                                                        items:
                                                          description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                          type: object
                                                          required:
                                                            - key
                                                            - operator
                                                          properties:
                                                            key:
                                                              description: The label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                              type: string
                                                            values:
                                                              description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                              type: array
                                                              items:
                                                                type: string
                                                    x-kubernetes-map-type: atomic
                                              x-kubernetes-map-type: atomic
                                        podAffinity:
                                          description: Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
                                          type: object
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
                                              type: array
                                              items:
                                                description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                                type: object
                                                required:
                                                  - podAffinityTerm
                                                  - weight
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity term, associated with the corresponding weight.
                                                    type: object
                                                    required:
                                                      - topologyKey
                                                    properties:
                                                      labelSelector:
                                                        description: A label query over a set of resources, in this case pods.
                                                        type: object
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                            type: array
                                                            items:
                                                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                              type: object
                                                              required:
                                                                - key
                                                                - operator
                                                              properties:
                                                                key:
                                                                  description: key is the label key that the selector applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                          matchLabels:
                                                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                            type: object
                                                            additionalProperties:
                                                              type: string
                                                        x-kubernetes-map-type: atomic
                                                      namespaceSelector:
                                                        description: A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
                                                        type: object
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                            type: array
                                                            items:
                                                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                              type: object
                                                              required:
                                                                - key
                                                                - operator
                                                              properties:
                                                                key:
                                                                  description: key is the label key that the selector applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                          matchLabels:
                                                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                            type: object
                                                            additionalProperties:
                                                              type: string
                                                        x-kubernetes-map-type: atomic
                                                      namespaces:
                                                        description: namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                        type: array
                                                        items:
                                                          type: string
                                                      topologyKey:
                                                        description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                                        type: string
                                                  weight:
                                                    description: weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
                                                    type: integer
                                                    format: int32
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                              type: array
                                              items:
                                                description: Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
                                                type: object
                                                required:
                                                  - topologyKey
                                                properties:
                                                  labelSelector:
                                                    description: A label query over a set of resources, in this case pods.
                                                    type: object
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                        type: array
                                                        items:
                                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                          type: object
                                                          required:
                                                            - key
                                                            - operator
                                                          properties:
                                                            key:
                                                              description: key is the label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                              type: array
                                                              items:
                                                                type: string
                                                      matchLabels:
                                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                        type: object
                                                        additionalProperties:
                                                          type: string
                                                    x-kubernetes-map-type: atomic
                                                  namespaceSelector:
                                                    description: A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
                                                    type: object
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                        type: array
                                                        items:
                                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                          type: object
                                                          required:
                                                            - key
                                                            - operator
                                                          properties:
                                                            key:
                                                              description: key is the label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                              type: array
                                                              items:
                                                                type: string
                                                      matchLabels:
                                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                        type: object
                                                        additionalProperties:
                                                          type: string
                                                    x-kubernetes-map-type: atomic
                                                  namespaces:
                                                    description: namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                    type: array
                                                    items:
                                                      type: string
                                                  topologyKey:
                                                    description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                                    type: string
                                        podAntiAffinity:
                                          description: Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
                                          type: object
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
                                              type: array
                                              items:
                                                description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                                type: object
                                                required:
                                                  - podAffinityTerm
                                                  - weight
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity term, associated with the corresponding weight.
                                                    type: object
                                                    required:
                                                      - topologyKey
                                                    properties:
                                                      labelSelector:
                                                        description: A label query over a set of resources, in this case pods.
                                                        type: object
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                            type: array
                                                            items:
                                                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                              type: object
                                                              required:
                                                                - key
                                                                - operator
                                                              properties:
                                                                key:
                                                                  description: key is the label key that the selector applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                          matchLabels:
                                                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                            type: object
                                                            additionalProperties:
                                                              type: string
                                                        x-kubernetes-map-type: atomic
                                                      namespaceSelector:
                                                        description: A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
                                                        type: object
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                            type: array
                                                            items:
                                                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                              type: object
                                                              required:
                                                                - key
                                                                - operator
                                                              properties:
                                                                key:
                                                                  description: key is the label key that the selector applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                          matchLabels:
                                                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                            type: object
                                                            additionalProperties:
                                                              type: string
                                                        x-kubernetes-map-type: atomic
                                                      namespaces:
                                                        description: namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                        type: array
                                                        items:
                                                          type: string
                                                      topologyKey:
                                                        description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                                        type: string
                                                  weight:
                                                    description: weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
                                                    type: integer
                                                    format: int32
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                              type: array
                                              items:
                                                description: Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
                                                type: object
                                                required:
                                                  - topologyKey
                                                properties:
                                                  labelSelector:
                                                    description: A label query over a set of resources, in this case pods.
                                                    type: object
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                        type: array
                                                        items:
                                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                          type: object
                                                          required:
                                                            - key
                                                            - operator
                                                          properties:
                                                            key:
                                                              description: key is the label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                              type: array
                                                              items:
                                                                type: string
                                                      matchLabels:
                                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                        type: object
                                                        additionalProperties:
                                                          type: string
                                                    x-kubernetes-map-type: atomic
                                                  namespaceSelector:
                                                    description: A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
                                                    type: object
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                        type: array
                                                        items:
                                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                          type: object
                                                          required:
                                                            - key
                                                            - operator
                                                          properties:
                                                            key:
                                                              description: key is the label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                              type: array
                                                              items:
                                                                type: string
                                                      matchLabels:
                                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                        type: object
                                                        additionalProperties:
                                                          type: string
                                                    x-kubernetes-map-type: atomic
                                                  namespaces:
                                                    description: namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                    type: array
                                                    items:
                                                      type: string
                                                  topologyKey:
                                                    description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                                    type: string
                                    nodeSelector:
                                      description: 'NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node''s labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                      type: object
                                      additionalProperties:
                                        type: string
                                    priorityClassName:
                                      description: If specified, the pod's priorityClassName.
                                      type: string
                                    serviceAccountName:
                                      description: If specified, the pod's service account
                                      type: string
                                    tolerations:
                                      description: If specified, the pod's tolerations.
                                      type: array
                                      items:
                                        description: The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
                                        type: object
                                        properties:
                                          effect:
                                            description: Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                            type: string
                                          key:
                                            description: Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                            type: string
                                          operator:
                                            description: Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
                                            type: string
                                          tolerationSeconds:
                                            description: TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                                            type: integer
                                            format: int64
                                          value:
                                            description: Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
                                            type: string
                            serviceType:
                              description: Optional service type for Kubernetes solver service. Supported values are NodePort or ClusterIP. If unset, defaults to NodePort.
                              type: string
                    selector:
                      description: Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
                      type: object
                      properties:
                        dnsNames:
                          description: List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
                          type: array
                          items:
                            type: string
                        dnsZones:
                          description: List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
                          type: array
                          items:
                            type: string
                        matchLabels:
                          description: A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
                          type: object
                          additionalProperties:
                            type: string
                token:
                  description: The ACME challenge token for this challenge. This is the raw value returned from the ACME server.
                  type: string
                type:
                  description: The type of ACME challenge this resource represents. One of "HTTP-01" or "DNS-01".
                  type: string
                  enum:
                    - HTTP-01
                    - DNS-01
                url:
                  description: The URL of the ACME Challenge resource for this challenge. This can be used to lookup details about the status of this challenge.
                  type: string
                wildcard:
                  description: wildcard will be true if this challenge is for a wildcard identifier, for example '*.example.com'.
                  type: boolean
            status:
              type: object
              properties:
                presented:
                  description: presented will be set to true if the challenge values for this challenge are currently 'presented'. This *does not* imply the self check is passing. Only that the values have been 'submitted' for the appropriate challenge mechanism (i.e. the DNS01 TXT record has been presented, or the HTTP01 configuration has been configured).
                  type: boolean
                processing:
                  description: Used to denote whether this challenge should be processed or not. This field will only be set to true by the 'scheduling' component. It will only be set to false by the 'challenges' controller, after the challenge has reached a final state or timed out. If this field is set to false, the challenge controller will not take any more action.
                  type: boolean
                reason:
                  description: Contains human readable information on why the Challenge is in the current state.
                  type: string
                state:
                  description: Contains the current 'state' of the challenge. If not set, the state of the challenge is unknown.
                  type: string
                  enum:
                    - valid
                    - ready
                    - pending
                    - processing
                    - invalid
                    - expired
                    - errored
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: certificaterequests.cert-manager.io
  labels:
    app: 'cert-manager'
    app.kubernetes.io/name: 'cert-manager'
    app.kubernetes.io/instance: 'canvas'
    # Generated labels
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
spec:
  group: cert-manager.io
  names:
    kind: CertificateRequest
    listKind: CertificateRequestList
    plural: certificaterequests
    shortNames:
      - cr
      - crs
    singular: certificaterequest
    categories:
      - cert-manager
  scope: Namespaced
  versions:
    - name: v1
      subresources:
        status: {}
      additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=="Approved")].status
          name: Approved
          type: string
        - jsonPath: .status.conditions[?(@.type=="Denied")].status
          name: Denied
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .spec.issuerRef.name
          name: Issuer
          type: string
        - jsonPath: .spec.username
          name: Requestor
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          priority: 1
          type: string
        - jsonPath: .metadata.creationTimestamp
          description: CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
          name: Age
          type: date
      schema:
        openAPIV3Schema:
          description: "A CertificateRequest is used to request a signed certificate from one of the configured issuers. \n All fields within the CertificateRequest's `spec` are immutable after creation. A CertificateRequest will either succeed or fail, as denoted by its `status.state` field. \n A CertificateRequest is a one-shot resource, meaning it represents a single point in time request for a certificate and cannot be re-used."
          type: object
          required:
            - spec
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the CertificateRequest resource.
              type: object
              required:
                - issuerRef
                - request
              properties:
                duration:
                  description: The requested 'duration' (i.e. lifetime) of the Certificate. This option may be ignored/overridden by some issuer types.
                  type: string
                extra:
                  description: Extra contains extra attributes of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.
                  type: object
                  additionalProperties:
                    type: array
                    items:
                      type: string
                groups:
                  description: Groups contains group membership of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.
                  type: array
                  items:
                    type: string
                  x-kubernetes-list-type: atomic
                isCA:
                  description: IsCA will request to mark the certificate as valid for certificate signing when submitting to the issuer. This will automatically add the `cert sign` usage to the list of `usages`.
                  type: boolean
                issuerRef:
                  description: IssuerRef is a reference to the issuer for this CertificateRequest.  If the `kind` field is not set, or set to `Issuer`, an Issuer resource with the given name in the same namespace as the CertificateRequest will be used.  If the `kind` field is set to `ClusterIssuer`, a ClusterIssuer with the provided name will be used. The `name` field in this stanza is required at all times. The group field refers to the API group of the issuer which defaults to `cert-manager.io` if empty.
                  type: object
                  required:
                    - name
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                request:
                  description: The PEM-encoded x509 certificate signing request to be submitted to the CA for signing.
                  type: string
                  format: byte
                uid:
                  description: UID contains the uid of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.
                  type: string
                usages:
                  description: Usages is the set of x509 usages that are requested for the certificate. If usages are set they SHOULD be encoded inside the CSR spec Defaults to `digital signature` and `key encipherment` if not specified.
                  type: array
                  items:
                    description: "KeyUsage specifies valid usage contexts for keys. See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3 https://tools.ietf.org/html/rfc5280#section-4.2.1.12 \n Valid KeyUsage values are as follows: \"signing\", \"digital signature\", \"content commitment\", \"key encipherment\", \"key agreement\", \"data encipherment\", \"cert sign\", \"crl sign\", \"encipher only\", \"decipher only\", \"any\", \"server auth\", \"client auth\", \"code signing\", \"email protection\", \"s/mime\", \"ipsec end system\", \"ipsec tunnel\", \"ipsec user\", \"timestamping\", \"ocsp signing\", \"microsoft sgc\", \"netscape sgc\""
                    type: string
                    enum:
                      - signing
                      - digital signature
                      - content commitment
                      - key encipherment
                      - key agreement
                      - data encipherment
                      - cert sign
                      - crl sign
                      - encipher only
                      - decipher only
                      - any
                      - server auth
                      - client auth
                      - code signing
                      - email protection
                      - s/mime
                      - ipsec end system
                      - ipsec tunnel
                      - ipsec user
                      - timestamping
                      - ocsp signing
                      - microsoft sgc
                      - netscape sgc
                username:
                  description: Username contains the name of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.
                  type: string
            status:
              description: Status of the CertificateRequest. This is set and managed automatically.
              type: object
              properties:
                ca:
                  description: The PEM encoded x509 certificate of the signer, also known as the CA (Certificate Authority). This is set on a best-effort basis by different issuers. If not set, the CA is assumed to be unknown/not available.
                  type: string
                  format: byte
                certificate:
                  description: The PEM encoded x509 certificate resulting from the certificate signing request. If not set, the CertificateRequest has either not been completed or has failed. More information on failure can be found by checking the `conditions` field.
                  type: string
                  format: byte
                conditions:
                  description: List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready` and `InvalidRequest`.
                  type: array
                  items:
                    description: CertificateRequestCondition contains condition information for a CertificateRequest.
                    type: object
                    required:
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding to the last status change of this condition.
                        type: string
                        format: date-time
                      message:
                        description: Message is a human readable description of the details of the last transition, complementing reason.
                        type: string
                      reason:
                        description: Reason is a brief machine readable explanation for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`, `Unknown`).
                        type: string
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                      type:
                        description: Type of the condition, known values are (`Ready`, `InvalidRequest`, `Approved`, `Denied`).
                        type: string
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                failureTime:
                  description: FailureTime stores the time that this CertificateRequest failed. This is used to influence garbage collection and back-off.
                  type: string
                  format: date-time
      served: true
      storage: true
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: issuers.cert-manager.io
  labels:
    app: 'cert-manager'
    app.kubernetes.io/name: 'cert-manager'
    app.kubernetes.io/instance: 'canvas'
    # Generated labels
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
spec:
  group: cert-manager.io
  names:
    kind: Issuer
    listKind: IssuerList
    plural: issuers
    singular: issuer
    categories:
      - cert-manager
  scope: Namespaced
  versions:
    - name: v1
      subresources:
        status: {}
      additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          priority: 1
          type: string
        - jsonPath: .metadata.creationTimestamp
          description: CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
          name: Age
          type: date
      schema:
        openAPIV3Schema:
          description: An Issuer represents a certificate issuing authority which can be referenced as part of `issuerRef` fields. It is scoped to a single namespace and can therefore only be referenced by resources within the same namespace.
          type: object
          required:
            - spec
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the Issuer resource.
              type: object
              properties:
                acme:
                  description: ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
                  type: object
                  required:
                    - privateKeySecretRef
                    - server
                  properties:
                    caBundle:
                      description: Base64-encoded bundle of PEM CAs which can be used to validate the certificate chain presented by the ACME server. Mutually exclusive with SkipTLSVerify; prefer using CABundle to prevent various kinds of security vulnerabilities. If CABundle and SkipTLSVerify are unset, the system certificate bundle inside the container is used to validate the TLS connection.
                      type: string
                      format: byte
                    disableAccountKeyGeneration:
                      description: Enables or disables generating a new ACME account key. If true, the Issuer resource will *not* request a new account but will expect the account key to be supplied via an existing secret. If false, the cert-manager system will generate a new ACME account key for the Issuer. Defaults to false.
                      type: boolean
                    email:
                      description: Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.
                      type: string
                    enableDurationFeature:
                      description: Enables requesting a Not After date on certificates that matches the duration of the certificate. This is not supported by all ACME servers like Let's Encrypt. If set to true when the ACME server does not support it it will create an error on the Order. Defaults to false.
                      type: boolean
                    externalAccountBinding:
                      description: ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
                      type: object
                      required:
                        - keyID
                        - keySecretRef
                      properties:
                        keyAlgorithm:
                          description: 'Deprecated: keyAlgorithm field exists for historical compatibility reasons and should not be used. The algorithm is now hardcoded to HS256 in golang/x/crypto/acme.'
                          type: string
                          enum:
                            - HS256
                            - HS384
                            - HS512
                        keyID:
                          description: keyID is the ID of the CA key that the External Account is bound to.
                          type: string
                        keySecretRef:
                          description: keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
                          type: object
                          required:
                            - name
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                    preferredChain:
                      description: 'PreferredChain is the chain to use if the ACME server outputs multiple. PreferredChain is no guarantee that this one gets delivered by the ACME endpoint. For example, for Let''s Encrypt''s DST crosssign you would use: "DST Root CA X3" or "ISRG Root X1" for the newer Let''s Encrypt root CA. This value picks the first certificate bundle in the ACME alternative chains that has a certificate with this value as its issuer''s CN'
                      type: string
                      maxLength: 64
                    privateKeySecretRef:
                      description: PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
                      type: object
                      required:
                        - name
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                    server:
                      description: 'Server is the URL used to access the ACME server''s ''directory'' endpoint. For example, for Let''s Encrypt''s staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory". Only ACME v2 endpoints (i.e. RFC 8555) are supported.'
                      type: string
                    skipTLSVerify:
                      description: 'INSECURE: Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have the TLS certificate chain validated. Mutually exclusive with CABundle; prefer using CABundle to prevent various kinds of security vulnerabilities. Only enable this option in development environments. If CABundle and SkipTLSVerify are unset, the system certificate bundle inside the container is used to validate the TLS connection. Defaults to false.'
                      type: boolean
                    solvers:
                      description: 'Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/'
                      type: array
                      items:
                        description: An ACMEChallengeSolver describes how to solve ACME challenges for the issuer it is part of. A selector may be provided to use different solving strategies for different DNS names. Only one of HTTP01 or DNS01 must be provided.
                        type: object
                        properties:
                          dns01:
                            description: Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
                            type: object
                            properties:
                              acmeDNS:
                                description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
                                type: object
                                required:
                                  - accountSecretRef
                                  - host
                                properties:
                                  accountSecretRef:
                                    description: A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                  host:
                                    type: string
                              akamai:
                                description: Use the Akamai DNS zone management API to manage DNS01 challenge records.
                                type: object
                                required:
                                  - accessTokenSecretRef
                                  - clientSecretSecretRef
                                  - clientTokenSecretRef
                                  - serviceConsumerDomain
                                properties:
                                  accessTokenSecretRef:
                                    description: A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                  clientSecretSecretRef:
                                    description: A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                  clientTokenSecretRef:
                                    description: A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                  serviceConsumerDomain:
                                    type: string
                              azureDNS:
                                description: Use the Microsoft Azure DNS API to manage DNS01 challenge records.
                                type: object
                                required:
                                  - resourceGroupName
                                  - subscriptionID
                                properties:
                                  clientID:
                                    description: if both this and ClientSecret are left unset MSI will be used
                                    type: string
                                  clientSecretSecretRef:
                                    description: if both this and ClientID are left unset MSI will be used
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                  environment:
                                    description: name of the Azure environment (default AzurePublicCloud)
                                    type: string
                                    enum:
                                      - AzurePublicCloud
                                      - AzureChinaCloud
                                      - AzureGermanCloud
                                      - AzureUSGovernmentCloud
                                  hostedZoneName:
                                    description: name of the DNS zone that should be used
                                    type: string
                                  managedIdentity:
                                    description: managed identity configuration, can not be used at the same time as clientID, clientSecretSecretRef or tenantID
                                    type: object
                                    properties:
                                      clientID:
                                        description: client ID of the managed identity, can not be used at the same time as resourceID
                                        type: string
                                      resourceID:
                                        description: resource ID of the managed identity, can not be used at the same time as clientID
                                        type: string
                                  resourceGroupName:
                                    description: resource group the DNS zone is located in
                                    type: string
                                  subscriptionID:
                                    description: ID of the Azure subscription
                                    type: string
                                  tenantID:
                                    description: when specifying ClientID and ClientSecret then this field is also needed
                                    type: string
                              cloudDNS:
                                description: Use the Google Cloud DNS API to manage DNS01 challenge records.
                                type: object
                                required:
                                  - project
                                properties:
                                  hostedZoneName:
                                    description: HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.
                                    type: string
                                  project:
                                    type: string
                                  serviceAccountSecretRef:
                                    description: A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                              cloudflare:
                                description: Use the Cloudflare API to manage DNS01 challenge records.
                                type: object
                                properties:
                                  apiKeySecretRef:
                                    description: 'API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.'
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                  apiTokenSecretRef:
                                    description: API token used to authenticate with Cloudflare.
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                  email:
                                    description: Email of the account, only required when using API key based authentication.
                                    type: string
                              cnameStrategy:
                                description: CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.
                                type: string
                                enum:
                                  - None
                                  - Follow
                              digitalocean:
                                description: Use the DigitalOcean DNS API to manage DNS01 challenge records.
                                type: object
                                required:
                                  - tokenSecretRef
                                properties:
                                  tokenSecretRef:
                                    description: A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                              rfc2136:
                                description: Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
                                type: object
                                required:
                                  - nameserver
                                properties:
                                  nameserver:
                                    description: The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.
                                    type: string
                                  tsigAlgorithm:
                                    description: 'The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'
                                    type: string
                                  tsigKeyName:
                                    description: The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.
                                    type: string
                                  tsigSecretSecretRef:
                                    description: The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                              route53:
                                description: Use the AWS Route53 API to manage DNS01 challenge records.
                                type: object
                                required:
                                  - region
                                properties:
                                  accessKeyID:
                                    description: 'The AccessKeyID is used for authentication. Cannot be set when SecretAccessKeyID is set. If neither the Access Key nor Key ID are set, we fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    type: string
                                  accessKeyIDSecretRef:
                                    description: 'The SecretAccessKey is used for authentication. If set, pull the AWS access key ID from a key within a Kubernetes Secret. Cannot be set when AccessKeyID is set. If neither the Access Key nor Key ID are set, we fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                  hostedZoneID:
                                    description: If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.
                                    type: string
                                  region:
                                    description: Always set the region when using AccessKeyID and SecretAccessKey
                                    type: string
                                  role:
                                    description: Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
                                    type: string
                                  secretAccessKeySecretRef:
                                    description: 'The SecretAccessKey is used for authentication. If neither the Access Key nor Key ID are set, we fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                              webhook:
                                description: Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
                                type: object
                                required:
                                  - groupName
                                  - solverName
                                properties:
                                  config:
                                    description: Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.
                                    x-kubernetes-preserve-unknown-fields: true
                                  groupName:
                                    description: The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.
                                    type: string
                                  solverName:
                                    description: The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.
                                    type: string
                          http01:
                            description: Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
                            type: object
                            properties:
                              gatewayHTTPRoute:
                                description: The Gateway API is a sig-network community API that models service networking in Kubernetes (https://gateway-api.sigs.k8s.io/). The Gateway solver will create HTTPRoutes with the specified labels in the same namespace as the challenge. This solver is experimental, and fields / behaviour may change in the future.
                                type: object
                                properties:
                                  labels:
                                    description: Custom labels that will be applied to HTTPRoutes created by cert-manager while solving HTTP-01 challenges.
                                    type: object
                                    additionalProperties:
                                      type: string
                                  parentRefs:
                                    description: 'When solving an HTTP-01 challenge, cert-manager creates an HTTPRoute. cert-manager needs to know which parentRefs should be used when creating the HTTPRoute. Usually, the parentRef references a Gateway. See: https://gateway-api.sigs.k8s.io/api-types/httproute/#attaching-to-gateways'
                                    type: array
                                    items:
                                      description: "ParentReference identifies an API object (usually a Gateway) that can be considered a parent of this resource (usually a route). The only kind of parent resource with \"Core\" support is Gateway. This API may be extended in the future to support additional kinds of parent resources, such as HTTPRoute. \n The API object must be valid in the cluster; the Group and Kind must be registered in the cluster for this reference to be valid."
                                      type: object
                                      required:
                                        - name
                                      properties:
                                        group:
                                          description: "Group is the group of the referent. When unspecified, \"gateway.networking.k8s.io\" is inferred. To set the core API group (such as for a \"Service\" kind referent), Group must be explicitly set to \"\" (empty string). \n Support: Core"
                                          type: string
                                          default: gateway.networking.k8s.io
                                          maxLength: 253
                                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                        kind:
                                          description: "Kind is kind of the referent. \n Support: Core (Gateway) \n Support: Implementation-specific (Other Resources)"
                                          type: string
                                          default: Gateway
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                        name:
                                          description: "Name is the name of the referent. \n Support: Core"
                                          type: string
                                          maxLength: 253
                                          minLength: 1
                                        namespace:
                                          description: "Namespace is the namespace of the referent. When unspecified, this refers to the local namespace of the Route. \n Note that there are specific rules for ParentRefs which cross namespace boundaries. Cross-namespace references are only valid if they are explicitly allowed by something in the namespace they are referring to. For example: Gateway has the AllowedRoutes field, and ReferenceGrant provides a generic way to enable any other kind of cross-namespace reference. \n Support: Core"
                                          type: string
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                        port:
                                          description: "Port is the network port this Route targets. It can be interpreted differently based on the type of parent resource. \n When the parent resource is a Gateway, this targets all listeners listening on the specified port that also support this kind of Route(and select this Route). It's not recommended to set `Port` unless the networking behaviors specified in a Route must apply to a specific port as opposed to a listener(s) whose port(s) may be changed. When both Port and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support other parent resources. Implementations supporting other types of parent resources MUST clearly document how/if Port is interpreted. \n For the purpose of status, an attachment is considered successful as long as the parent resource accepts it partially. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Extended \n <gateway:experimental>"
                                          type: integer
                                          format: int32
                                          maximum: 65535
                                          minimum: 1
                                        sectionName:
                                          description: "SectionName is the name of a section within the target resource. In the following resources, SectionName is interpreted as the following: \n * Gateway: Listener Name. When both Port (experimental) and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support attaching Routes to other resources. If that is the case, they MUST clearly document how SectionName is interpreted. \n When unspecified (empty string), this will reference the entire resource. For the purpose of status, an attachment is considered successful if at least one section in the parent resource accepts it. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Core"
                                          type: string
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  serviceType:
                                    description: Optional service type for Kubernetes solver service. Supported values are NodePort or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                              ingress:
                                description: The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
                                type: object
                                properties:
                                  class:
                                    description: The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.
                                    type: string
                                  ingressTemplate:
                                    description: Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges.
                                    type: object
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
                                        type: object
                                        properties:
                                          annotations:
                                            description: Annotations that should be added to the created ACME HTTP01 solver ingress.
                                            type: object
                                            additionalProperties:
                                              type: string
                                          labels:
                                            description: Labels that should be added to the created ACME HTTP01 solver ingress.
                                            type: object
                                            additionalProperties:
                                              type: string
                                  name:
                                    description: The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.
                                    type: string
                                  podTemplate:
                                    description: Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges.
                                    type: object
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
                                        type: object
                                        properties:
                                          annotations:
                                            description: Annotations that should be added to the create ACME HTTP01 solver pods.
                                            type: object
                                            additionalProperties:
                                              type: string
                                          labels:
                                            description: Labels that should be added to the created ACME HTTP01 solver pods.
                                            type: object
                                            additionalProperties:
                                              type: string
                                      spec:
                                        description: PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.
                                        type: object
                                        properties:
                                          affinity:
                                            description: If specified, the pod's scheduling constraints
                                            type: object
                                            properties:
                                              nodeAffinity:
                                                description: Describes node affinity scheduling rules for the pod.
                                                type: object
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
                                                    type: array
                                                    items:
                                                      description: An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                                      type: object
                                                      required:
                                                        - preference
                                                        - weight
                                                      properties:
                                                        preference:
                                                          description: A node selector term, associated with the corresponding weight.
                                                          type: object
                                                          properties:
                                                            matchExpressions:
                                                              description: A list of node selector requirements by node's labels.
                                                              type: array
                                                              items:
                                                                description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                type: object
                                                                required:
                                                                  - key
                                                                  - operator
                                                                properties:
                                                                  key:
                                                                    description: The label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                            matchFields:
                                                              description: A list of node selector requirements by node's fields.
                                                              type: array
                                                              items:
                                                                description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                type: object
                                                                required:
                                                                  - key
                                                                  - operator
                                                                properties:
                                                                  key:
                                                                    description: The label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                          x-kubernetes-map-type: atomic
                                                        weight:
                                                          description: Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                                                          type: integer
                                                          format: int32
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
                                                    type: object
                                                    required:
                                                      - nodeSelectorTerms
                                                    properties:
                                                      nodeSelectorTerms:
                                                        description: Required. A list of node selector terms. The terms are ORed.
                                                        type: array
                                                        items:
                                                          description: A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                                          type: object
                                                          properties:
                                                            matchExpressions:
                                                              description: A list of node selector requirements by node's labels.
                                                              type: array
                                                              items:
                                                                description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                type: object
                                                                required:
                                                                  - key
                                                                  - operator
                                                                properties:
                                                                  key:
                                                                    description: The label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                            matchFields:
                                                              description: A list of node selector requirements by node's fields.
                                                              type: array
                                                              items:
                                                                description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                type: object
                                                                required:
                                                                  - key
                                                                  - operator
                                                                properties:
                                                                  key:
                                                                    description: The label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                          x-kubernetes-map-type: atomic
                                                    x-kubernetes-map-type: atomic
                                              podAffinity:
                                                description: Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
                                                type: object
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
                                                    type: array
                                                    items:
                                                      description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                                      type: object
                                                      required:
                                                        - podAffinityTerm
                                                        - weight
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A pod affinity term, associated with the corresponding weight.
                                                          type: object
                                                          required:
                                                            - topologyKey
                                                          properties:
                                                            labelSelector:
                                                              description: A label query over a set of resources, in this case pods.
                                                              type: object
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                  type: array
                                                                  items:
                                                                    description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                    type: object
                                                                    required:
                                                                      - key
                                                                      - operator
                                                                    properties:
                                                                      key:
                                                                        description: key is the label key that the selector applies to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                        type: array
                                                                        items:
                                                                          type: string
                                                                matchLabels:
                                                                  description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                  type: object
                                                                  additionalProperties:
                                                                    type: string
                                                              x-kubernetes-map-type: atomic
                                                            namespaceSelector:
                                                              description: A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
                                                              type: object
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                  type: array
                                                                  items:
                                                                    description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                    type: object
                                                                    required:
                                                                      - key
                                                                      - operator
                                                                    properties:
                                                                      key:
                                                                        description: key is the label key that the selector applies to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                        type: array
                                                                        items:
                                                                          type: string
                                                                matchLabels:
                                                                  description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                  type: object
                                                                  additionalProperties:
                                                                    type: string
                                                              x-kubernetes-map-type: atomic
                                                            namespaces:
                                                              description: namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                              type: array
                                                              items:
                                                                type: string
                                                            topologyKey:
                                                              description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                                              type: string
                                                        weight:
                                                          description: weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
                                                          type: integer
                                                          format: int32
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                                    type: array
                                                    items:
                                                      description: Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
                                                      type: object
                                                      required:
                                                        - topologyKey
                                                      properties:
                                                        labelSelector:
                                                          description: A label query over a set of resources, in this case pods.
                                                          type: object
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                              type: array
                                                              items:
                                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                type: object
                                                                required:
                                                                  - key
                                                                  - operator
                                                                properties:
                                                                  key:
                                                                    description: key is the label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                            matchLabels:
                                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                              type: object
                                                              additionalProperties:
                                                                type: string
                                                          x-kubernetes-map-type: atomic
                                                        namespaceSelector:
                                                          description: A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
                                                          type: object
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                              type: array
                                                              items:
                                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                type: object
                                                                required:
                                                                  - key
                                                                  - operator
                                                                properties:
                                                                  key:
                                                                    description: key is the label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                            matchLabels:
                                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                              type: object
                                                              additionalProperties:
                                                                type: string
                                                          x-kubernetes-map-type: atomic
                                                        namespaces:
                                                          description: namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                          type: array
                                                          items:
                                                            type: string
                                                        topologyKey:
                                                          description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                                          type: string
                                              podAntiAffinity:
                                                description: Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
                                                type: object
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
                                                    type: array
                                                    items:
                                                      description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                                      type: object
                                                      required:
                                                        - podAffinityTerm
                                                        - weight
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A pod affinity term, associated with the corresponding weight.
                                                          type: object
                                                          required:
                                                            - topologyKey
                                                          properties:
                                                            labelSelector:
                                                              description: A label query over a set of resources, in this case pods.
                                                              type: object
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                  type: array
                                                                  items:
                                                                    description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                    type: object
                                                                    required:
                                                                      - key
                                                                      - operator
                                                                    properties:
                                                                      key:
                                                                        description: key is the label key that the selector applies to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                        type: array
                                                                        items:
                                                                          type: string
                                                                matchLabels:
                                                                  description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                  type: object
                                                                  additionalProperties:
                                                                    type: string
                                                              x-kubernetes-map-type: atomic
                                                            namespaceSelector:
                                                              description: A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
                                                              type: object
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                  type: array
                                                                  items:
                                                                    description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                    type: object
                                                                    required:
                                                                      - key
                                                                      - operator
                                                                    properties:
                                                                      key:
                                                                        description: key is the label key that the selector applies to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                        type: array
                                                                        items:
                                                                          type: string
                                                                matchLabels:
                                                                  description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                  type: object
                                                                  additionalProperties:
                                                                    type: string
                                                              x-kubernetes-map-type: atomic
                                                            namespaces:
                                                              description: namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                              type: array
                                                              items:
                                                                type: string
                                                            topologyKey:
                                                              description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                                              type: string
                                                        weight:
                                                          description: weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
                                                          type: integer
                                                          format: int32
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                                    type: array
                                                    items:
                                                      description: Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
                                                      type: object
                                                      required:
                                                        - topologyKey
                                                      properties:
                                                        labelSelector:
                                                          description: A label query over a set of resources, in this case pods.
                                                          type: object
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                              type: array
                                                              items:
                                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                type: object
                                                                required:
                                                                  - key
                                                                  - operator
                                                                properties:
                                                                  key:
                                                                    description: key is the label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                            matchLabels:
                                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                              type: object
                                                              additionalProperties:
                                                                type: string
                                                          x-kubernetes-map-type: atomic
                                                        namespaceSelector:
                                                          description: A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.
                                                          type: object
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                              type: array
                                                              items:
                                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                                type: object
                                                                required:
                                                                  - key
                                                                  - operator
                                                                properties:
                                                                  key:
                                                                    description: key is the label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                            matchLabels:
                                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                              type: object
                                                              additionalProperties:
                                                                type: string
                                                          x-kubernetes-map-type: atomic
                                                        namespaces:
                                                          description: namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                          type: array
                                                          items:
                                                            type: string
                                                        topologyKey:
                                                          description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                                          type: string
                                          nodeSelector:
                                            description: 'NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node''s labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                            type: object
                                            additionalProperties:
                                              type: string
                                          priorityClassName:
                                            description: If specified, the pod's priorityClassName.
                                            type: string
                                          serviceAccountName:
                                            description: If specified, the pod's service account
                                            type: string
                                          tolerations:
                                            description: If specified, the pod's tolerations.
                                            type: array
                                            items:
                                              description: The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
                                              type: object
                                              properties:
                                                effect:
                                                  description: Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                                  type: string
                                                key:
                                                  description: Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                                  type: string
                                                operator:
                                                  description: Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
                                                  type: string
                                                tolerationSeconds:
                                                  description: TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                                                  type: integer
                                                  format: int64
                                                value:
                                                  description: Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
                                                  type: string
                                  serviceType:
                                    description: Optional service type for Kubernetes solver service. Supported values are NodePort or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                          selector:
                            description: Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
                            type: object
                            properties:
                              dnsNames:
                                description: List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
                                type: array
                                items:
                                  type: string
                              dnsZones:
                                description: List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
                                type: array
                                items:
                                  type: string
                              matchLabels:
                                description: A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
                                type: object
                                additionalProperties:
                                  type: string
                ca:
                  description: CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
                  type: object
                  required:
                    - secretName
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.
                      type: array
                      items:
                        type: string
                    ocspServers:
                      description: The OCSP server list is an X.509 v3 extension that defines a list of URLs of OCSP responders. The OCSP responders can be queried for the revocation status of an issued certificate. If not set, the certificate will be issued with no OCSP servers set. For example, an OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
                      type: array
                      items:
                        type: string
                    secretName:
                      description: SecretName is the name of the secret used to sign Certificates issued by this Issuer.
                      type: string
                selfSigned:
                  description: SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
                  type: object
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.
                      type: array
                      items:
                        type: string
                vault:
                  description: Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
                  type: object
                  required:
                    - auth
                    - path
                    - server
                  properties:
                    auth:
                      description: Auth configures how cert-manager authenticates with the Vault server.
                      type: object
                      properties:
                        appRole:
                          description: AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
                          type: object
                          required:
                            - path
                            - roleId
                            - secretRef
                          properties:
                            path:
                              description: 'Path where the App Role authentication backend is mounted in Vault, e.g: "approle"'
                              type: string
                            roleId:
                              description: RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
                              type: string
                            secretRef:
                              description: Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
                              type: object
                              required:
                                - name
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                        kubernetes:
                          description: Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
                          type: object
                          required:
                            - role
                            - secretRef
                          properties:
                            mountPath:
                              description: The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value "/v1/auth/kubernetes" will be used.
                              type: string
                            role:
                              description: A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
                              type: string
                            secretRef:
                              description: The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
                              type: object
                              required:
                                - name
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                        tokenSecretRef:
                          description: TokenSecretRef authenticates with Vault by presenting a token.
                          type: object
                          required:
                            - name
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                    caBundle:
                      description: Base64-encoded bundle of PEM CAs which will be used to validate the certificate chain presented by Vault. Only used if using HTTPS to connect to Vault and ignored for HTTP connections. Mutually exclusive with CABundleSecretRef. If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in the cert-manager controller container is used to validate the TLS connection.
                      type: string
                      format: byte
                    caBundleSecretRef:
                      description: Reference to a Secret containing a bundle of PEM-encoded CAs to use when verifying the certificate chain presented by Vault when using HTTPS. Mutually exclusive with CABundle. If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in the cert-manager controller container is used to validate the TLS connection. If no key for the Secret is specified, cert-manager will default to 'ca.crt'.
                      type: object
                      required:
                        - name
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                    namespace:
                      description: 'Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1" More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                      type: string
                    path:
                      description: 'Path is the mount path of the Vault PKI backend''s `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".'
                      type: string
                    server:
                      description: 'Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".'
                      type: string
                venafi:
                  description: Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
                  type: object
                  required:
                    - zone
                  properties:
                    cloud:
                      description: Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
                      type: object
                      required:
                        - apiTokenSecretRef
                      properties:
                        apiTokenSecretRef:
                          description: APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
                          type: object
                          required:
                            - name
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                        url:
                          description: URL is the base URL for Venafi Cloud. Defaults to "https://api.venafi.cloud/v1".
                          type: string
                    tpp:
                      description: TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
                      type: object
                      required:
                        - credentialsRef
                        - url
                      properties:
                        caBundle:
                          description: Base64-encoded bundle of PEM CAs which will be used to validate the certificate chain presented by the TPP server. Only used if using HTTPS; ignored for HTTP. If undefined, the certificate bundle in the cert-manager controller container is used to validate the chain.
                          type: string
                          format: byte
                        credentialsRef:
                          description: CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
                          type: object
                          required:
                            - name
                          properties:
                            name:
                              description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                        url:
                          description: 'URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".'
                          type: string
                    zone:
                      description: Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.
                      type: string
            status:
              description: Status of the Issuer. This is set and managed automatically.
              type: object
              properties:
                acme:
                  description: ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
                  type: object
                  properties:
                    lastRegisteredEmail:
                      description: LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer
                      type: string
                    uri:
                      description: URI is the unique account identifier, which can also be used to retrieve account details from the CA
                      type: string
                conditions:
                  description: List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.
                  type: array
                  items:
                    description: IssuerCondition contains condition information for an Issuer.
                    type: object
                    required:
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding to the last status change of this condition.
                        type: string
                        format: date-time
                      message:
                        description: Message is a human readable description of the details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the Issuer.
                        type: integer
                        format: int64
                      reason:
                        description: Reason is a brief machine readable explanation for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`, `Unknown`).
                        type: string
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                      type:
                        description: Type of the condition, known values are (`Ready`).
                        type: string
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
      served: true
      storage: true
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: certificates.cert-manager.io
  labels:
    app: 'cert-manager'
    app.kubernetes.io/name: 'cert-manager'
    app.kubernetes.io/instance: 'canvas'
    # Generated labels
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
spec:
  group: cert-manager.io
  names:
    kind: Certificate
    listKind: CertificateList
    plural: certificates
    shortNames:
      - cert
      - certs
    singular: certificate
    categories:
      - cert-manager
  scope: Namespaced
  versions:
    - name: v1
      subresources:
        status: {}
      additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .spec.secretName
          name: Secret
          type: string
        - jsonPath: .spec.issuerRef.name
          name: Issuer
          priority: 1
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          priority: 1
          type: string
        - jsonPath: .metadata.creationTimestamp
          description: CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
          name: Age
          type: date
      schema:
        openAPIV3Schema:
          description: "A Certificate resource should be created to ensure an up to date and signed x509 certificate is stored in the Kubernetes Secret resource named in `spec.secretName`. \n The stored certificate will be renewed before it expires (as configured by `spec.renewBefore`)."
          type: object
          required:
            - spec
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the Certificate resource.
              type: object
              required:
                - issuerRef
                - secretName
              properties:
                additionalOutputFormats:
                  description: AdditionalOutputFormats defines extra output formats of the private key and signed certificate chain to be written to this Certificate's target Secret. This is an Alpha Feature and is only enabled with the `--feature-gates=AdditionalCertificateOutputFormats=true` option on both the controller and webhook components.
                  type: array
                  items:
                    description: CertificateAdditionalOutputFormat defines an additional output format of a Certificate resource. These contain supplementary data formats of the signed certificate chain and paired private key.
                    type: object
                    required:
                      - type
                    properties:
                      type:
                        description: Type is the name of the format type that should be written to the Certificate's target Secret.
                        type: string
                        enum:
                          - DER
                          - CombinedPEM
                commonName:
                  description: 'CommonName is a common name to be used on the Certificate. The CommonName should have a length of 64 characters or fewer to avoid generating invalid CSRs. This value is ignored by TLS clients when any subject alt name is set. This is x509 behaviour: https://tools.ietf.org/html/rfc6125#section-6.4.4'
                  type: string
                dnsNames:
                  description: DNSNames is a list of DNS subjectAltNames to be set on the Certificate.
                  type: array
                  items:
                    type: string
                duration:
                  description: The requested 'duration' (i.e. lifetime) of the Certificate. This option may be ignored/overridden by some issuer types. If unset this defaults to 90 days. Certificate will be renewed either 2/3 through its duration or `renewBefore` period before its expiry, whichever is later. Minimum accepted duration is 1 hour. Value must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration
                  type: string
                emailAddresses:
                  description: EmailAddresses is a list of email subjectAltNames to be set on the Certificate.
                  type: array
                  items:
                    type: string
                encodeUsagesInRequest:
                  description: EncodeUsagesInRequest controls whether key usages should be present in the CertificateRequest
                  type: boolean
                ipAddresses:
                  description: IPAddresses is a list of IP address subjectAltNames to be set on the Certificate.
                  type: array
                  items:
                    type: string
                isCA:
                  description: IsCA will mark this Certificate as valid for certificate signing. This will automatically add the `cert sign` usage to the list of `usages`.
                  type: boolean
                issuerRef:
                  description: IssuerRef is a reference to the issuer for this certificate. If the `kind` field is not set, or set to `Issuer`, an Issuer resource with the given name in the same namespace as the Certificate will be used. If the `kind` field is set to `ClusterIssuer`, a ClusterIssuer with the provided name will be used. The `name` field in this stanza is required at all times.
                  type: object
                  required:
                    - name
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                keystores:
                  description: Keystores configures additional keystore output formats stored in the `secretName` Secret resource.
                  type: object
                  properties:
                    jks:
                      description: JKS configures options for storing a JKS keystore in the `spec.secretName` Secret resource.
                      type: object
                      required:
                        - create
                        - passwordSecretRef
                      properties:
                        create:
                          description: Create enables JKS keystore creation for the Certificate. If true, a file named `keystore.jks` will be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef`. The keystore file will be updated immediately. A file named `truststore.jks` will also be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef` containing the issuing Certificate Authority
                          type: boolean
                        passwordSecretRef:
                          description: PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the JKS keystore.
                          type: object
                          required:
                            - name
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                    pkcs12:
                      description: PKCS12 configures options for storing a PKCS12 keystore in the `spec.secretName` Secret resource.
                      type: object
                      required:
                        - create
                        - passwordSecretRef
                      properties:
                        create:
                          description: Create enables PKCS12 keystore creation for the Certificate. If true, a file named `keystore.p12` will be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef`. The keystore file will be updated immediately. A file named `truststore.p12` will also be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef` containing the issuing Certificate Authority
                          type: boolean
                        passwordSecretRef:
                          description: PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the PKCS12 keystore.
                          type: object
                          required:
                            - name
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                literalSubject:
                  description: LiteralSubject is an LDAP formatted string that represents the [X.509 Subject field](https://datatracker.ietf.org/doc/html/rfc5280#section-4.1.2.6). Use this *instead* of the Subject field if you need to ensure the correct ordering of the RDN sequence, such as when issuing certs for LDAP authentication. See https://github.com/cert-manager/cert-manager/issues/3203, https://github.com/cert-manager/cert-manager/issues/4424. This field is alpha level and is only supported by cert-manager installations where LiteralCertificateSubject feature gate is enabled on both cert-manager controller and webhook.
                  type: string
                privateKey:
                  description: Options to control private keys used for the Certificate.
                  type: object
                  properties:
                    algorithm:
                      description: Algorithm is the private key algorithm of the corresponding private key for this certificate. If provided, allowed values are either `RSA`,`Ed25519` or `ECDSA` If `algorithm` is specified and `size` is not provided, key size of 256 will be used for `ECDSA` key algorithm and key size of 2048 will be used for `RSA` key algorithm. key size is ignored when using the `Ed25519` key algorithm.
                      type: string
                      enum:
                        - RSA
                        - ECDSA
                        - Ed25519
                    encoding:
                      description: The private key cryptography standards (PKCS) encoding for this certificate's private key to be encoded in. If provided, allowed values are `PKCS1` and `PKCS8` standing for PKCS#1 and PKCS#8, respectively. Defaults to `PKCS1` if not specified.
                      type: string
                      enum:
                        - PKCS1
                        - PKCS8
                    rotationPolicy:
                      description: RotationPolicy controls how private keys should be regenerated when a re-issuance is being processed. If set to Never, a private key will only be generated if one does not already exist in the target `spec.secretName`. If one does exists but it does not have the correct algorithm or size, a warning will be raised to await user intervention. If set to Always, a private key matching the specified requirements will be generated whenever a re-issuance occurs. Default is 'Never' for backward compatibility.
                      type: string
                      enum:
                        - Never
                        - Always
                    size:
                      description: Size is the key bit size of the corresponding private key for this certificate. If `algorithm` is set to `RSA`, valid values are `2048`, `4096` or `8192`, and will default to `2048` if not specified. If `algorithm` is set to `ECDSA`, valid values are `256`, `384` or `521`, and will default to `256` if not specified. If `algorithm` is set to `Ed25519`, Size is ignored. No other values are allowed.
                      type: integer
                renewBefore:
                  description: How long before the currently issued certificate's expiry cert-manager should renew the certificate. The default is 2/3 of the issued certificate's duration. Minimum accepted value is 5 minutes. Value must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration
                  type: string
                revisionHistoryLimit:
                  description: revisionHistoryLimit is the maximum number of CertificateRequest revisions that are maintained in the Certificate's history. Each revision represents a single `CertificateRequest` created by this Certificate, either when it was created, renewed, or Spec was changed. Revisions will be removed by oldest first if the number of revisions exceeds this number. If set, revisionHistoryLimit must be a value of `1` or greater. If unset (`nil`), revisions will not be garbage collected. Default value is `nil`.
                  type: integer
                  format: int32
                secretName:
                  description: SecretName is the name of the secret resource that will be automatically created and managed by this Certificate resource. It will be populated with a private key and certificate, signed by the denoted issuer.
                  type: string
                secretTemplate:
                  description: SecretTemplate defines annotations and labels to be copied to the Certificate's Secret. Labels and annotations on the Secret will be changed as they appear on the SecretTemplate when added or removed. SecretTemplate annotations are added in conjunction with, and cannot overwrite, the base set of annotations cert-manager sets on the Certificate's Secret.
                  type: object
                  properties:
                    annotations:
                      description: Annotations is a key value map to be copied to the target Kubernetes Secret.
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      description: Labels is a key value map to be copied to the target Kubernetes Secret.
                      type: object
                      additionalProperties:
                        type: string
                subject:
                  description: Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).
                  type: object
                  properties:
                    countries:
                      description: Countries to be used on the Certificate.
                      type: array
                      items:
                        type: string
                    localities:
                      description: Cities to be used on the Certificate.
                      type: array
                      items:
                        type: string
                    organizationalUnits:
                      description: Organizational Units to be used on the Certificate.
                      type: array
                      items:
                        type: string
                    organizations:
                      description: Organizations to be used on the Certificate.
                      type: array
                      items:
                        type: string
                    postalCodes:
                      description: Postal codes to be used on the Certificate.
                      type: array
                      items:
                        type: string
                    provinces:
                      description: State/Provinces to be used on the Certificate.
                      type: array
                      items:
                        type: string
                    serialNumber:
                      description: Serial number to be used on the Certificate.
                      type: string
                    streetAddresses:
                      description: Street addresses to be used on the Certificate.
                      type: array
                      items:
                        type: string
                uris:
                  description: URIs is a list of URI subjectAltNames to be set on the Certificate.
                  type: array
                  items:
                    type: string
                usages:
                  description: Usages is the set of x509 usages that are requested for the certificate. Defaults to `digital signature` and `key encipherment` if not specified.
                  type: array
                  items:
                    description: "KeyUsage specifies valid usage contexts for keys. See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3 https://tools.ietf.org/html/rfc5280#section-4.2.1.12 \n Valid KeyUsage values are as follows: \"signing\", \"digital signature\", \"content commitment\", \"key encipherment\", \"key agreement\", \"data encipherment\", \"cert sign\", \"crl sign\", \"encipher only\", \"decipher only\", \"any\", \"server auth\", \"client auth\", \"code signing\", \"email protection\", \"s/mime\", \"ipsec end system\", \"ipsec tunnel\", \"ipsec user\", \"timestamping\", \"ocsp signing\", \"microsoft sgc\", \"netscape sgc\""
                    type: string
                    enum:
                      - signing
                      - digital signature
                      - content commitment
                      - key encipherment
                      - key agreement
                      - data encipherment
                      - cert sign
                      - crl sign
                      - encipher only
                      - decipher only
                      - any
                      - server auth
                      - client auth
                      - code signing
                      - email protection
                      - s/mime
                      - ipsec end system
                      - ipsec tunnel
                      - ipsec user
                      - timestamping
                      - ocsp signing
                      - microsoft sgc
                      - netscape sgc
            status:
              description: Status of the Certificate. This is set and managed automatically.
              type: object
              properties:
                conditions:
                  description: List of status conditions to indicate the status of certificates. Known condition types are `Ready` and `Issuing`.
                  type: array
                  items:
                    description: CertificateCondition contains condition information for an Certificate.
                    type: object
                    required:
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding to the last status change of this condition.
                        type: string
                        format: date-time
                      message:
                        description: Message is a human readable description of the details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the Certificate.
                        type: integer
                        format: int64
                      reason:
                        description: Reason is a brief machine readable explanation for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`, `Unknown`).
                        type: string
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                      type:
                        description: Type of the condition, known values are (`Ready`, `Issuing`).
                        type: string
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                failedIssuanceAttempts:
                  description: The number of continuous failed issuance attempts up till now. This field gets removed (if set) on a successful issuance and gets set to 1 if unset and an issuance has failed. If an issuance has failed, the delay till the next issuance will be calculated using formula time.Hour * 2 ^ (failedIssuanceAttempts - 1).
                  type: integer
                lastFailureTime:
                  description: LastFailureTime is the time as recorded by the Certificate controller of the most recent failure to complete a CertificateRequest for this Certificate resource. If set, cert-manager will not re-request another Certificate until 1 hour has elapsed from this time.
                  type: string
                  format: date-time
                nextPrivateKeySecretName:
                  description: The name of the Secret resource containing the private key to be used for the next certificate iteration. The keymanager controller will automatically set this field if the `Issuing` condition is set to `True`. It will automatically unset this field when the Issuing condition is not set or False.
                  type: string
                notAfter:
                  description: The expiration time of the certificate stored in the secret named by this resource in `spec.secretName`.
                  type: string
                  format: date-time
                notBefore:
                  description: The time after which the certificate stored in the secret named by this resource in spec.secretName is valid.
                  type: string
                  format: date-time
                renewalTime:
                  description: RenewalTime is the time at which the certificate will be next renewed. If not set, no upcoming renewal is scheduled.
                  type: string
                  format: date-time
                revision:
                  description: "The current 'revision' of the certificate as issued. \n When a CertificateRequest resource is created, it will have the `cert-manager.io/certificate-revision` set to one greater than the current value of this field. \n Upon issuance, this field will be set to the value of the annotation on the CertificateRequest resource used to issue the certificate. \n Persisting the value on the CertificateRequest resource allows the certificates controller to know whether a request is part of an old issuance or if it is part of the ongoing revision's issuance by checking if the revision value in the annotation is greater than this field."
                  type: integer
      served: true
      storage: true
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: orders.acme.cert-manager.io
  labels:
    app: 'cert-manager'
    app.kubernetes.io/name: 'cert-manager'
    app.kubernetes.io/instance: 'canvas'
    # Generated labels
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
spec:
  group: acme.cert-manager.io
  names:
    kind: Order
    listKind: OrderList
    plural: orders
    singular: order
    categories:
      - cert-manager
      - cert-manager-acme
  scope: Namespaced
  versions:
    - name: v1
      subresources:
        status: {}
      additionalPrinterColumns:
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .spec.issuerRef.name
          name: Issuer
          priority: 1
          type: string
        - jsonPath: .status.reason
          name: Reason
          priority: 1
          type: string
        - jsonPath: .metadata.creationTimestamp
          description: CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
          name: Age
          type: date
      schema:
        openAPIV3Schema:
          description: Order is a type to represent an Order with an ACME server
          type: object
          required:
            - metadata
            - spec
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              type: object
              required:
                - issuerRef
                - request
              properties:
                commonName:
                  description: CommonName is the common name as specified on the DER encoded CSR. If specified, this value must also be present in `dnsNames` or `ipAddresses`. This field must match the corresponding field on the DER encoded CSR.
                  type: string
                dnsNames:
                  description: DNSNames is a list of DNS names that should be included as part of the Order validation process. This field must match the corresponding field on the DER encoded CSR.
                  type: array
                  items:
                    type: string
                duration:
                  description: Duration is the duration for the not after date for the requested certificate. this is set on order creation as pe the ACME spec.
                  type: string
                ipAddresses:
                  description: IPAddresses is a list of IP addresses that should be included as part of the Order validation process. This field must match the corresponding field on the DER encoded CSR.
                  type: array
                  items:
                    type: string
                issuerRef:
                  description: IssuerRef references a properly configured ACME-type Issuer which should be used to create this Order. If the Issuer does not exist, processing will be retried. If the Issuer is not an 'ACME' Issuer, an error will be returned and the Order will be marked as failed.
                  type: object
                  required:
                    - name
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                request:
                  description: Certificate signing request bytes in DER encoding. This will be used when finalizing the order. This field must be set on the order.
                  type: string
                  format: byte
            status:
              type: object
              properties:
                authorizations:
                  description: Authorizations contains data returned from the ACME server on what authorizations must be completed in order to validate the DNS names specified on the Order.
                  type: array
                  items:
                    description: ACMEAuthorization contains data returned from the ACME server on an authorization that must be completed in order validate a DNS name on an ACME Order resource.
                    type: object
                    required:
                      - url
                    properties:
                      challenges:
                        description: Challenges specifies the challenge types offered by the ACME server. One of these challenge types will be selected when validating the DNS name and an appropriate Challenge resource will be created to perform the ACME challenge process.
                        type: array
                        items:
                          description: Challenge specifies a challenge offered by the ACME server for an Order. An appropriate Challenge resource can be created to perform the ACME challenge process.
                          type: object
                          required:
                            - token
                            - type
                            - url
                          properties:
                            token:
                              description: Token is the token that must be presented for this challenge. This is used to compute the 'key' that must also be presented.
                              type: string
                            type:
                              description: Type is the type of challenge being offered, e.g. 'http-01', 'dns-01', 'tls-sni-01', etc. This is the raw value retrieved from the ACME server. Only 'http-01' and 'dns-01' are supported by cert-manager, other values will be ignored.
                              type: string
                            url:
                              description: URL is the URL of this challenge. It can be used to retrieve additional metadata about the Challenge from the ACME server.
                              type: string
                      identifier:
                        description: Identifier is the DNS name to be validated as part of this authorization
                        type: string
                      initialState:
                        description: InitialState is the initial state of the ACME authorization when first fetched from the ACME server. If an Authorization is already 'valid', the Order controller will not create a Challenge resource for the authorization. This will occur when working with an ACME server that enables 'authz reuse' (such as Let's Encrypt's production endpoint). If not set and 'identifier' is set, the state is assumed to be pending and a Challenge will be created.
                        type: string
                        enum:
                          - valid
                          - ready
                          - pending
                          - processing
                          - invalid
                          - expired
                          - errored
                      url:
                        description: URL is the URL of the Authorization that must be completed
                        type: string
                      wildcard:
                        description: Wildcard will be true if this authorization is for a wildcard DNS name. If this is true, the identifier will be the *non-wildcard* version of the DNS name. For example, if '*.example.com' is the DNS name being validated, this field will be 'true' and the 'identifier' field will be 'example.com'.
                        type: boolean
                certificate:
                  description: Certificate is a copy of the PEM encoded certificate for this Order. This field will be populated after the order has been successfully finalized with the ACME server, and the order has transitioned to the 'valid' state.
                  type: string
                  format: byte
                failureTime:
                  description: FailureTime stores the time that this order failed. This is used to influence garbage collection and back-off.
                  type: string
                  format: date-time
                finalizeURL:
                  description: FinalizeURL of the Order. This is used to obtain certificates for this order once it has been completed.
                  type: string
                reason:
                  description: Reason optionally provides more information about a why the order is in the current state.
                  type: string
                state:
                  description: State contains the current state of this Order resource. States 'success' and 'expired' are 'final'
                  type: string
                  enum:
                    - valid
                    - ready
                    - pending
                    - processing
                    - invalid
                    - expired
                    - errored
                url:
                  description: URL of the Order. This will initially be empty when the resource is first created. The Order controller will populate this field when the Order is first processed. This field will be immutable after it is initially set.
                  type: string
      served: true
      storage: true
---
# Source: canvas-oda/charts/oda-crds/templates/oda-component-crd.yaml
apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  name: "components.oda.tmforum.org"
  annotations:
    cert-manager.io/inject-ca-from:  canvas/compcrdwebhook
spec:
  scope: "Namespaced"
  group: "oda.tmforum.org"
  names:
    plural: "components"
    singular: "component"
    kind: "Component"
  conversion:
    strategy: Webhook
    # webhookClientConfig is required when strategy is `Webhook` and it configures the webhook endpoint to be called by API server.
    webhook:
      conversionReviewVersions: ["v1beta4", "v1beta3", "v1beta2", "v1beta1"]
      clientConfig:
        service:
          namespace: canvas
          name: compcrdwebhook
          path: /
          port: 443
  versions:
  - name: "v1beta1"
    # Each version can be enabled/disabled by Served flag.
    served: true
    # One and only one version must be marked as the storage version.
    storage: false
    deprecated: true
    deprecationWarning: "oda.tmforum.org/v1beta1 Component is deprecated. Please upgrade to oda.tmforum.org/v1beta3 or newer"
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              type:
                type: string
                description: This is the type of functional component and must refer to a TM Forum published type.
                example: TMFC001-productcatalogmanagement
              version:
                type: string
                description: This is the version of the component (it is specific to the vendor of this component and not the type).
              description:
                type: string
                description: This is a short description of the component's purpose.
              maintainers:
                type: array
                description: Maintainers is an optional list of maintainers of
                  the component. The maintainers in this list maintain the the
                  source code, images, and package for the component.
                items:
                  description: ContactData contains information about an individual or organization.
                  type: object
                  properties:
                    email:
                      description: Email is the email address.
                      type: string
                    name:
                      description: Name is the descriptive name.
                      type: string
                    url:
                      description: Website address of maintaining organization.
                      type: string
              owners:
                type: array
                description: Owners is an optional list of the owners of the installed component.
                items:
                  type: object
                  description: ContactData contains information about an individual or organization.
                  properties:
                    email:
                      description: Email is the email address.
                      type: string
                    name:
                      description: Name is the descriptive name.
                      type: string
                    url:
                      description: Website address of owning organization.
                      type: string
              coreFunction:
                type: object
                properties:
                  exposedAPIs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the API
                        specification:
                          type: string
                          format: url
                          description: url to the specification of the API, if required. e.g. url to the swagger file for Open API.
                        apitype:
                          type: string
                          enum:
                          - openapi
                          description: The type of API specification. Currently only OpenAPI (swagger) is supported.
                        implementation:
                          type: string
                          description: The name of the service where the implementation of the API is found
                        path:
                          type: string
                          description: The path to the root of the API
                        developerUI:
                          type: string
                          description: (optional) The path to the developer User Interface for the API
                        port:
                          type: integer
                          description: The port where the API is exposed
                      required:
                      - name
                      - apitype
                      - implementation
                      - path
                      - port
                  dependentAPIs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the API that this component is dependent on
                        specification:
                          type: string
                          format: url
                          description: url to the specification of the API. e.g. url to the swagger file
                        apitype:
                          type: string
                          enum:
                          - openapi
                          description: The type of API specification. Currently only OpenAPI (swagger) and Prometheus (metrics) APIs are supported.
                      required:
                      - name
                      - apitype
              eventNotification:
                type: object
                properties:
                  publishedEvents:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        href:
                          type: string
                  subscribedEvents:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        href:
                          type: string
              management:
                type: object
                properties:
                  exposedAPIs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the API
                        specification:
                          type: string
                          format: url
                          description: url to the specification of the API. e.g. url to the swagger file
                        apitype:
                          type: string
                          enum:
                          - openapi
                          - prometheus
                          description: The type of API specification. Currently only OpenAPI (swagger) and Prometheus (metrics) APIs are supported.
                        implementation:
                          type: string
                          description: The name of the service where the implementation of the API is found
                        path:
                          type: string
                          description: The path to the root of the API
                        developerUI:
                          type: string
                          description: (optional) The path to the developer User Interface for the API
                        port:
                          type: integer
                          description: The port where the API is exposed
                      required:
                      - name
                      - apitype
                      - implementation
                      - path
                      - port
                  dependentAPIs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the API that this component is dependent on
                        specification:
                          type: string
                          format: url
                          description: url to the specification of the API. e.g. url to the swagger file
                        apitype:
                          type: string
                          enum:
                          - openapi
                          - prometheus
                          description: The type of API specification. Currently only OpenAPI (swagger) and Prometheus APIs are supported.
                      required:
                      - name
                      - apitype
              security:
                type: object
                x-kubernetes-preserve-unknown-fields: true
                properties:
                  exposedAPIs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the API
                        specification:
                          type: string
                          format: url
                          description: url to the specification of the API. e.g. url to the swagger file
                        apitype:
                          type: string
                          enum:
                          - openapi
                          description: The type of API specification. Currently only OpenAPI (swagger) and Prometheus APIs are supported.
                        implementation:
                          type: string
                          description: The name of the service where the implementation of the API is found
                        path:
                          type: string
                          description: The path to the root of the API
                        developerUI:
                          type: string
                          description: (optional) The path to the developer User Interface for the API
                        port:
                          type: integer
                          description: The port where the API is exposed
                      required:
                      - name
                      - apitype
                      - implementation
                      - path
                      - port
                  dependentAPIs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the API that this component is dependent on
                        specification:
                          type: string
                          format: url
                          description: url to the specification of the API. e.g. url to the swagger file
                        apitype:
                          type: string
                          enum:
                          - openapi
                          description: The type of API specification. Currently only OpenAPI (swagger) and Prometheus APIs are supported.
                      required:
                      - name
                      - apitype
                  controllerRole:
                    description: This is the name of the role that the Canvas controllers will use to interact with the component's APIs.
                      It must exist in the roles exposed by the permissionSpecificationSet API.
                    type: string
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true
    additionalPrinterColumns:
    - name: deployment_status
      type: string
      description: Deployment status [in progress, complete, failed]
      jsonPath: .status.summary/status.deployment_status
  - name: "v1beta2"
    # Each version can be enabled/disabled by Served flag.
    served: true
    # One and only one version must be marked as the storage version.
    storage: false
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              id:
                type: string
                description: This is the id of functional component and must refer to the id of a TM Forum published golden component.
                example: TMFC001
              name:
                type: string
                description: This is the name of functional component and must refer to the name of a TM Forum published golden component.
                example: ProductCatalogManagement
              version:
                type: string
                description: This is the version of the component (it is specific to the vendor of this component and not the type).
              description:
                type: string
                description: This is a short description of the component's purpose.
              functionalBlock:   
                type: string
                description: This is the functional block of the component with the Open Digital Architecture.
                example: CoreCommerce 
              publicationDate:
                type: string
                format: date-time
                description: This is the date that the golden component was published.
              status:
                type: string
                description: This is the status of the golden component.
              maintainers:
                type: array
                description: Maintainers is an optional list of maintainers of
                  the component. The maintainers in this list maintain the the
                  source code, images, and package for the component.
                items:
                  description: ContactData contains information about an individual or organization.
                  type: object
                  properties:
                    email:
                      description: Email is the email address.
                      type: string
                    name:
                      description: Name is the descriptive name.
                      type: string
                    url:
                      description: Website address of maintaining organization.
                      type: string
              owners:
                type: array
                description: Owners is an optional list of the owners of the installed component.
                items:
                  type: object
                  description: ContactData contains information about an individual or organization.
                  properties:
                    email:
                      description: Email is the email address.
                      type: string
                    name:
                      description: Name is the descriptive name.
                      type: string
                    url:
                      description: Website address of owning organization.
                      type: string
              coreFunction:
                type: object
                properties:
                  exposedAPIs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the API
                        specification:
                          type: string
                          format: url
                          description: url to the specification of the API, if required. e.g. url to the swagger file for Open API.
                        apitype:
                          type: string
                          enum:
                          - openapi
                          description: The type of API specification. Currently only OpenAPI (swagger) and Prometheus (metrics) APIs are supported.
                        implementation:
                          type: string
                          description: The name of the service where the implementation of the API is found
                        path:
                          type: string
                          description: The path to the root of the API
                        developerUI:
                          type: string
                          description: (optional) The path to the developer User Interface for the API
                        port:
                          type: integer
                          description: The port where the API is exposed
                        resources:
                          type: array
                          items:
                            type: object
                          description: Resources is an optional list of resources that are exposed by the API.
                        required:
                          type: boolean
                          description: Required is a flag that indicates whether the API is required or not.
                      required:
                      - name
                      - apitype
                      - implementation
                      - path
                      - port
                  dependentAPIs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the API that this component is dependent on
                        specification:
                          type: string
                          format: url
                          description: url to the specification of the API. e.g. url to the swagger file
                        apitype:
                          type: string
                          enum:
                          - openapi
                          description: The type of API specification. Currently only OpenAPI (swagger) and Prometheus (metrics) APIs are supported.
                        resources:
                          type: array
                          items:
                            type: object
                          description: Resources is an optional list of resources that are consumed by the API.
                        required:
                          type: boolean
                          description: Required is a flag that indicates whether the API is required or not.
                      required:
                      - name
                      - apitype
              eventNotification:
                type: object
                properties:
                  publishedEvents:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        href:
                          type: string
                  subscribedEvents:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        href:
                          type: string
              managementFunction:
                type: object
                properties:
                  exposedAPIs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the API
                        specification:
                          type: string
                          format: url
                          description: url to the specification of the API. e.g. url to the swagger file
                        apitype:
                          type: string
                          enum:
                          - openapi
                          - prometheus
                          description: The type of API specification. Currently only OpenAPI (swagger) and Prometheus (metrics) APIs are supported.
                        implementation:
                          type: string
                          description: The name of the service where the implementation of the API is found
                        path:
                          type: string
                          description: The path to the root of the API
                        developerUI:
                          type: string
                          description: (optional) The path to the developer User Interface for the API
                        port:
                          type: integer
                          description: The port where the API is exposed
                        resources:
                          type: array
                          items:
                            type: object
                          description: Resources is an optional list of resources that are exposed by the API.
                        required:
                          type: boolean
                          description: Required is a flag that indicates whether the API is required or not.
                      required:
                      - name
                      - apitype
                      - implementation
                      - path
                      - port
                  dependentAPIs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the API that this component is dependent on
                        specification:
                          type: string
                          format: url
                          description: url to the specification of the API. e.g. url to the swagger file
                        apitype:
                          type: string
                          enum:
                          - openapi
                          - prometheus
                          description: The type of API specification. Currently only OpenAPI (swagger) and Prometheus APIs are supported.
                        resources:
                          type: array
                          items:
                            type: object
                          description: Resources is an optional list of resources that are consumed by the API.
                        required:
                          type: boolean
                          description: Required is a flag that indicates whether the API is required or not.
                      required:
                      - name
                      - apitype
              securityFunction:
                type: object
                x-kubernetes-preserve-unknown-fields: true
                properties:
                  exposedAPIs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the API
                        specification:
                          type: string
                          format: url
                          description: url to the specification of the API. e.g. url to the swagger file
                        apitype:
                          type: string
                          enum:
                          - openapi
                          description: The type of API specification. Currently only OpenAPI (swagger) and Prometheus APIs are supported.
                        implementation:
                          type: string
                          description: The name of the service where the implementation of the API is found
                        path:
                          type: string
                          description: The path to the root of the API
                        developerUI:
                          type: string
                          description: (optional) The path to the developer User Interface for the API
                        port:
                          type: integer
                          description: The port where the API is exposed
                        resources:
                          type: array
                          items:
                            type: object
                          description: Resources is an optional list of resources that are exposed by the API.
                        required:
                          type: boolean
                          description: Required is a flag that indicates whether the API is required or not.
                      required:
                      - name
                      - apitype
                      - implementation
                      - path
                      - port
                  dependentAPIs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the API that this component is dependent on
                        specification:
                          type: string
                          format: url
                          description: url to the specification of the API. e.g. url to the swagger file
                        apitype:
                          type: string
                          enum:
                          - openapi
                          description: The type of API specification. Currently only OpenAPI (swagger) and Prometheus APIs are supported.
                        resources:
                          type: array
                          items:
                            type: object
                          description: Resources is an optional list of resources that are consumed by the API.
                        required:
                          type: boolean
                          description: Required is a flag that indicates whether the API is required or not.
                      required:
                      - name
                      - apitype
                  controllerRole:
                    description: This is the name of the role that the Canvas controllers will use to interact with the component's APIs.
                      It must exist in the roles exposed by the permissionSpecificationSet API.
                    type: string
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true
    additionalPrinterColumns:
    - name: deployment_status
      type: string
      description: Deployment status [in progress, complete, failed]
      jsonPath: .status.summary/status.deployment_status
  - name: "v1beta3"
    # Each version can be enabled/disabled by Served flag.
    served: true
    # One and only one version must be marked as the storage version.
    storage: false
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              id:
                type: string
                description: This is the id of functional component and must refer to the id of a TM Forum published golden component.
                example: TMFC001
              name:
                type: string
                description: This is the name of functional component and must refer to the name of a TM Forum published golden component.
                example: ProductCatalogManagement
              version:
                type: string
                description: This is the version of the component (it is specific to the vendor of this component and not the type).
              description:
                type: string
                description: This is a short description of the component's purpose.
              functionalBlock:   
                type: string
                description: This is the functional block of the component with the Open Digital Architecture.
                example: CoreCommerce 
              publicationDate:
                type: string
                format: date-time
                description: This is the date that the golden component was published.
              status:
                type: string
                description: This is the status of the golden component.
              maintainers:
                type: array
                description: Maintainers is an optional list of maintainers of
                  the component. The maintainers in this list maintain the the
                  source code, images, and package for the component.
                items:
                  description: ContactData contains information about an individual or organization.
                  type: object
                  properties:
                    email:
                      description: Email is the email address.
                      type: string
                    name:
                      description: Name is the descriptive name.
                      type: string
                    url:
                      description: Website address of maintaining organization.
                      type: string
              owners:
                type: array
                description: Owners is an optional list of the owners of the installed component.
                items:
                  type: object
                  description: ContactData contains information about an individual or organization.
                  properties:
                    email:
                      description: Email is the email address.
                      type: string
                    name:
                      description: Name is the descriptive name.
                      type: string
                    url:
                      description: Website address of owning organization.
                      type: string
              coreFunction:
                type: object
                properties:
                  exposedAPIs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the API
                        specification:  
                          type: array
                          items:
                            type: string
                            format: url
                          description: >
                            url to the specification of the API, if required. e.g. url to the swagger file for Open API.
                            This is an array of strings to allow for multiple specifications (e.g. to support Gen-4 and Gen-5 Open-APIs)
                          minItems: 1
                        apiType:
                          type: string
                          enum:
                          - openapi
                          description: The type of API specification. Currently only OpenAPI (swagger) is supported.
                        apiKeyVerification:
                          type: object
                          description: "(optional) API key verification settings"
                          properties:
                            enabled:
                              type: boolean
                              description: "(default: false) Enforce API key verification"
                            location:
                              type: string
                              description: "(optional) Variable name for API key location"
                        rateLimit:
                          type: object
                          description: "(optional) Rate limiting configuration"
                          properties:
                            enabled:
                              type: boolean
                              description: "(default: false)"
                            identifier:
                              type: string
                              description: "Identifier for rate-limiting"
                            limit:
                              type: string
                              description: "Limit of requests per identifier"
                            interval:
                              type: string
                              description: "(default: ps) Interval for rate limit"
                        quota:
                          type: object
                          description: "(optional) Quota configuration"
                          properties:
                            identifier:
                              type: string
                              description: "Identifier for quota counter"
                            limit:
                              type: string
                              description: "Quota counter limit"
                        OASValidation:
                          type: object
                          description: "(optional) OpenAPI Specification validation"
                          properties:
                            requestEnabled:
                              type: boolean
                              description: "(default: false) Enable request validation"
                            responseEnabled:
                              type: boolean
                              description: "(default: false) Enable response validation"
                            allowUnspecifiedHeaders:
                              type: boolean
                              description: "(default: false) Allow unspecified headers"
                            allowUnspecifiedQueryParams:
                              type: boolean
                              description: "(default: false) Allow unspecified query parameters"
                            allowUnspecifiedCookies:
                              type: boolean
                              description: "(default: false) Allow unspecified cookies"
                        CORS:
                          type: object
                          description: "(optional) Cross-origin Resource Sharing configuration"
                          properties:
                            enabled:
                              type: boolean
                              description: "(default: false)"
                            allowCredentials:
                              type: boolean
                              description: "(default: false) Enable credentials for cross-origin requests"
                            allowOrigins:
                              type: string
                              description: "(default: *) Allowed origins (CSV)"
                            handlePreflightRequests:
                              type: object
                              description: "(optional) Preflight request configuration"
                              properties:
                                enabled:
                                  type: boolean
                                  description: "(default: true)"
                                allowHeaders:
                                  type: string
                                  description: "(default: Origin, Accept, X-Requested-With, etc.)"
                                allowMethods:
                                  type: string
                                  description: "(default: GET, POST, etc.)"
                                maxAge:
                                  type: integer
                                  description: "(default: 1800) Cache duration for CORS preflight requests"
                        template:
                          type: string
                          description: "(optional) Pre-configured template for the API"
                        implementation:
                          type: string
                          description: The name of the service where the implementation of the API is found
                        path:
                          type: string
                          description: The path to the root of the API
                        developerUI:
                          type: string
                          description: (optional) The path to the developer User Interface for the API
                        port:
                          type: integer
                          description: The port where the API is exposed
                        resources:
                          type: array
                          items:
                            type: object
                          description: Resources is an optional list of resources that are exposed by the API.
                        required:
                          type: boolean
                          description: Required is a flag that indicates whether the API is required or not.
                      required:
                      - name
                      - apiType
                      - implementation
                      - path
                      - port
                  dependentAPIs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the API that this component is dependent on
                        specification:
                          type: string
                          format: url
                          description: url to the specification of the API. e.g. url to the swagger file
                        apiType:
                          type: string
                          enum:
                          - openapi
                          description: The type of API specification. Currently only OpenAPI (swagger) is supported.
                        resources:
                          type: array
                          items:
                            type: object
                          description: Resources is an optional list of resources that are consumed by the API.
                        required:
                          type: boolean
                          description: Required is a flag that indicates whether the API is required or not.
                      required:
                      - name
                      - apiType
              eventNotification:
                type: object
                properties:
                  publishedEvents:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the Topic that this Component is going to push events into
                        description:
                          type: string
                          description: (Optional) Description
                        apiType:
                          type: string
                          enum:
                          - openapi
                          description: The type of API specification. Currently only OpenAPI (swagger) APIs is supported.
                        specification:
                          type: string
                          format: url
                          description: (optional) url to the specification of the API. e.g. url to the swagger file
                        implementation:
                          type: string
                          description: The name of the service receiving the notifications
                        developerUI:
                          type: string
                          description: (optional) The path to the developer User Interface for the API
                        hub:
                          type: string
                          description: The path to the root of the API
                        port:
                          type: integer
                          description: The port where the API is exposed
                  subscribedEvents:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the Topic that this Component is interested in listening to
                        description:
                          type: string
                          description: (Optional) Description
                        apiType:
                          type: string
                          enum:
                          - openapi
                          description: The type of API specification. Currently only OpenAPI (swagger) APIs is supported.
                        specification:
                          type: string
                          format: url
                          description: (optional) url to the specification of the API. e.g. url to the swagger file
                        implementation:
                          type: string
                          description: The name of the service receiving the notifications
                        developerUI:
                          type: string
                          description: (optional) The path to the developer User Interface for the API
                        callback:
                          type: string
                          description: The path to the callback endpoint
                        port:
                          type: integer
                          description: The port to which the callback listens to
                        query:
                          type: string
                          description: (optional) Filter the events that will be sent to callback endpoint
              managementFunction:
                type: object
                properties:
                  exposedAPIs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the API
                        specification:
                          type: array
                          items:
                            type: string
                            format: url
                          description: >
                            url to the specification of the API, if required. e.g. url to the swagger file for Open API.
                            This is an array of strings to allow for multiple specifications (e.g. to support Gen-4 and Gen-5 Open-APIs)
                          minItems: 1
                        apiType:
                          type: string
                          enum:
                          - openapi
                          - prometheus
                          description: The type of API specification. Currently only OpenAPI (swagger) and Prometheus (metrics) APIs are supported.
                        apiKeyVerification:
                          type: object
                          description: "(optional) API key verification settings"
                          properties:
                            enabled:
                              type: boolean
                              description: "(default: false) Enforce API key verification"
                            location:
                              type: string
                              description: "(optional) Variable name for API key location"
                        rateLimit:
                          type: object
                          description: "(optional) Rate limiting configuration"
                          properties:
                            enabled:
                              type: boolean
                              description: "(default: false)"
                            identifier:
                              type: string
                              description: "Identifier for rate-limiting"
                            limit:
                              type: string
                              description: "Limit of requests per identifier"
                            interval:
                              type: string
                              description: "(default: ps) Interval for rate limit"
                        quota:
                          type: object
                          description: "(optional) Quota configuration"
                          properties:
                            identifier:
                              type: string
                              description: "Identifier for quota counter"
                            limit:
                              type: string
                              description: "Quota counter limit"
                        OASValidation:
                          type: object
                          description: "(optional) OpenAPI Specification validation"
                          properties:
                            requestEnabled:
                              type: boolean
                              description: "(default: false) Enable request validation"
                            responseEnabled:
                              type: boolean
                              description: "(default: false) Enable response validation"
                            allowUnspecifiedHeaders:
                              type: boolean
                              description: "(default: false) Allow unspecified headers"
                            allowUnspecifiedQueryParams:
                              type: boolean
                              description: "(default: false) Allow unspecified query parameters"
                            allowUnspecifiedCookies:
                              type: boolean
                              description: "(default: false) Allow unspecified cookies"
                        CORS:
                          type: object
                          description: "(optional) Cross-origin Resource Sharing configuration"
                          properties:
                            enabled:
                              type: boolean
                              description: "(default: false)"
                            allowCredentials:
                              type: boolean
                              description: "(default: false) Enable credentials for cross-origin requests"
                            allowOrigins:
                              type: string
                              description: "(default: *) Allowed origins (CSV)"
                            handlePreflightRequests:
                              type: object
                              description: "(optional) Preflight request configuration"
                              properties:
                                enabled:
                                  type: boolean
                                  description: "(default: true)"
                                allowHeaders:
                                  type: string
                                  description: "(default: Origin, Accept, X-Requested-With, etc.)"
                                allowMethods:
                                  type: string
                                  description: "(default: GET, POST, etc.)"
                                maxAge:
                                  type: integer
                                  description: "(default: 1800) Cache duration for CORS preflight requests"
                        template:
                          type: string
                          description: "(optional) Pre-configured template for the API"
                        implementation:
                          type: string
                          description: The name of the service where the implementation of the API is found
                        path:
                          type: string
                          description: The path to the root of the API
                        developerUI:
                          type: string
                          description: (optional) The path to the developer User Interface for the API
                        port:
                          type: integer
                          description: The port where the API is exposed
                        resources:
                          type: array
                          items:
                            type: object
                          description: Resources is an optional list of resources that are exposed by the API.
                        required:
                          type: boolean
                          description: Required is a flag that indicates whether the API is required or not.
                      required:
                      - name
                      - apiType
                      - implementation
                      - path
                      - port
                  dependentAPIs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the API that this component is dependent on
                        specification:
                          type: string
                          format: url
                          description: url to the specification of the API. e.g. url to the swagger file
                        apiType:
                          type: string
                          enum:
                          - openapi
                          description: The type of API specification. Currently only OpenAPI (swagger) is supported.
                        resources:
                          type: array
                          items:
                            type: object
                          description: Resources is an optional list of resources that are consumed by the API.
                        required:
                          type: boolean
                          description: Required is a flag that indicates whether the API is required or not.
                      required:
                      - name
                      - apiType
              securityFunction:
                type: object
                x-kubernetes-preserve-unknown-fields: true
                properties:
                  secretsManagement:
                    description: optional, request access to secrets stored exclusively for this component.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                    required: ["type", "podSelector"]
                    properties:
                      type:
                        type: string
                        enum: ["sideCar"]
                        description: defines, how components access the secrets, currently only sideCar is supported
                      sideCar:
                        type: object
                        description: sideCar parameters, required if type has value "sideCar"
                        required: ["port"]
                        properties:
                          port:
                            type: integer
                            description: The port where the API is exposed in the sideCar (localhost:<port>)
                      podSelector:
                        type: object
                        description: defines, which PODs are allowed to access the secrets (and logic)
                        properties:
                          namespace:
                            type: string
                            description: glob patter matching the namespace of the POD
                          name:
                            type: string
                            description: glob patter matching the name of the POD
                          serviceaccount:
                            type: string
                            description: glob patter matching the serviceaccount od the POD
                  exposedAPIs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the API
                        specification:
                          type: array
                          items:
                            type: string
                            format: url
                          description: >
                            url to the specification of the API, if required. e.g. url to the swagger file for Open API.
                            This is an array of strings to allow for multiple specifications (e.g. to support Gen-4 and Gen-5 Open-APIs)
                          minItems: 1
                        apiType:
                          type: string
                          enum:
                          - openapi
                          description: The type of API specification. Currently only OpenAPI (swagger) is supported.
                        apiKeyVerification:
                          type: object
                          description: "(optional) API key verification settings"
                          properties:
                            enabled:
                              type: boolean
                              description: "(default: false) Enforce API key verification"
                            location:
                              type: string
                              description: "(optional) Variable name for API key location"
                        rateLimit:
                          type: object
                          description: "(optional) Rate limiting configuration"
                          properties:
                            enabled:
                              type: boolean
                              description: "(default: false)"
                            identifier:
                              type: string
                              description: "Identifier for rate-limiting"
                            limit:
                              type: string
                              description: "Limit of requests per identifier"
                            interval:
                              type: string
                              description: "(default: ps) Interval for rate limit"
                        quota:
                          type: object
                          description: "(optional) Quota configuration"
                          properties:
                            identifier:
                              type: string
                              description: "Identifier for quota counter"
                            limit:
                              type: string
                              description: "Quota counter limit"
                        OASValidation:
                          type: object
                          description: "(optional) OpenAPI Specification validation"
                          properties:
                            requestEnabled:
                              type: boolean
                              description: "(default: false) Enable request validation"
                            responseEnabled:
                              type: boolean
                              description: "(default: false) Enable response validation"
                            allowUnspecifiedHeaders:
                              type: boolean
                              description: "(default: false) Allow unspecified headers"
                            allowUnspecifiedQueryParams:
                              type: boolean
                              description: "(default: false) Allow unspecified query parameters"
                            allowUnspecifiedCookies:
                              type: boolean
                              description: "(default: false) Allow unspecified cookies"
                        CORS:
                          type: object
                          description: "(optional) Cross-origin Resource Sharing configuration"
                          properties:
                            enabled:
                              type: boolean
                              description: "(default: false)"
                            allowCredentials:
                              type: boolean
                              description: "(default: false) Enable credentials for cross-origin requests"
                            allowOrigins:
                              type: string
                              description: "(default: *) Allowed origins (CSV)"
                            handlePreflightRequests:
                              type: object
                              description: "(optional) Preflight request configuration"
                              properties:
                                enabled:
                                  type: boolean
                                  description: "(default: true)"
                                allowHeaders:
                                  type: string
                                  description: "(default: Origin, Accept, X-Requested-With, etc.)"
                                allowMethods:
                                  type: string
                                  description: "(default: GET, POST, etc.)"
                                maxAge:
                                  type: integer
                                  description: "(default: 1800) Cache duration for CORS preflight requests"
                        template:
                          type: string
                          description: "(optional) Pre-configured template for the API"
                        implementation:
                          type: string
                          description: The name of the service where the implementation of the API is found
                        path:
                          type: string
                          description: The path to the root of the API
                        developerUI:
                          type: string
                          description: (optional) The path to the developer User Interface for the API
                        port:
                          type: integer
                          description: The port where the API is exposed
                        resources:
                          type: array
                          items:
                            type: object
                          description: Resources is an optional list of resources that are exposed by the API.
                        required:
                          type: boolean
                          description: Required is a flag that indicates whether the API is required or not.
                      required:
                      - name
                      - apiType
                      - implementation
                      - path
                      - port
                  dependentAPIs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the API that this component is dependent on
                        specification:
                          type: string
                          format: url
                          description: url to the specification of the API. e.g. url to the swagger file
                        apiType:
                          type: string
                          enum:
                          - openapi
                          description: The type of API specification. Currently only OpenAPI (swagger) is supported.
                        resources:
                          type: array
                          items:
                            type: object
                          description: Resources is an optional list of resources that are consumed by the API.
                        required:
                          type: boolean
                          description: Required is a flag that indicates whether the API is required or not.
                      required:
                      - name
                      - apiType
                  controllerRole:
                    description: This is the name of the role that the Canvas controllers will use to interact with the component's APIs.
                      It must exist in the roles exposed by the partyRole API.
                    type: string
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true
    additionalPrinterColumns:
    - name: deployment_status
      type: string
      description: Deployment status [in progress, complete, failed]
      jsonPath: .status.summary/status.deployment_status
  - name: "v1beta4"
    # Each version can be enabled/disabled by Served flag.
    served: true
    # One and only one version must be marked as the storage version.
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              componentMetadata:
                type: object
                properties:
                  id:
                    type: string
                    description: This is the id of functional component and must refer to the id of a TM Forum published golden component.
                    example: TMFC001
                  name:
                    type: string
                    description: This is the name of functional component and must refer to the name of a TM Forum published golden component.
                    example: ProductCatalogManagement
                  version:
                    type: string
                    description: This is the version of the component (it is specific to the vendor of this component and not the type).
                  description:
                    type: string
                    description: This is a short description of the component's purpose.
                  functionalBlock:   
                    type: string
                    description: This is the functional block of the component with the Open Digital Architecture.
                    example: CoreCommerce 
                  publicationDate:
                    type: string
                    format: date-time
                    description: This is the date that the golden component was published.
                  status:
                    type: string
                    description: This is the status of the golden component.
                  eTom:
                    type: array
                    description: This is the eTom mapping of the component with the Open Digital Architecture.
                    items:
                      type: string
                  SID:
                    type: array
                    description: This is the SID mapping of the component with the Open Digital Architecture.
                    items:
                      type: string
                  functionalFramework:
                    type: array
                    description: This is the functional framework of the component with the Open Digital Architecture.   
                    items:
                      type: string 
                  maintainers:
                    type: array
                    description: Maintainers is an optional list of maintainers of
                      the component. The maintainers in this list maintain the the
                      source code, images, and package for the component.
                    items:
                      description: ContactData contains information about an individual or organization.
                      type: object
                      properties:
                        email:
                          description: Email is the email address.
                          type: string
                        name:
                          description: Name is the descriptive name.
                          type: string
                        url:
                          description: Website address of maintaining organization.
                          type: string
                  owners:
                    type: array
                    description: Owners is an optional list of the owners of the installed component.
                    items:
                      type: object
                      description: ContactData contains information about an individual or organization.
                      properties:
                        email:
                          description: Email is the email address.
                          type: string
                        name:
                          description: Name is the descriptive name.
                          type: string
                        url:
                          description: Website address of owning organization.
                          type: string
              coreFunction:
                type: object
                properties:
                  exposedAPIs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the API
                        specification:  
                          type: array
                          items:
                            type: string
                            format: url
                          description: >
                            url to the specification of the API, if required. e.g. url to the swagger file for Open API.
                            This is an array of strings to allow for multiple specifications (e.g. to support Gen-4 and Gen-5 Open-APIs)
                          minItems: 1
                        apiType:
                          type: string
                          enum:
                          - openapi
                          description: The type of API specification. Currently only OpenAPI (swagger) is supported.
                        apiSDO:
                          type: string
                          description: (optional) The name of the SDO (Standards Definition Organization) that defines the API standard
                        apiKeyVerification:
                          type: object
                          description: "(optional) API key verification settings"
                          properties:
                            enabled:
                              type: boolean
                              description: "(default: false) Enforce API key verification"
                            location:
                              type: string
                              description: "(optional) Variable name for API key location"
                        rateLimit:
                          type: object
                          description: "(optional) Rate limiting configuration"
                          properties:
                            enabled:
                              type: boolean
                              description: "(default: false)"
                            identifier:
                              type: string
                              description: "Identifier for rate-limiting"
                            limit:
                              type: string
                              description: "Limit of requests per identifier"
                            interval:
                              type: string
                              description: "(default: ps) Interval for rate limit"
                        quota:
                          type: object
                          description: "(optional) Quota configuration"
                          properties:
                            identifier:
                              type: string
                              description: "Identifier for quota counter"
                            limit:
                              type: string
                              description: "Quota counter limit"
                        OASValidation:
                          type: object
                          description: "(optional) OpenAPI Specification validation"
                          properties:
                            requestEnabled:
                              type: boolean
                              description: "(default: false) Enable request validation"
                            responseEnabled:
                              type: boolean
                              description: "(default: false) Enable response validation"
                            allowUnspecifiedHeaders:
                              type: boolean
                              description: "(default: false) Allow unspecified headers"
                            allowUnspecifiedQueryParams:
                              type: boolean
                              description: "(default: false) Allow unspecified query parameters"
                            allowUnspecifiedCookies:
                              type: boolean
                              description: "(default: false) Allow unspecified cookies"
                        CORS:
                          type: object
                          description: "(optional) Cross-origin Resource Sharing configuration"
                          properties:
                            enabled:
                              type: boolean
                              description: "(default: false)"
                            allowCredentials:
                              type: boolean
                              description: "(default: false) Enable credentials for cross-origin requests"
                            allowOrigins:
                              type: string
                              description: "(default: *) Allowed origins (CSV)"
                            handlePreflightRequests:
                              type: object
                              description: "(optional) Preflight request configuration"
                              properties:
                                enabled:
                                  type: boolean
                                  description: "(default: true)"
                                allowHeaders:
                                  type: string
                                  description: "(default: Origin, Accept, X-Requested-With, etc.)"
                                allowMethods:
                                  type: string
                                  description: "(default: GET, POST, etc.)"
                                maxAge:
                                  type: integer
                                  description: "(default: 1800) Cache duration for CORS preflight requests"
                        template:
                          type: string
                          description: "(optional) Pre-configured template for the API"
                        implementation:
                          type: string
                          description: The name of the service where the implementation of the API is found
                        path:
                          type: string
                          description: The path to the root of the API
                        developerUI:
                          type: string
                          description: (optional) The path to the developer User Interface for the API
                        port:
                          type: integer
                          description: The port where the API is exposed
                        resources:
                          type: array
                          items:
                            type: object
                          description: Resources is an optional list of resources that are exposed by the API.
                        required:
                          type: boolean
                          description: Required is a flag that indicates whether the API is required or not.
                      required:
                      - name
                      - apiType
                      - implementation
                      - path
                      - port
                  dependentAPIs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the API that this component is dependent on
                        specification:
                          type: string
                          format: url
                          description: url to the specification of the API. e.g. url to the swagger file
                        apiType:
                          type: string
                          enum:
                          - openapi
                          description: The type of API specification. Currently only OpenAPI (swagger) is supported.
                        apiSDO:
                          type: string
                          description: (optional) The name of the SDO (Standards Definition Organization) that defines the API standard
                        resources:
                          type: array
                          items:
                            type: object
                          description: Resources is an optional list of resources that are consumed by the API.
                        required:
                          type: boolean
                          description: Required is a flag that indicates whether the API is required or not.
                      required:
                      - name
                      - apiType
              eventNotification:
                type: object
                properties:
                  publishedEvents:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the Topic that this Component is going to push events into
                        description:
                          type: string
                          description: (Optional) Description
                        apiType:
                          type: string
                          enum:
                          - openapi
                          description: The type of API specification. Currently only OpenAPI (swagger) APIs is supported.
                        specification:
                          type: string
                          format: url
                          description: (optional) url to the specification of the API. e.g. url to the swagger file
                        implementation:
                          type: string
                          description: The name of the service receiving the notifications
                        developerUI:
                          type: string
                          description: (optional) The path to the developer User Interface for the API
                        hub:
                          type: string
                          description: The path to the root of the API
                        port:
                          type: integer
                          description: The port where the API is exposed
                  subscribedEvents:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the Topic that this Component is interested in listening to
                        description:
                          type: string
                          description: (Optional) Description
                        apiType:
                          type: string
                          enum:
                          - openapi
                          description: The type of API specification. Currently only OpenAPI (swagger) APIs is supported.
                        specification:
                          type: string
                          format: url
                          description: (optional) url to the specification of the API. e.g. url to the swagger file
                        implementation:
                          type: string
                          description: The name of the service receiving the notifications
                        developerUI:
                          type: string
                          description: (optional) The path to the developer User Interface for the API
                        callback:
                          type: string
                          description: The path to the callback endpoint
                        port:
                          type: integer
                          description: The port to which the callback listens to
                        query:
                          type: string
                          description: (optional) Filter the events that will be sent to callback endpoint
              managementFunction:
                type: object
                properties:
                  exposedAPIs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the API
                        specification:
                          type: array
                          items:
                            type: string
                            format: url
                          description: >
                            url to the specification of the API, if required. e.g. url to the swagger file for Open API.
                            This is an array of strings to allow for multiple specifications (e.g. to support Gen-4 and Gen-5 Open-APIs)
                          minItems: 1
                        apiType:
                          type: string
                          enum:
                          - openapi
                          - prometheus
                          description: The type of API specification. Currently only OpenAPI (swagger) and Prometheus (metrics) APIs are supported.
                        apiSDO:
                          type: string
                          description: (optional) The name of the SDO (Standards Definition Organization) that defines the API standard                          
                        apiKeyVerification:
                          type: object
                          description: "(optional) API key verification settings"
                          properties:
                            enabled:
                              type: boolean
                              description: "(default: false) Enforce API key verification"
                            location:
                              type: string
                              description: "(optional) Variable name for API key location"
                        rateLimit:
                          type: object
                          description: "(optional) Rate limiting configuration"
                          properties:
                            enabled:
                              type: boolean
                              description: "(default: false)"
                            identifier:
                              type: string
                              description: "Identifier for rate-limiting"
                            limit:
                              type: string
                              description: "Limit of requests per identifier"
                            interval:
                              type: string
                              description: "(default: ps) Interval for rate limit"
                        quota:
                          type: object
                          description: "(optional) Quota configuration"
                          properties:
                            identifier:
                              type: string
                              description: "Identifier for quota counter"
                            limit:
                              type: string
                              description: "Quota counter limit"
                        OASValidation:
                          type: object
                          description: "(optional) OpenAPI Specification validation"
                          properties:
                            requestEnabled:
                              type: boolean
                              description: "(default: false) Enable request validation"
                            responseEnabled:
                              type: boolean
                              description: "(default: false) Enable response validation"
                            allowUnspecifiedHeaders:
                              type: boolean
                              description: "(default: false) Allow unspecified headers"
                            allowUnspecifiedQueryParams:
                              type: boolean
                              description: "(default: false) Allow unspecified query parameters"
                            allowUnspecifiedCookies:
                              type: boolean
                              description: "(default: false) Allow unspecified cookies"
                        CORS:
                          type: object
                          description: "(optional) Cross-origin Resource Sharing configuration"
                          properties:
                            enabled:
                              type: boolean
                              description: "(default: false)"
                            allowCredentials:
                              type: boolean
                              description: "(default: false) Enable credentials for cross-origin requests"
                            allowOrigins:
                              type: string
                              description: "(default: *) Allowed origins (CSV)"
                            handlePreflightRequests:
                              type: object
                              description: "(optional) Preflight request configuration"
                              properties:
                                enabled:
                                  type: boolean
                                  description: "(default: true)"
                                allowHeaders:
                                  type: string
                                  description: "(default: Origin, Accept, X-Requested-With, etc.)"
                                allowMethods:
                                  type: string
                                  description: "(default: GET, POST, etc.)"
                                maxAge:
                                  type: integer
                                  description: "(default: 1800) Cache duration for CORS preflight requests"
                        template:
                          type: string
                          description: "(optional) Pre-configured template for the API"
                        implementation:
                          type: string
                          description: The name of the service where the implementation of the API is found
                        path:
                          type: string
                          description: The path to the root of the API
                        developerUI:
                          type: string
                          description: (optional) The path to the developer User Interface for the API
                        port:
                          type: integer
                          description: The port where the API is exposed
                        resources:
                          type: array
                          items:
                            type: object
                          description: Resources is an optional list of resources that are exposed by the API.
                        required:
                          type: boolean
                          description: Required is a flag that indicates whether the API is required or not.
                      required:
                      - name
                      - apiType
                      - implementation
                      - path
                      - port
                  dependentAPIs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the API that this component is dependent on
                        specification:
                          type: string
                          format: url
                          description: url to the specification of the API. e.g. url to the swagger file
                        apiType:
                          type: string
                          enum:
                          - openapi
                          description: The type of API specification. Currently only OpenAPI (swagger) is supported.
                        apiSDO:
                          type: string
                          description: (optional) The name of the SDO (Standards Definition Organization) that defines the API standard                          
                        resources:
                          type: array
                          items:
                            type: object
                          description: Resources is an optional list of resources that are consumed by the API.
                        required:
                          type: boolean
                          description: Required is a flag that indicates whether the API is required or not.
                      required:
                      - name
                      - apiType
              securityFunction:
                type: object
                x-kubernetes-preserve-unknown-fields: true
                properties:
                  secretsManagement:
                    description: optional, request access to secrets stored exclusively for this component.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                    required: ["type", "podSelector"]
                    properties:
                      type:
                        type: string
                        enum: ["sideCar"]
                        description: defines, how components access the secrets, currently only sideCar is supported
                      sideCar:
                        type: object
                        description: sideCar parameters, required if type has value "sideCar"
                        required: ["port"]
                        properties:
                          port:
                            type: integer
                            description: The port where the API is exposed in the sideCar (localhost:<port>)
                      podSelector:
                        type: object
                        description: defines, which PODs are allowed to access the secrets (and logic)
                        properties:
                          namespace:
                            type: string
                            description: glob patter matching the namespace of the POD
                          name:
                            type: string
                            description: glob patter matching the name of the POD
                          serviceaccount:
                            type: string
                            description: glob patter matching the serviceaccount od the POD
                  exposedAPIs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the API
                        specification:
                          type: array
                          items:
                            type: string
                            format: url
                          description: >
                            url to the specification of the API, if required. e.g. url to the swagger file for Open API.
                            This is an array of strings to allow for multiple specifications (e.g. to support Gen-4 and Gen-5 Open-APIs)
                          minItems: 1
                        apiType:
                          type: string
                          enum:
                          - openapi
                          description: The type of API specification. Currently only OpenAPI (swagger) is supported.
                        apiSDO:
                          type: string
                          description: (optional) The name of the SDO (Standards Definition Organization) that defines the API standard                          
                        apiKeyVerification:
                          type: object
                          description: "(optional) API key verification settings"
                          properties:
                            enabled:
                              type: boolean
                              description: "(default: false) Enforce API key verification"
                            location:
                              type: string
                              description: "(optional) Variable name for API key location"
                        rateLimit:
                          type: object
                          description: "(optional) Rate limiting configuration"
                          properties:
                            enabled:
                              type: boolean
                              description: "(default: false)"
                            identifier:
                              type: string
                              description: "Identifier for rate-limiting"
                            limit:
                              type: string
                              description: "Limit of requests per identifier"
                            interval:
                              type: string
                              description: "(default: ps) Interval for rate limit"
                        quota:
                          type: object
                          description: "(optional) Quota configuration"
                          properties:
                            identifier:
                              type: string
                              description: "Identifier for quota counter"
                            limit:
                              type: string
                              description: "Quota counter limit"
                        OASValidation:
                          type: object
                          description: "(optional) OpenAPI Specification validation"
                          properties:
                            requestEnabled:
                              type: boolean
                              description: "(default: false) Enable request validation"
                            responseEnabled:
                              type: boolean
                              description: "(default: false) Enable response validation"
                            allowUnspecifiedHeaders:
                              type: boolean
                              description: "(default: false) Allow unspecified headers"
                            allowUnspecifiedQueryParams:
                              type: boolean
                              description: "(default: false) Allow unspecified query parameters"
                            allowUnspecifiedCookies:
                              type: boolean
                              description: "(default: false) Allow unspecified cookies"
                        CORS:
                          type: object
                          description: "(optional) Cross-origin Resource Sharing configuration"
                          properties:
                            enabled:
                              type: boolean
                              description: "(default: false)"
                            allowCredentials:
                              type: boolean
                              description: "(default: false) Enable credentials for cross-origin requests"
                            allowOrigins:
                              type: string
                              description: "(default: *) Allowed origins (CSV)"
                            handlePreflightRequests:
                              type: object
                              description: "(optional) Preflight request configuration"
                              properties:
                                enabled:
                                  type: boolean
                                  description: "(default: true)"
                                allowHeaders:
                                  type: string
                                  description: "(default: Origin, Accept, X-Requested-With, etc.)"
                                allowMethods:
                                  type: string
                                  description: "(default: GET, POST, etc.)"
                                maxAge:
                                  type: integer
                                  description: "(default: 1800) Cache duration for CORS preflight requests"
                        template:
                          type: string
                          description: "(optional) Pre-configured template for the API"
                        implementation:
                          type: string
                          description: The name of the service where the implementation of the API is found
                        path:
                          type: string
                          description: The path to the root of the API
                        developerUI:
                          type: string
                          description: (optional) The path to the developer User Interface for the API
                        port:
                          type: integer
                          description: The port where the API is exposed
                        resources:
                          type: array
                          items:
                            type: object
                          description: Resources is an optional list of resources that are exposed by the API.
                        required:
                          type: boolean
                          description: Required is a flag that indicates whether the API is required or not.
                      required:
                      - name
                      - apiType
                      - implementation
                      - path
                      - port
                  dependentAPIs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the API that this component is dependent on
                        specification:
                          type: string
                          format: url
                          description: url to the specification of the API. e.g. url to the swagger file
                        apiType:
                          type: string
                          enum:
                          - openapi
                          description: The type of API specification. Currently only OpenAPI (swagger) is supported.
                        apiSDO:
                          type: string
                          description: (optional) The name of the SDO (Standards Definition Organization) that defines the API standard                          
                        resources:
                          type: array
                          items:
                            type: object
                          description: Resources is an optional list of resources that are consumed by the API.
                        required:
                          type: boolean
                          description: Required is a flag that indicates whether the API is required or not.
                      required:
                      - name
                      - apiType
                  controllerRole:
                    description: This is the name of the role that the Canvas controllers will use to interact with the component's APIs.
                      It must exist in the roles exposed by the partyRole API.
                    type: string
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true
    additionalPrinterColumns:
    - name: deployment_status
      type: string
      description: Deployment status [in progress, complete, failed]
      jsonPath: .status.summary/status.deployment_status
---
# Source: canvas-oda/charts/oda-crds/templates/oda-dependentapi-crd.yaml
# This is a CustomResourceDefinition for DependentAPIs.
apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  name: "dependentapis.oda.tmforum.org"
spec:
  group: "oda.tmforum.org"
  scope: "Namespaced"
  names:
    plural: "dependentapis"
    singular: "dependentapi"
    shortNames:
    - depapi
    - depapis
    kind: "DependentAPI"
  versions:
  - name: "v1beta3"
    # Each version can be enabled/disabled by Served flag.
    served: true
    # One and only one version must be marked as the storage version.
    storage: false
    deprecated: false
    schema:
      openAPIV3Schema:
        type: object
        required: ["spec"]
        properties:
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
            properties:
              name:
                type: string
                description: Name of the API that this component is dependent on
              specification:
                type: string
                format: url
                description: url to the specification of the API. e.g. url to the swagger file
              apiType:
                type: string
                enum:
                - openapi
                description: The type of API specification. Currently only OpenAPI (swagger) is supported.
              selector:
                type: object
                description: key value pairs for filtering the dependent API search, e.g. 'releaseName:demo-b'.
                x-kubernetes-preserve-unknown-fields: true
                properties:
                  zone: 
                    type: string
                    description: zone(cluster-/canvas-/gateway-id) or 'SAME' for same as component
                  releaseName: 
                    type: string
                    description: release name of the component
                  namespace:
                    type: string
                    description: namespace of the exposedAPI custom resource
              resources:
                type: array
                items:
                  type: object
                description: Resources is an optional list of resources that are consumed by the API.
              required:
                type: boolean
                description: Required is a flag that indicates whether the API is required or not.
            required:
            - name
            - apiType
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true
    additionalPrinterColumns:
    - name: ready
      type: string
      description: Dependent API configuration is ready - e.g. gateway configuration
      jsonPath: .status.implementation.ready
    - name: Age
      jsonPath: .metadata.creationTimestamp
      type: date      
      description: The age of this resource
    - name: svcInvID
      type: string
      description: ID published in the Canvas Info Service
      jsonPath: .status.depapiStatus.svcInvID
    - name: url
      type: string
      description: Dependent API endpoint Url
      jsonPath: .status.depapiStatus.url
  - name: "v1beta4"
    # Each version can be enabled/disabled by Served flag.
    served: true
    # One and only one version must be marked as the storage version.
    storage: true
    deprecated: false
    schema:
      openAPIV3Schema:
        type: object
        required: ["spec"]
        properties:
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
            properties:
              name:
                type: string
                description: Name of the API that this component is dependent on
              specification:
                type: string
                format: url
                description: url to the specification of the API. e.g. url to the swagger file
              apiType:
                type: string
                enum:
                - openapi
                description: The type of API specification. Currently only OpenAPI (swagger) is supported.
              selector:
                type: object
                description: key value pairs for filtering the dependent API search, e.g. 'releaseName:demo-b'.
                x-kubernetes-preserve-unknown-fields: true
                properties:
                  zone: 
                    type: string
                    description: zone(cluster-/canvas-/gateway-id) or 'SAME' for same as component
                  releaseName: 
                    type: string
                    description: release name of the component
                  namespace:
                    type: string
                    description: namespace of the exposedAPI custom resource
              resources:
                type: array
                items:
                  type: object
                description: Resources is an optional list of resources that are consumed by the API.
              required:
                type: boolean
                description: Required is a flag that indicates whether the API is required or not.
            required:
            - name
            - apiType
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true
    additionalPrinterColumns:
    - name: ready
      type: string
      description: Dependent API configuration is ready - e.g. gateway configuration
      jsonPath: .status.implementation.ready
    - name: Age
      jsonPath: .metadata.creationTimestamp
      type: date      
      description: The age of this resource
    - name: svcInvID
      type: string
      description: ID published in the Canvas Info Service
      jsonPath: .status.depapiStatus.svcInvID
    - name: url
      type: string
      description: Dependent API endpoint Url
      jsonPath: .status.depapiStatus.url
---
# Source: canvas-oda/charts/oda-crds/templates/oda-exposedapi-crd.yaml
# This is a new CustomResourceDefinition for ExposedAPIs that replaces the existing API CRD.
apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  name: "exposedapis.oda.tmforum.org"
spec:
  group: "oda.tmforum.org"
  scope: "Namespaced"
  names:
    plural: "exposedapis"
    singular: "exposedapi"
    kind: "ExposedAPI"
  versions:
  - name: "v1beta3"
    # Each version can be enabled/disabled by Served flag.
    served: true
    # One and only one version must be marked as the storage version.
    storage: false
    deprecated: false
    schema:
      openAPIV3Schema:
        type: object
        required: ["spec"]
        properties:
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
            properties:
              name:
                type: string
                description: Name of the API
              specification:
                type: array
                items:
                  type: string
                description: >
                  url to the specification of the API, if required. e.g. url to the swagger file for Open API.
                  This is an array of strings to allow for multiple specifications (e.g. to support Gen-4 and Gen-5 Open-APIs)
                minItems: 1
              apiType:
                type: string
                enum:
                - openapi
                - prometheus
                description: The type of API specification. Currently only OpenAPI (swagger) and Prometheus (metrics) APIs are supported.
              apiKeyVerification:
                type: object
                description: (optional) 
                properties:
                  enabled:
                    type: boolean
                    description: "(default: false) Enforce verification of API key"
                  location:
                    type: string
                    description: (optional) Name of variable where API key value is expected
              rateLimit:
                type: object
                description: (optional) The rate limit configuration for the API
                properties:
                  enabled:
                    type: boolean
                    description: "(default: false)"
                  identifier:
                    type: string
                    description: Limit requests by this identifier when enforcing the rate limit
                  limit:
                    type: string
                    description: The limit (count) of requests to allow for each identifier
                  interval:
                    type: string
                    description: "(default: ps) The interval when enforcing the rate limit (ps or pm)"
              quota:
                type: object
                description: (optional) Quota configuration
                properties:
                  identifier:
                    type: string
                    description: Identifier used for each quota counter
                  limit:
                    type: string
                    description: Quota counter limit to enforce for each identifier
              OASValidation:
                type: object
                description: (optional) Validate the request or response against the OpenAPI Specification file for the API
                properties:
                  requestEnabled:
                    type: boolean
                    description: "(default: false) Enable for the incoming request"
                  responseEnabled:
                    type: boolean
                    description: "(default: false) Enable for the response"
                  allowUnspecifiedHeaders:
                    type: boolean
                    description: "(default: false) (request only) Allow for headers that are not explicitly referenced in the OAS"
                  allowUnspecifiedQueryParams:
                    type: boolean
                    description: "(default: false) (request only) Allow for query parameters that are not explicitly referenced in the OAS"
                  allowUnspecifiedCookies:
                    type: boolean
                    description: "(default: false) (request only) Allow for cookies that are not explicitly referenced in the OAS"
              CORS:
                type: object
                description: (optional) Cross-origin Resource Sharing
                properties:
                  enabled:
                    type: boolean
                    description: "(default: false)"
                  allowCredentials:
                    type: boolean
                    description: "(default: false) Indicates whether the client is allowed to send the actual request (not the preflight request) using credentials. Translates to the Access-Control-Allow-Credentials header"
                  allowOrigins:
                    type: string
                    description: "(default: *) CSV of origins allowed to access the resource. The Access-Control-Allow-Origin header will include the matched origin"
                  handlePreflightRequests:
                    type: object
                    description: "(optional) Configuration for handling preflight OPTIONS requests"
                    properties:
                      enabled:
                        type: boolean
                        description: "(default: true) Indicates whether the API should handle OPTIONS preflight requests by generating a compliant response"
                      allowHeaders:
                        type: string
                        description: "(default: Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers) CSV of HTTP headers than can be used. Translates to the Access-Control-Allow-Headers header"
                      allowMethods:
                        type: string
                        description: "(default: GET, POST, HEAD, OPTIONS) CSV of HTTP methods allowed for the resource. Translates to the Access-Control-Allow-Methods header"
                      maxAge:
                        type: integer
                        description: "(default: 1800) Specifies how long (in seconds) a client should cache the values of the Access-Control-Allow-Headers and Access-Control-Allow-Methods headers for each resource"
              template:
                type: string
                description: (optional) The name of a pre-configured template to use for the API
              implementation:
                type: string
                description: The name of the service where the implementation of the API is found
              path:
                type: string
                description: The path to the root of the API
              developerUI:
                type: string
                description: (optional) The path to the developer User Interface for the API
              port:
                type: integer
                description: The port where the API is exposed
              resources:
                type: array
                items:
                  type: object
                description: (optional) Resources is an optional list of resources that are exposed by the API.
              required:
                type: boolean
                description: Required is a flag that indicates whether the API is required or not.
            required:
            - name
            # TODO: inconsitentency in upper/lowercase writing
            - apiType
            - implementation
            - path
            - port            
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true
    additionalPrinterColumns:
    - name: API_endpoint
      type: string
      description: API endpoint Url
      jsonPath: .status.apiStatus.url
    - name: Implementation_ready
      type: string
      description: API implementation is ready - has passed startup probe checks
      jsonPath: .status.implementation.ready
  - name: "v1beta4"
    # Each version can be enabled/disabled by Served flag.
    served: true
    # One and only one version must be marked as the storage version.
    storage: true
    deprecated: false
    schema:
      openAPIV3Schema:
        type: object
        required: ["spec"]
        properties:
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
            properties:
              name:
                type: string
                description: Name of the API
              specification:
                type: array
                items:
                  type: string
                description: >
                  url to the specification of the API, if required. e.g. url to the swagger file for Open API.
                  This is an array of strings to allow for multiple specifications (e.g. to support Gen-4 and Gen-5 Open-APIs)
                minItems: 1
              apiType:
                type: string
                enum:
                - openapi
                - prometheus
                description: The type of API specification. Currently only OpenAPI (swagger) and Prometheus (metrics) APIs are supported.
              apiKeyVerification:
                type: object
                description: (optional) 
                properties:
                  enabled:
                    type: boolean
                    description: "(default: false) Enforce verification of API key"
                  location:
                    type: string
                    description: (optional) Name of variable where API key value is expected
              rateLimit:
                type: object
                description: (optional) The rate limit configuration for the API
                properties:
                  enabled:
                    type: boolean
                    description: "(default: false)"
                  identifier:
                    type: string
                    description: Limit requests by this identifier when enforcing the rate limit
                  limit:
                    type: string
                    description: The limit (count) of requests to allow for each identifier
                  interval:
                    type: string
                    description: "(default: ps) The interval when enforcing the rate limit (ps or pm)"
              quota:
                type: object
                description: (optional) Quota configuration
                properties:
                  identifier:
                    type: string
                    description: Identifier used for each quota counter
                  limit:
                    type: string
                    description: Quota counter limit to enforce for each identifier
              OASValidation:
                type: object
                description: (optional) Validate the request or response against the OpenAPI Specification file for the API
                properties:
                  requestEnabled:
                    type: boolean
                    description: "(default: false) Enable for the incoming request"
                  responseEnabled:
                    type: boolean
                    description: "(default: false) Enable for the response"
                  allowUnspecifiedHeaders:
                    type: boolean
                    description: "(default: false) (request only) Allow for headers that are not explicitly referenced in the OAS"
                  allowUnspecifiedQueryParams:
                    type: boolean
                    description: "(default: false) (request only) Allow for query parameters that are not explicitly referenced in the OAS"
                  allowUnspecifiedCookies:
                    type: boolean
                    description: "(default: false) (request only) Allow for cookies that are not explicitly referenced in the OAS"
              CORS:
                type: object
                description: (optional) Cross-origin Resource Sharing
                properties:
                  enabled:
                    type: boolean
                    description: "(default: false)"
                  allowCredentials:
                    type: boolean
                    description: "(default: false) Indicates whether the client is allowed to send the actual request (not the preflight request) using credentials. Translates to the Access-Control-Allow-Credentials header"
                  allowOrigins:
                    type: string
                    description: "(default: *) CSV of origins allowed to access the resource. The Access-Control-Allow-Origin header will include the matched origin"
                  handlePreflightRequests:
                    type: object
                    description: "(optional) Configuration for handling preflight OPTIONS requests"
                    properties:
                      enabled:
                        type: boolean
                        description: "(default: true) Indicates whether the API should handle OPTIONS preflight requests by generating a compliant response"
                      allowHeaders:
                        type: string
                        description: "(default: Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers) CSV of HTTP headers than can be used. Translates to the Access-Control-Allow-Headers header"
                      allowMethods:
                        type: string
                        description: "(default: GET, POST, HEAD, OPTIONS) CSV of HTTP methods allowed for the resource. Translates to the Access-Control-Allow-Methods header"
                      maxAge:
                        type: integer
                        description: "(default: 1800) Specifies how long (in seconds) a client should cache the values of the Access-Control-Allow-Headers and Access-Control-Allow-Methods headers for each resource"
              template:
                type: string
                description: (optional) The name of a pre-configured template to use for the API
              implementation:
                type: string
                description: The name of the service where the implementation of the API is found
              path:
                type: string
                description: The path to the root of the API
              developerUI:
                type: string
                description: (optional) The path to the developer User Interface for the API
              port:
                type: integer
                description: The port where the API is exposed
              resources:
                type: array
                items:
                  type: object
                description: (optional) Resources is an optional list of resources that are exposed by the API.
              required:
                type: boolean
                description: Required is a flag that indicates whether the API is required or not.
            required:
            - name
            # TODO: inconsitentency in upper/lowercase writing
            - apiType
            - implementation
            - path
            - port            
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true
    additionalPrinterColumns:
    - name: API_endpoint
      type: string
      description: API endpoint Url
      jsonPath: .status.apiStatus.url
    - name: Implementation_ready
      type: string
      description: API implementation is ready - has passed startup probe checks
      jsonPath: .status.implementation.ready
---
# Source: canvas-oda/charts/oda-crds/templates/oda-publishednotification-crd.yaml
apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  name: "publishednotifications.oda.tmforum.org"
spec:
  group: "oda.tmforum.org"
  scope: "Namespaced"
  names:
    kind: "PublishedNotification"
    singular: "publishednotification"
    plural: "publishednotifications"
  versions:
    - name: "v1beta1"
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: false
      deprecated: false
      schema:
        openAPIV3Schema:
          type: object
          required: ["spec"]
          properties:
            spec:
              type: object
              x-kubernetes-preserve-unknown-fields: true
              properties:
                name:
                  type: string
                  description: Name of PublishedNotification that this component is dependent on
                specification:
                  type: string
                  format: url
                  description: url to the specification of the Notification. e.g. url to the swagger file
                implementation:
                  type: string
                  description: The name of the service sending the notifications
                path:
                  type: string
                  description: the path to the hub for this Notification
                port:
                  type: integer
                  description: The port where the hub is exposed 
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
              properties:
                uid:
                  type: string
                status:
                  type: string
                error:
                  type: string
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: HREF
          type: string
          description: HREF
          jsonPath: .spec.href
        - name: UID
          type: string
          description: UID
          jsonPath: .status.uid
        - name: Status
          type: string
          description: Publisher status
          jsonPath: .status.status
    - name: "v1beta2"
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: false
      deprecated: false
      schema:
        openAPIV3Schema:
          type: object
          required: ["spec"]
          properties:
            spec:
              type: object
              x-kubernetes-preserve-unknown-fields: true
              properties:
                name:
                  type: string
                  description: Name of PublishedNotification that this component is dependent on
                specification:
                  type: string
                  format: url
                  description: url to the specification of the Notification. e.g. url to the swagger file
                implementation:
                  type: string
                  description: The name of the service sending the notifications
                path:
                  type: string
                  description: the path to the hub for this Notification
                port:
                  type: integer
                  description: The port where the hub is exposed 
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
              properties:
                uid:
                  type: string
                status:
                  type: string
                error:
                  type: string
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: HREF
          type: string
          description: HREF
          jsonPath: .spec.href
        - name: UID
          type: string
          description: UID
          jsonPath: .status.uid
        - name: Status
          type: string
          description: Publisher status
          jsonPath: .status.status
    - name: "v1beta3"
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: false
      deprecated: false
      schema:
        openAPIV3Schema:
          type: object
          required: ["spec"]
          properties:
            spec:
              type: object
              x-kubernetes-preserve-unknown-fields: true
              properties:
                name:
                  type: string
                  description: Name of the Topic that this Component is going to push events into
                description:
                  type: string
                  description: (Optional) Description
                apitype:
                  type: string
                  enum:
                  - openapi
                  description: The type of API specification. Currently only OpenAPI (swagger) APIs are supported.
                specification:
                  type: string
                  format: url
                  description: (optional) url to the specification of the API. e.g. url to the swagger file
                implementation:
                  type: string
                  description: The name of the service sending the notifications
                developerUI:
                  type: string
                  description: (optional) The path to the developer User Interface for the API
                hub:
                  type: string
                  description: The path to the root of the API
                port:
                  type: integer
                  description: The port where the API is exposed
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
              properties:
                uid:
                  type: string
                status:
                  type: string
                error:
                  type: string
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Hub
          type: string
          description: Hub
          jsonPath: .spec.hub
        - name: Port
          type: string
          description: Port
          jsonPath: .spec.port
        - name: APIType
          type: string
          description: APIType
          jsonPath: .spec.apitype
        - name: UID
          type: string
          description: UID
          jsonPath: .status.uid
        - name: Status
          type: string
          description: Publisher status
          jsonPath: .status.status
    - name: "v1beta4"
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: true
      deprecated: false
      schema:
        openAPIV3Schema:
          type: object
          required: ["spec"]
          properties:
            spec:
              type: object
              x-kubernetes-preserve-unknown-fields: true
              properties:
                name:
                  type: string
                  description: Name of the Topic that this Component is going to push events into
                description:
                  type: string
                  description: (Optional) Description
                apitype:
                  type: string
                  enum:
                  - openapi
                  description: The type of API specification. Currently only OpenAPI (swagger) APIs are supported.
                specification:
                  type: string
                  format: url
                  description: (optional) url to the specification of the API. e.g. url to the swagger file
                implementation:
                  type: string
                  description: The name of the service sending the notifications
                developerUI:
                  type: string
                  description: (optional) The path to the developer User Interface for the API
                hub:
                  type: string
                  description: The path to the root of the API
                port:
                  type: integer
                  description: The port where the API is exposed
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
              properties:
                uid:
                  type: string
                status:
                  type: string
                error:
                  type: string
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Hub
          type: string
          description: Hub
          jsonPath: .spec.hub
        - name: Port
          type: string
          description: Port
          jsonPath: .spec.port
        - name: APIType
          type: string
          description: APIType
          jsonPath: .spec.apitype
        - name: UID
          type: string
          description: UID
          jsonPath: .status.uid
        - name: Status
          type: string
          description: Publisher status
          jsonPath: .status.status
---
# Source: canvas-oda/charts/oda-crds/templates/oda-secretsmanagement-crd.yaml
apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  name: "secretsmanagements.oda.tmforum.org"
spec:
  group: "oda.tmforum.org"
  scope: "Namespaced"
  names:
    plural: "secretsmanagements"
    singular: "secretsmanagement"
    shortNames: ["sman", "smans"]
    kind: "SecretsManagement"
  versions:
  - name: "v1beta3"
    # Each version can be enabled/disabled by Served flag.
    served: true
    # One and only one version must be marked as the storage version.
    storage: false
    deprecated: false
    # This overrides the default warning returned to API clients making v1alpha1 API requests.
    schema:
      openAPIV3Schema:
        type: object
        required: ["spec"]
        properties:
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
            required: ["type", "podSelector"]
            properties:
              type:
                type: string
                enum: ["sideCar"]
                description: defines, how components access the secrets, currently only sideCar is supported
              sideCar:
                type: object
                description: sideCar parameters, required if type has value "sideCar"
                required: ["port"]
                properties:
                  port:
                    type: integer
                    description: The port where the API is exposed in the sideCar (localhost:<port>)
              podSelector:
                type: object
                description: defines, which PODs are allowed to access the secrets (and logic)
                properties:
                  namespace:
                    type: string
                    description: glob patter matching the namespace of the POD
                  name:
                    type: string
                    description: glob patter matching the name of the POD
                  serviceaccount:
                    type: string
                    description: glob patter matching the serviceaccount od the POD
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true
            properties:
              implementation:
                type: object
                properties:
                  ready:
                    type: boolean
    additionalPrinterColumns:
    - name: NAME_SEL
      type: string
      description: SecretsManagement pod name selector
      jsonPath: .spec.podSelector.name
    - name: NAMESPACE_SEL
      type: string
      description: SecretsManagement pod namespace selector
      jsonPath: .spec.podSelector.namespace
    - name: SVCACCT_SEL
      type: string
      description: SecretsManagement pod serviceaccount selector
      jsonPath: .spec.podSelector.serviceaccount
    - name: READY
      type: string
      description: Canvas Vault configuration is ready
      jsonPath: .status.implementation.ready
  - name: "v1beta4"
    # Each version can be enabled/disabled by Served flag.
    served: true
    # One and only one version must be marked as the storage version.
    storage: true
    deprecated: false
    # This overrides the default warning returned to API clients making v1alpha1 API requests.
    schema:
      openAPIV3Schema:
        type: object
        required: ["spec"]
        properties:
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
            required: ["type", "podSelector"]
            properties:
              type:
                type: string
                enum: ["sideCar"]
                description: defines, how components access the secrets, currently only sideCar is supported
              sideCar:
                type: object
                description: sideCar parameters, required if type has value "sideCar"
                required: ["port"]
                properties:
                  port:
                    type: integer
                    description: The port where the API is exposed in the sideCar (localhost:<port>)
              podSelector:
                type: object
                description: defines, which PODs are allowed to access the secrets (and logic)
                properties:
                  namespace:
                    type: string
                    description: glob patter matching the namespace of the POD
                  name:
                    type: string
                    description: glob patter matching the name of the POD
                  serviceaccount:
                    type: string
                    description: glob patter matching the serviceaccount od the POD
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true
            properties:
              implementation:
                type: object
                properties:
                  ready:
                    type: boolean
    additionalPrinterColumns:
    - name: NAME_SEL
      type: string
      description: SecretsManagement pod name selector
      jsonPath: .spec.podSelector.name
    - name: NAMESPACE_SEL
      type: string
      description: SecretsManagement pod namespace selector
      jsonPath: .spec.podSelector.namespace
    - name: SVCACCT_SEL
      type: string
      description: SecretsManagement pod serviceaccount selector
      jsonPath: .spec.podSelector.serviceaccount
    - name: READY
      type: string
      description: Canvas Vault configuration is ready
      jsonPath: .status.implementation.ready
---
# Source: canvas-oda/charts/oda-crds/templates/oda-subscribednotification-crd.yaml
apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  name: "subscribednotifications.oda.tmforum.org"
spec:
  group: "oda.tmforum.org"
  scope: "Namespaced"
  names:
    kind: "SubscribedNotification"
    singular: "subscribednotification"
    plural: "subscribednotifications"
  versions:
    - name: "v1beta1"
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: false
      deprecated: false
      schema:
        openAPIV3Schema:
          type: object
          required: ["spec"]
          properties:
            spec:
              type: object
              x-kubernetes-preserve-unknown-fields: true
              properties:
                name:
                  type: string
                  description: Name of SubscribedNotification that this component is dependent on
                specification:
                  type: string
                  format: url
                  description: url to the specification of the Notification. e.g. url to the swagger file
                implementation:
                  type: string
                  description: The name of the service receiving the notifications
                path:
                  type: string
                  description: the path to the callback for this subscription
                port:
                  type: integer
                  description: The port where the callback is exposed 
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
              properties:
                uid:
                  type: string
                status:
                  type: string
                error:
                  type: string
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: HREF
          type: string
          description: HREF
          jsonPath: .spec.href
        - name: UID
          type: string
          description: UID
          jsonPath: .status.uid
        - name: Status
          type: string
          description: Subscriber status
          jsonPath: .status.status
    - name: "v1beta2"
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: false
      deprecated: false
      schema:
        openAPIV3Schema:
          type: object
          required: ["spec"]
          properties:
            spec:
              type: object
              x-kubernetes-preserve-unknown-fields: true
              properties:
                name:
                  type: string
                  description: Name of SubscribedNotification that this component is dependent on
                specification:
                  type: string
                  format: url
                  description: url to the specification of the Notification. e.g. url to the swagger file
                implementation:
                  type: string
                  description: The name of the service receiving the notifications
                path:
                  type: string
                  description: the path to the callback for this subscription
                port:
                  type: integer
                  description: The port where the callback is exposed 
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
              properties:
                uid:
                  type: string
                status:
                  type: string
                error:
                  type: string
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: HREF
          type: string
          description: HREF
          jsonPath: .spec.href
        - name: UID
          type: string
          description: UID
          jsonPath: .status.uid
        - name: Status
          type: string
          description: Subscriber status
          jsonPath: .status.status
    - name: "v1beta3"
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: false
      deprecated: false
      schema:
        openAPIV3Schema:
          type: object
          required: ["spec"]
          properties:
            spec:
              type: object
              x-kubernetes-preserve-unknown-fields: true
              properties:
                name:
                  type: string
                  description: Name of the Topic that this Component is interested in listening to
                description:
                  type: string
                  description: (Optional) Description
                apitype:
                  type: string
                  enum:
                  - openapi
                  description: The type of API specification. Currently only OpenAPI (swagger) APIs are supported.
                specification:
                  type: string
                  format: url
                  description: (optional) url to the specification of the API. e.g. url to the swagger file
                implementation:
                  type: string
                  description: The name of the service receiving the notifications
                developerUI:
                  type: string
                  description: (optional) The path to the developer User Interface for the API
                callback:
                  type: string
                  description: The path to the callback endpoint
                port:
                  type: integer
                  description: The port to which the callback listens to
                query:
                  type: string
                  description: (optional) Filter the events that will be sent to callback endpoint
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
              properties:
                uid:
                  type: string
                status:
                  type: string
                error:
                  type: string
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Callback
          type: string
          description: Hub
          jsonPath: .spec.callback
        - name: Port
          type: string
          description: Port
          jsonPath: .spec.port
        - name: APIType
          type: string
          description: APIType
          jsonPath: .spec.apitype
        - name: UID
          type: string
          description: UID
          jsonPath: .status.uid
        - name: Status
          type: string
          description: Subscriber status
          jsonPath: .status.status
    - name: "v1beta4"
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: true
      deprecated: false
      schema:
        openAPIV3Schema:
          type: object
          required: ["spec"]
          properties:
            spec:
              type: object
              x-kubernetes-preserve-unknown-fields: true
              properties:
                name:
                  type: string
                  description: Name of the Topic that this Component is interested in listening to
                description:
                  type: string
                  description: (Optional) Description
                apitype:
                  type: string
                  enum:
                  - openapi
                  description: The type of API specification. Currently only OpenAPI (swagger) APIs are supported.
                specification:
                  type: string
                  format: url
                  description: (optional) url to the specification of the API. e.g. url to the swagger file
                implementation:
                  type: string
                  description: The name of the service receiving the notifications
                developerUI:
                  type: string
                  description: (optional) The path to the developer User Interface for the API
                callback:
                  type: string
                  description: The path to the callback endpoint
                port:
                  type: integer
                  description: The port to which the callback listens to
                query:
                  type: string
                  description: (optional) Filter the events that will be sent to callback endpoint
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
              properties:
                uid:
                  type: string
                status:
                  type: string
                error:
                  type: string
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Callback
          type: string
          description: Hub
          jsonPath: .spec.callback
        - name: Port
          type: string
          description: Port
          jsonPath: .spec.port
        - name: APIType
          type: string
          description: APIType
          jsonPath: .spec.apitype
        - name: UID
          type: string
          description: UID
          jsonPath: .status.uid
        - name: Status
          type: string
          description: Subscriber status
          jsonPath: .status.status
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/charts/ingress-controller/templates/rbac.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: canvas-clusterrole
rules:
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - "*"
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - pods
      - services
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - apisix.apache.org
    resources:
      - apisixroutes
      - apisixroutes/status
      - apisixupstreams
      - apisixupstreams/status
      - apisixtlses
      - apisixtlses/status
      - apisixclusterconfigs
      - apisixclusterconfigs/status
      - apisixconsumers
      - apisixconsumers/status
      - apisixpluginconfigs
      - apisixpluginconfigs/status
      - apisixglobalrules
      - apisixglobalrules/status
    verbs:
      - '*'
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - '*'
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - tcproutes
      - udproutes
      - httproutes
      - tlsroutes
      - gateways
      - gatewayclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - tcproutes/status
      - udproutes/status
      - httproutes/status
      - tlsroutes/status
      - gateways/status
      - gatewayclasses/status
    verbs:
      - update
---
# Source: canvas-oda/charts/apisix-gateway/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: canvas-operator-clusterrole
rules:
- apiGroups: ["zalando.org"]
  resources: ["clusterkopfpeerings"]
  verbs: ["get", "list", "watch", "patch"]
- apiGroups: ["oda.tmforum.org"]
  resources: ["exposedapis"]
  verbs: ["get", "list", "watch", "patch"]
- apiGroups: [""]  
  resources: ["services"]
  verbs: ["get", "list", "patch", "update"]
  resourceNames: ["istio-ingress"] 
- apiGroups: ["networking.istio.io"]
  resources: ["gateways"]
  verbs: ["get", "patch", "update"]
---
# Source: canvas-oda/charts/apisix-gateway/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: canvas-apisix-check-clusterrole
rules:
- apiGroups: [""]
  resources: ["services", "endpoints"]
  verbs: ["get", "list", "watch"]
  # Uncomment the following if you want to restrict access to specific services
  # resourceNames: ["istio-ingress","apisix-admin"]
- apiGroups: ["apisix.apache.org"]
  resources: ["apisixroutes", "apisixpluginconfigs"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["networking.istio.io"]
  resources: ["gateways"]
  verbs: ["get", "patch", "update"]
- apiGroups: ["zalando.org"]
  resources: ["clusterkopfpeerings"]
  verbs: ["get", "list", "watch", "patch"]
- apiGroups: ["oda.tmforum.org"]
  resources: ["exposedapis"]
  verbs: ["get", "list", "watch", "patch"]
---
# Source: canvas-oda/charts/apisix-gateway/templates/rbacapioperator.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: apisixapioperator-role-cluster
rules:

  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [zalando.org]
    resources: [clusterkopfpeerings]
    verbs: [list, watch, patch, get]
  - apiGroups: [zalando.org]
    resources: [kopfpeerings]
    verbs: [list, watch, patch, get]
  - apiGroups: [apiextensions.k8s.io]
    resources: [customresourcedefinitions]
    verbs: [list, watch, get]
    
  # Framework: posting the events about the handlers progress/errors.
  - apiGroups: [events.k8s.io]
    resources: [events]
    verbs: [create]
  - apiGroups: [""]
    resources: [events]
    verbs: [create]

  # Application: read-only access for watching cluster-wide.
  - apiGroups: [oda.tmforum.org]
    resources: [components, components/status]
    verbs: [list, watch, patch, get]
  - apiGroups: [oda.tmforum.org]
    resources: [exposedapis]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: [oda.tmforum.org]
    resources: [secretsmanagements]
    verbs: [list, watch, patch, get, create, update, delete]    
  - apiGroups: [wso2.com]
    resources: [apis]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: [""] # "" indicates the core API group
    resources: ["services", "services/status", "pods", "persistentvolumeclaims", "persistentvolumeclaims/status", "namespaces", "configmaps", "configmaps/status", "secrets", "secrets/status", "serviceaccounts", "serviceaccounts/status"]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses", "ingresses/status", "httproutes"]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: ["extensions", "apps"]
    resources: ["deployments", "deployments/status", "statefulsets", "statefulsets/status"]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: [ "roles", "roles/status", "rolebindings", "rolebindings/status"]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: ["batch", "extensions"]
    resources: ["jobs", "jobs/status", "cronjobs", "cronjobs/status"]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: ["discovery.k8s.io"]
    resources: ["endpointslices"]
    verbs: [get, list, patch, watch]
  - apiGroups: [oda.tmforum.org]
    resources: [publishednotifications, publishednotifications/status, subscribednotifications, subscribednotifications/status]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: ["gateway.networking.k8s.io"]
    resources: ["httproutes"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["configuration.konghq.com"]
    resources: ["kongplugins"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["apisix.apache.org"]
    resources: ["apisixroutes", "apisixpluginconfigs"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["gateway.networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]


  # Application: other resources it produces and manipulates.
  # Here, we create Jobs+PVCs+Pods, but we do not patch/update/delete them ever.
  - apiGroups: [batch, extensions]
    resources: [jobs]
    verbs: [create]
  - apiGroups: [""]
    resources: [pods, persistentvolumeclaims]
    verbs: [create]

  # Istio services
  - apiGroups: [networking.istio.io]
    resources: [virtualservices]
    verbs: [list, watch, patch, get, create, update, delete]

  # Prometheus servicemonitor
  - apiGroups: [monitoring.coreos.com]
    resources: [servicemonitors]
    verbs: [list, watch, patch, get, create, update, delete]

  # DependentAPI Custom Resources
  - apiGroups: [oda.tmforum.org]
    resources: [dependentapis]
    verbs: [list, watch, patch, get, create, update, delete]
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/cainjector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: canvas-cert-manager-cainjector
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "cainjector"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "create", "update", "patch"]
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["validatingwebhookconfigurations", "mutatingwebhookconfigurations"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["apiregistration.k8s.io"]
    resources: ["apiservices"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "watch", "update"]
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/rbac.yaml
# Issuer controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: canvas-cert-manager-controller-issuers
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["issuers", "issuers/status"]
    verbs: ["update", "patch"]
  - apiGroups: ["cert-manager.io"]
    resources: ["issuers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/rbac.yaml
# ClusterIssuer controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: canvas-cert-manager-controller-clusterissuers
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["clusterissuers", "clusterissuers/status"]
    verbs: ["update", "patch"]
  - apiGroups: ["cert-manager.io"]
    resources: ["clusterissuers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/rbac.yaml
# Certificates controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: canvas-cert-manager-controller-certificates
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificates/status", "certificaterequests", "certificaterequests/status"]
    verbs: ["update", "patch"]
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests", "clusterissuers", "issuers"]
    verbs: ["get", "list", "watch"]
  # We require these rules to support users with the OwnerReferencesPermissionEnforcement
  # admission controller enabled:
  # https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates/finalizers", "certificaterequests/finalizers"]
    verbs: ["update"]
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["orders"]
    verbs: ["create", "delete", "get", "list", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch", "create", "update", "delete", "patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/rbac.yaml
# Orders controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: canvas-cert-manager-controller-orders
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
rules:
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["orders", "orders/status"]
    verbs: ["update", "patch"]
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["orders", "challenges"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["cert-manager.io"]
    resources: ["clusterissuers", "issuers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges"]
    verbs: ["create", "delete"]
  # We require these rules to support users with the OwnerReferencesPermissionEnforcement
  # admission controller enabled:
  # https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["orders/finalizers"]
    verbs: ["update"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/rbac.yaml
# Challenges controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: canvas-cert-manager-controller-challenges
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
rules:
  # Use to update challenge resource status
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges", "challenges/status"]
    verbs: ["update", "patch"]
  # Used to watch challenge resources
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges"]
    verbs: ["get", "list", "watch"]
  # Used to watch challenges, issuer and clusterissuer resources
  - apiGroups: ["cert-manager.io"]
    resources: ["issuers", "clusterissuers"]
    verbs: ["get", "list", "watch"]
  # Need to be able to retrieve ACME account private key to complete challenges
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
  # Used to create events
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
  # HTTP01 rules
  - apiGroups: [""]
    resources: ["pods", "services"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch", "create", "delete", "update"]
  - apiGroups: [ "gateway.networking.k8s.io" ]
    resources: [ "httproutes" ]
    verbs: ["get", "list", "watch", "create", "delete", "update"]
  # We require the ability to specify a custom hostname when we are creating
  # new ingress resources.
  # See: https://github.com/openshift/origin/blob/21f191775636f9acadb44fa42beeb4f75b255532/pkg/route/apiserver/admission/ingress_admission.go#L84-L148
  - apiGroups: ["route.openshift.io"]
    resources: ["routes/custom-host"]
    verbs: ["create"]
  # We require these rules to support users with the OwnerReferencesPermissionEnforcement
  # admission controller enabled:
  # https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges/finalizers"]
    verbs: ["update"]
  # DNS01 rules (duplicated above)
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/rbac.yaml
# ingress-shim controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: canvas-cert-manager-controller-ingress-shim
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests"]
    verbs: ["create", "update", "delete"]
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests", "issuers", "clusterissuers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch"]
  # We require these rules to support users with the OwnerReferencesPermissionEnforcement
  # admission controller enabled:
  # https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses/finalizers"]
    verbs: ["update"]
  - apiGroups: ["gateway.networking.k8s.io"]
    resources: ["gateways", "httproutes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["gateway.networking.k8s.io"]
    resources: ["gateways/finalizers", "httproutes/finalizers"]
    verbs: ["update"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: canvas-cert-manager-view
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
    rbac.authorization.k8s.io/aggregate-to-view: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests", "issuers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges", "orders"]
    verbs: ["get", "list", "watch"]
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: canvas-cert-manager-edit
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests", "issuers"]
    verbs: ["create", "delete", "deletecollection", "patch", "update"]
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates/status"]
    verbs: ["update"]
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges", "orders"]
    verbs: ["create", "delete", "deletecollection", "patch", "update"]
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/rbac.yaml
# Permission to approve CertificateRequests referencing cert-manager.io Issuers and ClusterIssuers
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: canvas-cert-manager-controller-approve:cert-manager-io
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "cert-manager"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["signers"]
    verbs: ["approve"]
    resourceNames: ["issuers.cert-manager.io/*", "clusterissuers.cert-manager.io/*"]
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/rbac.yaml
# Permission to:
# - Update and sign CertificatSigningeRequests referencing cert-manager.io Issuers and ClusterIssuers
# - Perform SubjectAccessReviews to test whether users are able to reference Namespaced Issuers
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: canvas-cert-manager-controller-certificatesigningrequests
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "cert-manager"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
rules:
  - apiGroups: ["certificates.k8s.io"]
    resources: ["certificatesigningrequests"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["certificates.k8s.io"]
    resources: ["certificatesigningrequests/status"]
    verbs: ["update", "patch"]
  - apiGroups: ["certificates.k8s.io"]
    resources: ["signers"]
    resourceNames: ["issuers.cert-manager.io/*", "clusterissuers.cert-manager.io/*"]
    verbs: ["sign"]
  - apiGroups: ["authorization.k8s.io"]
    resources: ["subjectaccessreviews"]
    verbs: ["create"]
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/webhook-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: canvas-cert-manager-webhook:subjectaccessreviews
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
rules:
- apiGroups: ["authorization.k8s.io"]
  resources: ["subjectaccessreviews"]
  verbs: ["create"]
---
# Source: canvas-oda/charts/component-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: odacomponent-role-cluster
  labels:
    helm.sh/chart: component-operator-1.2.1
    app.kubernetes.io/name: component-operator
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/version: "v1beta4"
    app.kubernetes.io/managed-by: Helm
rules:

  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [zalando.org]
    resources: [clusterkopfpeerings]
    verbs: [list, watch, patch, get]
  - apiGroups: [zalando.org]
    resources: [kopfpeerings]
    verbs: [list, watch, patch, get]
  - apiGroups: [apiextensions.k8s.io]
    resources: [customresourcedefinitions]
    verbs: [list, watch, get]
    
  # Framework: posting the events about the handlers progress/errors.
  - apiGroups: [events.k8s.io]
    resources: [events]
    verbs: [create]
  - apiGroups: [""]
    resources: [events]
    verbs: [create]

  # Application: read-only access for watching cluster-wide.
  - apiGroups: [oda.tmforum.org]
    resources: [components, components/status]
    verbs: [list, watch, patch, get]
  - apiGroups: [oda.tmforum.org]
    resources: [exposedapis]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: [oda.tmforum.org]
    resources: [secretsmanagements]
    verbs: [list, watch, patch, get, create, update, delete]    
  - apiGroups: [wso2.com]
    resources: [apis]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: [""] # "" indicates the core API group
    resources: ["services", "services/status", "pods", "persistentvolumeclaims", "persistentvolumeclaims/status", "namespaces", "configmaps", "configmaps/status", "secrets", "secrets/status", "serviceaccounts", "serviceaccounts/status"]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses", "ingresses/status", "httproutes"]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: ["extensions", "apps"]
    resources: ["deployments", "deployments/status", "statefulsets", "statefulsets/status"]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: [ "roles", "roles/status", "rolebindings", "rolebindings/status"]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: ["batch", "extensions"]
    resources: ["jobs", "jobs/status", "cronjobs", "cronjobs/status"]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: ["discovery.k8s.io"]
    resources: ["endpointslices"]
    verbs: [get, list, patch, watch]
  - apiGroups: [oda.tmforum.org]
    resources: [publishednotifications, publishednotifications/status, subscribednotifications, subscribednotifications/status]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: ["gateway.networking.k8s.io"]
    resources: ["httproutes"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["configuration.konghq.com"]
    resources: ["kongplugins"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["apisix.apache.org"]
    resources: ["apisixroutes", "apisixpluginconfigs"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["gateway.networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]


  # Application: other resources it produces and manipulates.
  # Here, we create Jobs+PVCs+Pods, but we do not patch/update/delete them ever.
  - apiGroups: [batch, extensions]
    resources: [jobs]
    verbs: [create]
  - apiGroups: [""]
    resources: [pods, persistentvolumeclaims]
    verbs: [create]

  # Istio services
  - apiGroups: [networking.istio.io]
    resources: [virtualservices]
    verbs: [list, watch, patch, get, create, update, delete]

  # Prometheus servicemonitor
  - apiGroups: [monitoring.coreos.com]
    resources: [servicemonitors]
    verbs: [list, watch, patch, get, create, update, delete]

  # DependentAPI Custom Resources
  - apiGroups: [oda.tmforum.org]
    resources: [dependentapis]
    verbs: [list, watch, patch, get, create, update, delete]
---
# Source: canvas-oda/charts/dependentapi-simple-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: canvas-depapi-op-role-cluster
rules:

  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [zalando.org]
    resources: [clusterkopfpeerings]
    verbs: [list, watch, patch, get]

  # Framework: runtime observation of namespaces & CRDs (addition/deletion).
  - apiGroups: [apiextensions.k8s.io]
    resources: [customresourcedefinitions]
    verbs: [list, watch]
  - apiGroups: [""]
    resources: [namespaces]
    verbs: [list, watch]

  # Framework: admission webhook configuration management.
  - apiGroups: [admissionregistration.k8s.io]
    resources: [mutatingwebhookconfigurations]
    verbs: [create, patch]


  # Application: read-only access for watching cluster-wide.
  - apiGroups: [oda.tmforum.org]
    resources: [dependentapis]
    verbs: [list, watch, get, patch]

  - apiGroups: [oda.tmforum.org]
    resources: [components]
    verbs: [list, watch, get, patch]

  - apiGroups: [oda.tmforum.org]
    resources: [exposedapis]
    verbs: [list, watch, get]

  # Application: read-only access for watching cluster-wide.
  - apiGroups: [""]
    resources: [pods]
    verbs: [list, watch, patch, delete]
    
  # Application: read-only access for replica_Set
  - apiGroups: [apps]
    resources: [replicasets]
    verbs: [list, get]

  # Application: read-only access for deployments
  - apiGroups: [apps]
    resources: [deployments]
    verbs: [list, get]

  # Application: create events
  - apiGroups: [""]
    resources: [events]
    verbs: [create]
    
  # Application: create mutating webhooks 
  - apiGroups: [admissionregistration.k8s.io]
    resources: [validatingwebhookconfigurations, mutatingwebhookconfigurations]
    verbs: [create, patch]
---
# Source: canvas-oda/charts/secretsmanagement-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: canvas-smanop-role-cluster
rules:

  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [zalando.org]
    resources: [clusterkopfpeerings]
    verbs: [list, watch, patch, get]

  # Framework: runtime observation of namespaces & CRDs (addition/deletion).
  - apiGroups: [apiextensions.k8s.io]
    resources: [customresourcedefinitions]
    verbs: [list, watch]
  - apiGroups: [""]
    resources: [namespaces]
    verbs: [list, watch]

  # Framework: admission webhook configuration management.
  - apiGroups: [admissionregistration.k8s.io]
    resources: [mutatingwebhookconfigurations]
    verbs: [create, patch]


  - apiGroups: [oda.tmforum.org]
    resources: [secretsmanagements]
    verbs: [list, watch, get, patch]

  - apiGroups: [oda.tmforum.org]
    resources: [components]
    verbs: [list, watch, get, patch]
    
  # Application: read-only access for watching cluster-wide.
  - apiGroups: [""]
    resources: [pods]
    verbs: [list, watch, patch, delete]
    
  # Application: read-only access for replica_Set
  - apiGroups: [apps]
    resources: [replicasets]
    verbs: [list, get]

  # Application: read-only access for deployments
  - apiGroups: [apps]
    resources: [deployments]
    verbs: [list, get]

  # Application: create events
  - apiGroups: [""]
    resources: [events]
    verbs: [create]
    
  # Application: create mutating webhooks 
  - apiGroups: [admissionregistration.k8s.io]
    resources: [validatingwebhookconfigurations, mutatingwebhookconfigurations]
    verbs: [create, patch]
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/charts/ingress-controller/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: canvas-clusterrolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: canvas-clusterrole
subjects:
  - kind: ServiceAccount
    name: canvas-ingress-controller
    namespace: canvas
---
# Source: canvas-oda/charts/apisix-gateway/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: canvas-operator-clusterrolebinding
subjects:
- kind: ServiceAccount
  name: canvas-operator
  namespace: canvas
roleRef:
  kind: ClusterRole
  name: canvas-operator-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
# Source: canvas-oda/charts/apisix-gateway/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: canvas-apisix-check-rolebinding
subjects:
- kind: ServiceAccount
  name: canvas-apisix-operator
  namespace: canvas
roleRef:
  kind: ClusterRole
  name: canvas-apisix-check-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: canvas-oda/charts/apisix-gateway/templates/rbacapioperator.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: apisixapioperator-rolebinding-cluster
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: apisixapioperator-role-cluster
subjects:
  - kind: ServiceAccount
    name: apisixapioperator-account
    namespace: canvas
---
# Source: canvas-oda/charts/canvas-vault/charts/vault/templates/server-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: canvas-vault-hc-server-binding
  labels:
    helm.sh/chart: vault-0.26.1
    app.kubernetes.io/name: vault-hc
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: canvas-vault-hc
  namespace: canvas-vault
---
# Source: canvas-oda/charts/canvas-vault/templates/oidc-reviewer-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: oidc-reviewer
  annotations:
    "helm.sh/resource-policy": "keep"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:service-account-issuer-discovery
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:unauthenticated
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/cainjector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: canvas-cert-manager-cainjector
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "cainjector"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: canvas-cert-manager-cainjector
subjects:
  - name: canvas-cert-manager-cainjector
    namespace: cert-manager
    kind: ServiceAccount
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: canvas-cert-manager-controller-issuers
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: canvas-cert-manager-controller-issuers
subjects:
  - name: canvas-cert-manager
    namespace: cert-manager
    kind: ServiceAccount
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: canvas-cert-manager-controller-clusterissuers
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: canvas-cert-manager-controller-clusterissuers
subjects:
  - name: canvas-cert-manager
    namespace: cert-manager
    kind: ServiceAccount
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: canvas-cert-manager-controller-certificates
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: canvas-cert-manager-controller-certificates
subjects:
  - name: canvas-cert-manager
    namespace: cert-manager
    kind: ServiceAccount
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: canvas-cert-manager-controller-orders
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: canvas-cert-manager-controller-orders
subjects:
  - name: canvas-cert-manager
    namespace: cert-manager
    kind: ServiceAccount
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: canvas-cert-manager-controller-challenges
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: canvas-cert-manager-controller-challenges
subjects:
  - name: canvas-cert-manager
    namespace: cert-manager
    kind: ServiceAccount
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: canvas-cert-manager-controller-ingress-shim
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: canvas-cert-manager-controller-ingress-shim
subjects:
  - name: canvas-cert-manager
    namespace: cert-manager
    kind: ServiceAccount
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: canvas-cert-manager-controller-approve:cert-manager-io
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "cert-manager"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: canvas-cert-manager-controller-approve:cert-manager-io
subjects:
  - name: canvas-cert-manager
    namespace: cert-manager
    kind: ServiceAccount
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: canvas-cert-manager-controller-certificatesigningrequests
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "cert-manager"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: canvas-cert-manager-controller-certificatesigningrequests
subjects:
  - name: canvas-cert-manager
    namespace: cert-manager
    kind: ServiceAccount
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/webhook-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: canvas-cert-manager-webhook:subjectaccessreviews
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: canvas-cert-manager-webhook:subjectaccessreviews
subjects:
- apiGroup: ""
  kind: ServiceAccount
  name: canvas-cert-manager-webhook
  namespace: cert-manager
---
# Source: canvas-oda/charts/component-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: odacomponent-rolebinding-cluster
  labels:
    helm.sh/chart: component-operator-1.2.1
    app.kubernetes.io/name: component-operator
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/version: "v1beta4"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: odacomponent-role-cluster
subjects:
  - kind: ServiceAccount
    name: odacomponent-account
    namespace: canvas
---
# Source: canvas-oda/charts/dependentapi-simple-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: canvas-depapi-op-rolebinding-cluster
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: canvas-depapi-op-role-cluster
subjects:
  - kind: ServiceAccount
    name: canvas-depapi-op-account
    namespace: "canvas"
---
# Source: canvas-oda/charts/secretsmanagement-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: canvas-smanop-rolebinding-cluster
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: canvas-smanop-role-cluster
subjects:
  - kind: ServiceAccount
    name: canvas-smanop-account
    namespace: "canvas"
---
# Source: canvas-oda/charts/apisix-gateway/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: components
  name: canvas-operator-role-components
rules:
- apiGroups: ["oda.tmforum.org"]
  resources: ["exposedapis"]
  verbs: ["get", "list", "watch", "patch"]
---
# Source: canvas-oda/charts/apisix-gateway/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: istio-ingress
  name: canvas-operator-role-istio-ingress
rules:
- apiGroups: ["apisix.apache.org"]
  resources: ["apisixroutes", "apisixpluginconfigs"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
# Source: canvas-oda/charts/apisix-gateway/templates/rbacapioperator.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: components
  name: apisixapioperator-role-namespaced
rules:

  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [zalando.org]
    resources: ["kopfpeerings"]
    verbs: [list, watch, patch, get]

  # Framework: posting the events about the handlers progress/errors.
  - apiGroups: [events.k8s.io]
    resources: [events]
    verbs: [create]
  - apiGroups: [""]
    resources: [events]
    verbs: [create]

  # Application: watching & handling for the custom resource we declare.
  - apiGroups: [oda.tmforum.org]
    resources: [components, "components/status"]
    verbs: [list, watch, patch, get]
  - apiGroups: [oda.tmforum.org]
    resources: [exposedapis]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: [oda.tmforum.org]
    resources: [secretsmanagements]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: [wso2.com]
    resources: [apis]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: [""] 
    resources: ["services", "services/status", "pods", "persistentvolumeclaims", "persistentvolumeclaims/status", "namespaces", "configmaps", "configmaps/status", "secret", "secret/status", "serviceaccounts", "serviceaccounts/status"]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: ["ingresses", "ingresses/status", "httproutes"]
    resources: ["ingresses", "ingresses/status"]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: ["extensions", "apps"]
    resources: ["deployments", "deployments/status", "statefulsets", "statefulsets/status"]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: [ "roles", "roles/status", "rolebindings", "rolebindings/status"]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: ["batch", "extensions"]
    resources: ["jobs", "jobs/status", "cronjobs", "cronjobs/status"]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: ["discovery.k8s.io"]
    resources: ["endpointslices"]
    verbs: [list, watch, get, patch]
  - apiGroups: ["gateway.networking.k8s.io"]
    resources: ["httproutes"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["configuration.konghq.com"]
    resources: ["kongplugins"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["apisix.apache.org"]
    resources: ["apisixroutes", "apisixpluginconfigs"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["gateway.networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]


  # Application: other resources it produces and manipulates.
  # Here, we create Jobs+PVCs+Pods, but we do not patch/update/delete them ever.
  - apiGroups: [batch, extensions]
    resources: [jobs]
    verbs: [create]
#  - apiGroups: [""]
#    resources: [pods, persistentvolumeclaims]
#    verbs: [create, watch, list]
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/cainjector-rbac.yaml
# leader election rules
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: canvas-cert-manager-cainjector:leaderelection
  namespace: kube-system
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "cainjector"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
rules:
  # Used for leader election by the controller
  # cert-manager-cainjector-leader-election is used by the CertificateBased injector controller
  #   see cmd/cainjector/start.go#L113
  # cert-manager-cainjector-leader-election-core is used by the SecretBased injector controller
  #   see cmd/cainjector/start.go#L137
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    resourceNames: ["cert-manager-cainjector-leader-election", "cert-manager-cainjector-leader-election-core"]
    verbs: ["get", "update", "patch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["create"]
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: canvas-cert-manager:leaderelection
  namespace: kube-system
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
rules:
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    resourceNames: ["cert-manager-controller"]
    verbs: ["get", "update", "patch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["create"]
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/webhook-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: canvas-cert-manager-webhook:dynamic-serving
  namespace: cert-manager
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
rules:
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames:
  - 'canvas-cert-manager-webhook-ca'
  verbs: ["get", "list", "watch", "update"]
# It's not possible to grant CREATE permission on a single resourceName.
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create"]
---
# Source: canvas-oda/charts/component-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: components
  name: odacomponent-role-namespaced
  labels:
    helm.sh/chart: component-operator-1.2.1
    app.kubernetes.io/name: component-operator
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/version: "v1beta4"
    app.kubernetes.io/managed-by: Helm
rules:

  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [zalando.org]
    resources: ["kopfpeerings"]
    verbs: [list, watch, patch, get]

  # Framework: posting the events about the handlers progress/errors.
  - apiGroups: [events.k8s.io]
    resources: [events]
    verbs: [create]
  - apiGroups: [""]
    resources: [events]
    verbs: [create]

  # Application: watching & handling for the custom resource we declare.
  - apiGroups: [oda.tmforum.org]
    resources: [components, "components/status"]
    verbs: [list, watch, patch, get]
  - apiGroups: [oda.tmforum.org]
    resources: [exposedapis]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: [oda.tmforum.org]
    resources: [secretsmanagements]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: [wso2.com]
    resources: [apis]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: [""] 
    resources: ["services", "services/status", "pods", "persistentvolumeclaims", "persistentvolumeclaims/status", "namespaces", "configmaps", "configmaps/status", "secret", "secret/status", "serviceaccounts", "serviceaccounts/status"]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: ["ingresses", "ingresses/status", "httproutes"]
    resources: ["ingresses", "ingresses/status"]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: ["extensions", "apps"]
    resources: ["deployments", "deployments/status", "statefulsets", "statefulsets/status"]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: [ "roles", "roles/status", "rolebindings", "rolebindings/status"]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: ["batch", "extensions"]
    resources: ["jobs", "jobs/status", "cronjobs", "cronjobs/status"]
    verbs: [list, watch, patch, get, create, update, delete]
  - apiGroups: ["discovery.k8s.io"]
    resources: ["endpointslices"]
    verbs: [list, watch, get, patch]
  - apiGroups: ["gateway.networking.k8s.io"]
    resources: ["httproutes"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["configuration.konghq.com"]
    resources: ["kongplugins"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["apisix.apache.org"]
    resources: ["apisixroutes", "apisixpluginconfigs"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["gateway.networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]


  # Application: other resources it produces and manipulates.
  # Here, we create Jobs+PVCs+Pods, but we do not patch/update/delete them ever.
  - apiGroups: [batch, extensions]
    resources: [jobs]
    verbs: [create]
#  - apiGroups: [""]
#    resources: [pods, persistentvolumeclaims]
#    verbs: [create, watch, list]
---
# Source: canvas-oda/charts/dependentapi-simple-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: "canvas"
  name: canvas-depapi-op-role-namespaced
rules:

  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [zalando.org]
    resources: [kopfpeerings]
    verbs: [list, watch, patch, get]

  # Framework: posting the events about the handlers progress/errors.
  - apiGroups: [""]
    resources: [events]
    verbs: [create]

  # Application: watching & handling for the custom resource we declare.
  - apiGroups: [oda.tmforum.org]
    resources: [dependentapis]
    verbs: [list, watch, patch, get]

  # Application: watching & handling for the custom resource we declare.
  - apiGroups: [oda.tmforum.org]
    resources: [components]
    verbs: [list, watch, patch, get]

  # Application: watching & handling for the custom resource we declare.
  
  - apiGroups: [oda.tmforum.org]
    resources: [exposedapis]
    verbs: [list, watch, get]

  # Application: watching & handling for the custom resource we declare.
  - apiGroups: [""]
    resources: [pods]
    verbs: [list, watch, patch, delete]

  # Application: read-only access for replica_Set
  - apiGroups: [apps]
    resources: [replicasets]
    verbs: [list, get]


  # Application: watching & handling for deployments (transfer labels to pods).
  - apiGroups: [apps]
    resources: [deployments]
    verbs: [list, watch, patch, get]

  # Application: other resources it produces and manipulates.
  # Here, we create Jobs+PVCs+Pods, but we do not patch/update/delete them ever.
  - apiGroups: [batch, extensions]
    resources: [jobs]
    verbs: [create]
  - apiGroups: [""]
    resources: [pods, persistentvolumeclaims]
    verbs: [create]
    
  ## Application: create mutating webhooks 
  #- apiGroups: [admissionregistration.k8s.io/v1, admissionregistration.k8s.io/v1beta1]
  #  resources: [validatingwebhookconfigurations, mutatingwebhookconfigurations]
  #  verbs: [create, patch]
---
# Source: canvas-oda/charts/secretsmanagement-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: "canvas"
  name: canvas-smanop-role-namespaced
rules:

  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [zalando.org]
    resources: [kopfpeerings]
    verbs: [list, watch, patch, get]

  # Framework: posting the events about the handlers progress/errors.
  - apiGroups: [""]
    resources: [events]
    verbs: [create]

  # Application: watching & handling for the custom resource we declare.
  - apiGroups: [oda.tmforum.org]
    resources: [secretsmanagements]
    verbs: [list, watch, patch, get]

  # Application: watching & handling for the custom resource we declare.
  - apiGroups: [""]
    resources: [pods]
    verbs: [list, watch, patch, delete]

  # Application: read-only access for replica_Set
  - apiGroups: [apps]
    resources: [replicasets]
    verbs: [list, get]


  # Application: watching & handling for deployments (transfer labels to pods).
  - apiGroups: [apps]
    resources: [deployments]
    verbs: [list, watch, patch, get]

  # Application: other resources it produces and manipulates.
  # Here, we create Jobs+PVCs+Pods, but we do not patch/update/delete them ever.
  - apiGroups: [batch, extensions]
    resources: [jobs]
    verbs: [create]
  - apiGroups: [""]
    resources: [pods, persistentvolumeclaims]
    verbs: [create]
    
  ## Application: create mutating webhooks 
  #- apiGroups: [admissionregistration.k8s.io/v1, admissionregistration.k8s.io/v1beta1]
  #  resources: [validatingwebhookconfigurations, mutatingwebhookconfigurations]
  #  verbs: [create, patch]
---
# Source: canvas-oda/charts/apisix-gateway/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: canvas-operator-rolebinding-components
  namespace: components
subjects:
- kind: ServiceAccount
  name: canvas-operator
  namespace: canvas
roleRef:
  kind: Role
  name: canvas-operator-role-components
  apiGroup: rbac.authorization.k8s.io
---
# Source: canvas-oda/charts/apisix-gateway/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: canvas-operator-rolebinding-istio-ingress
  namespace: istio-ingress
subjects:
- kind: ServiceAccount
  name: canvas-operator
  namespace: canvas
roleRef:
  kind: Role
  name: canvas-operator-role-istio-ingress
  apiGroup: rbac.authorization.k8s.io
---
# Source: canvas-oda/charts/apisix-gateway/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: canvas-operator-rolebinding-components
  namespace: canvas
subjects:
- kind: ServiceAccount
  name: canvas-apisix-operator
  namespace: canvas
roleRef:
  kind: Role
  name: canvas-operator-role-components
  apiGroup: rbac.authorization.k8s.io
---
# Source: canvas-oda/charts/apisix-gateway/templates/rbacapioperator.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: components
  name: apisixapioperator-rolebinding-namespaced
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: apisixapioperator-role-namespaced
subjects:
  - kind: ServiceAccount
    name: apisixapioperator-account
    namespace: canvas
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/cainjector-rbac.yaml
# grant cert-manager permission to manage the leaderelection configmap in the
# leader election namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: canvas-cert-manager-cainjector:leaderelection
  namespace: kube-system
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "cainjector"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: canvas-cert-manager-cainjector:leaderelection
subjects:
  - kind: ServiceAccount
    name: canvas-cert-manager-cainjector
    namespace: cert-manager
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/rbac.yaml
# grant cert-manager permission to manage the leaderelection configmap in the
# leader election namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: canvas-cert-manager:leaderelection
  namespace: kube-system
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: canvas-cert-manager:leaderelection
subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: canvas-cert-manager
    namespace: cert-manager
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/webhook-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: canvas-cert-manager-webhook:dynamic-serving
  namespace: cert-manager
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: canvas-cert-manager-webhook:dynamic-serving
subjects:
- apiGroup: ""
  kind: ServiceAccount
  name: canvas-cert-manager-webhook
  namespace: cert-manager
---
# Source: canvas-oda/charts/component-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: components
  name: odacomponent-rolebinding-namespaced
  labels:
    helm.sh/chart: component-operator-1.2.1
    app.kubernetes.io/name: component-operator
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/version: "v1beta4"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: odacomponent-role-namespaced
subjects:
  - kind: ServiceAccount
    name: odacomponent-account
    namespace: canvas
---
# Source: canvas-oda/charts/dependentapi-simple-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: "canvas"
  name: canvas-depapi-op-rolebinding-namespaced
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: canvas-depapi-op-role-namespaced
subjects:
  - kind: ServiceAccount
    name: canvas-depapi-op-account
---
# Source: canvas-oda/charts/secretsmanagement-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: "canvas"
  name: canvas-smanop-rolebinding-namespaced
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: canvas-smanop-role-namespaced
subjects:
  - kind: ServiceAccount
    name: canvas-smanop-account
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/charts/etcd/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: canvas-etcd-headless
  namespace: "canvas"
  labels:
    app.kubernetes.io/name: etcd
    helm.sh/chart: etcd-8.7.7
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/managed-by: Helm
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: client
      port: 2379
      targetPort: client
    - name: peer
      port: 2380
      targetPort: peer
  selector:
    app.kubernetes.io/name: etcd
    app.kubernetes.io/instance: canvas
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/charts/etcd/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: canvas-etcd
  namespace: "canvas"
  labels:
    app.kubernetes.io/name: etcd
    helm.sh/chart: etcd-8.7.7
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: "client"
      port: 2379
      targetPort: client
      nodePort: null
    - name: "peer"
      port: 2380
      targetPort: peer
      nodePort: null
  selector:
    app.kubernetes.io/name: etcd
    app.kubernetes.io/instance: canvas
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/charts/ingress-controller/templates/service-apisix.yaml
apiVersion: v1
kind: Service
metadata:
  name: canvas-ingress-controller-apisix-gateway
  namespace: canvas
  annotations:
  labels:
    helm.sh/chart: ingress-controller-0.13.0
    
    app.kubernetes.io/name: ingress-controller
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/version: "1.7.1"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 9080
    - name: https
      protocol: TCP
      port: 443
      targetPort: 9443
  selector:
    
    app.kubernetes.io/name: ingress-controller
    app.kubernetes.io/instance: canvas
  type: NodePort # LoadBalancer or NodePort
  externalTrafficPolicy: Cluster
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/charts/ingress-controller/templates/service.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: v1
kind: Service
metadata:
  name: canvas-ingress-controller
  namespace: canvas
  labels:
    helm.sh/chart: ingress-controller-0.13.0
    
    app.kubernetes.io/name: ingress-controller
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/version: "1.7.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    
    app.kubernetes.io/name: ingress-controller
    app.kubernetes.io/instance: canvas
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/templates/service-admin.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Service
metadata:
  name: canvas-apisix-admin
  namespace: canvas
  annotations:
  labels:
    helm.sh/chart: apisix-2.7.0
    
    app.kubernetes.io/name: apisix
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/version: "3.9.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/service: apisix-admin
spec:
  type: ClusterIP
  ports:
  - name: apisix-admin
    port: 9180
    targetPort: 9180
    protocol: TCP
  selector:
    
    app.kubernetes.io/name: apisix
    app.kubernetes.io/instance: canvas
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/templates/service-gateway.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Service
metadata:
  name: canvas-apisix-gateway
  namespace: canvas
  annotations:
  labels:
    helm.sh/chart: apisix-2.7.0
    
    app.kubernetes.io/name: apisix
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/version: "3.9.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/service: apisix-gateway
spec:
  type: LoadBalancer
  externalTrafficPolicy: Cluster
  ports:
  - name: apisix-gateway
    port: 80
    targetPort: 9080
    protocol: TCP
  - name: apisix-gateway-tls
    port: 443
    targetPort: 9443
    protocol: TCP
  selector:
    
    app.kubernetes.io/name: apisix
    app.kubernetes.io/instance: canvas
---
# Source: canvas-oda/charts/canvas-vault/charts/vault/templates/server-headless-service.yaml
# Service for Vault cluster
apiVersion: v1
kind: Service
metadata:
  name: canvas-vault-hc-internal
  namespace: canvas-vault
  labels:
    helm.sh/chart: vault-0.26.1
    app.kubernetes.io/name: vault-hc
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/managed-by: Helm
    vault-internal: "true"
  annotations:

spec:
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: "https"
      port: 8200
      targetPort: 8200
    - name: https-internal
      port: 8201
      targetPort: 8201
  selector:
    app.kubernetes.io/name: vault-hc
    app.kubernetes.io/instance: canvas
    component: server
---
# Source: canvas-oda/charts/canvas-vault/charts/vault/templates/server-service.yaml
# Service for Vault cluster
apiVersion: v1
kind: Service
metadata:
  name: canvas-vault-hc
  namespace: canvas-vault
  labels:
    helm.sh/chart: vault-0.26.1
    app.kubernetes.io/name: vault-hc
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/managed-by: Helm
  annotations:

spec:
  # We want the servers to become available even if they're not ready
  # since this DNS is also used for join operations.
  publishNotReadyAddresses: true
  ports:
    - name: https
      port: 8200
      targetPort: 8200
    - name: https-internal
      port: 8201
      targetPort: 8201
  selector:
    app.kubernetes.io/name: vault-hc
    app.kubernetes.io/instance: canvas
    component: server
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: canvas-cert-manager
  namespace: cert-manager
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 9402
    name: tcp-prometheus-servicemonitor
    targetPort: 9402
  selector:
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "controller"
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/webhook-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: canvas-cert-manager-webhook
  namespace: cert-manager
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
spec:
  type: ClusterIP
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: "https"
  selector:
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "webhook"
---
# Source: canvas-oda/charts/component-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: seccon
  namespace: canvas
  labels:
    app: component-operator #link service to Pod and not individual container
    helm.sh/chart: component-operator-1.2.1
    app.kubernetes.io/name: component-operator
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/version: "v1beta4"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - port: 5000
    targetPort: seccon
    name: seccon
  type: NodePort
  selector:
    app: component-operator
---
# Source: canvas-oda/charts/dependentapi-simple-operator/templates/depapi-operator-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: canvas-depapi-op-svc
  labels:
    app: canvas-depapi-op
    resource: service
spec:
  ports:
  - name: https
    port: 443
    targetPort: 9443
  selector:
    app: canvas-depapi-op
  sessionAffinity: None
  type: ClusterIP
---
# Source: canvas-oda/charts/dependentapi-simple-operator/templates/serviceinventoryapi-mongodb-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: canvas-svcinv-mongodb
  labels:
    app: canvas-svcinv-mongodb
spec:
  ports:
  - port: 27017
    targetPort: svcinv-mongodb
    name: tcp-svcinv-mongodb
  selector:
    app: canvas-svcinv-mongodb
---
# Source: canvas-oda/charts/dependentapi-simple-operator/templates/serviceinventoryapi-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: info  # do not use canvas-info-service, 
              # because the service has to be accessible under the 
              # fixed endpoint info.canvas.svc.cluster.local
  labels:
    app: canvas-info-service
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8638
  selector:
    app: canvas-info-service
---
# Source: canvas-oda/charts/keycloak/charts/postgresql/templates/primary/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: canvas-postgresql-hl
  namespace: "canvas"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-12.1.9
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
    # Use this annotation in addition to the actual publishNotReadyAddresses
    # field below because the annotation will stop being respected soon but the
    # field is broken in some versions of Kubernetes:
    # https://github.com/kubernetes/kubernetes/issues/58662
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None
  # We want all pods in the StatefulSet to have their addresses published for
  # the sake of the other Postgresql pods even before they're ready, since they
  # have to be able to talk to each other in order to become ready.
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: primary
---
# Source: canvas-oda/charts/keycloak/charts/postgresql/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: canvas-postgresql
  namespace: "canvas"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-12.1.9
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
      nodePort: null
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: primary
---
# Source: canvas-oda/charts/keycloak/templates/headless-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: canvas-keycloak-headless
  namespace: "canvas"
  labels:
    app.kubernetes.io/name: keycloak
    helm.sh/chart: keycloak-13.0.2
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: keycloak
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http
      port: 8083
      protocol: TCP
      targetPort: http
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: keycloak
---
# Source: canvas-oda/charts/keycloak/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: canvas-keycloak
  namespace: "canvas"
  labels:
    app.kubernetes.io/name: keycloak
    helm.sh/chart: keycloak-13.0.2
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: keycloak
spec:
  type: LoadBalancer
  externalTrafficPolicy: "Cluster"
  sessionAffinity: None
  ports:
    - name: http
      port: 8083
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: keycloak
---
# Source: canvas-oda/charts/oda-webhook/templates/service-componentcrdwebhook.yaml
apiVersion: v1
kind: Service
metadata:
  name: compcrdwebhook
  namespace: canvas  
  labels:
    helm.sh/chart: oda-webhook-1.1.4
    app.kubernetes.io/name: oda-webhook
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/version: "v1beta4"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - port: 443
    targetPort: 8443
  type: NodePort
  selector:
    app: compcrdwebhook
---
# Source: canvas-oda/charts/secretsmanagement-operator/templates/smanop-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: canvas-smanop-svc
  labels:
    app: canvas-smanop
    resource: service
spec:
  ports:
  - name: https
    port: 443
    targetPort: 9443
  selector:
    app: canvas-smanop
  sessionAffinity: None
  type: ClusterIP
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/charts/ingress-controller/templates/deployment.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: canvas-ingress-controller
  namespace: canvas
  labels:
    helm.sh/chart: ingress-controller-0.13.0
    
    app.kubernetes.io/name: ingress-controller
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/version: "1.7.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      
      app.kubernetes.io/name: ingress-controller
      app.kubernetes.io/instance: canvas
  template:
    metadata:
      annotations:
        checksum/config: e256a3c923fd80f76ab76d30010a3b2270371bb863e1ebb42a6b24887d15bef1
      labels:
        
        app.kubernetes.io/name: ingress-controller
        app.kubernetes.io/instance: canvas
    spec:
      serviceAccountName: canvas-ingress-controller
      securityContext:
        {}
      volumes:
        - name: configuration
          configMap:
            name: canvas-configmap
            items:
              - key: config.yaml
                path: config.yaml
      
      
      initContainers:
        - name: wait-apisix-admin
          image: busybox:1.28
          
          command: ['sh', '-c', "until nc -z canvas-apisix-admin 9180 ; do echo waiting for apisix-admin; sleep 2; done;"]
          

          securityContext:
            {}
      
      containers:
        - name: ingress-controller
          command:
            - /ingress-apisix/apisix-ingress-controller
            - ingress
            - --config-path
            - /ingress-apisix/conf/config.yaml
          securityContext:
            {}
          image: "apache/apisix-ingress-controller:1.7.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
          resources:
            {}
          volumeMounts:
            - mountPath: /ingress-apisix/conf/config.yaml
              name: configuration
              subPath: config.yaml
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/templates/deployment.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: canvas-apisix
  namespace: canvas
  labels:
    helm.sh/chart: apisix-2.7.0
    
    app.kubernetes.io/name: apisix
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/version: "3.9.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      
      app.kubernetes.io/name: apisix
      app.kubernetes.io/instance: canvas
  template:
    metadata:
      annotations:
        checksum/config: 6f84aacfd71ab433e01c57317596495dbda322adecdf907265d1d99c6ff0db35
      labels:
        
        app.kubernetes.io/name: apisix
        app.kubernetes.io/instance: canvas
    spec:
      serviceAccountName: default
      containers:
        - name: apisix
          image: "apache/apisix:3.9.1-debian"
          imagePullPolicy: IfNotPresent
          env:

          ports:
            - name: http
              containerPort: 9080
              protocol: TCP     
            - name: tls
              containerPort: 9443
              protocol: TCP
            - name: admin
              containerPort: 9180
              protocol: TCP
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 9080
            timeoutSeconds: 1
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - "sleep 30"
          volumeMounts:
            - mountPath: /usr/local/apisix/conf/config.yaml
              name: apisix-config
              subPath: config.yaml
          resources:
            {}
      hostNetwork: false
      initContainers:
        - name: wait-etcd
          image: busybox:1.28
          command: ['sh', '-c', "until nc -z canvas-etcd.canvas.svc.cluster.local 2379; do echo waiting for etcd `date`; sleep 2; done;"]
      volumes:
        - configMap:
            name: canvas-apisix
          name: apisix-config
---
# Source: canvas-oda/charts/apisix-gateway/templates/Deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: canvas-operator
  namespace: canvas
spec:
  replicas: 1
  selector:
    matchLabels:
      app: canvas-operator
  template:
    metadata:
      labels:
        app: canvas-operator
    spec:
      serviceAccountName: apisixapioperator-account
      initContainers:
        - name: wait-apisix-admin
          image: busybox:1.28
          command:
            - sh
            - -c
            - |
              until nc -z canvas-apisix-admin.canvas.svc.cluster.local 9180; do echo waiting for canvas-apisix-admin; sleep 2; done;
      containers:
      - name: canvas-operator
        image: ravijangra92/apisix-operator:7.8.7
        imagePullPolicy: IfNotPresent
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/cainjector-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: canvas-cert-manager-cainjector
  namespace: cert-manager
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "cainjector"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cainjector
      app.kubernetes.io/instance: canvas
      app.kubernetes.io/component: "cainjector"
  template:
    metadata:
      labels:
        app: cainjector
        app.kubernetes.io/name: cainjector
        app.kubernetes.io/instance: canvas
        app.kubernetes.io/component: "cainjector"
        app.kubernetes.io/version: "v1.11.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: cert-manager-v1.11.0
    spec:
      serviceAccountName: canvas-cert-manager-cainjector
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: cert-manager-cainjector
          image: "quay.io/jetstack/cert-manager-cainjector:v1.11.0"
          imagePullPolicy: IfNotPresent
          args:
          - --v=2
          - --leader-election-namespace=kube-system
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: canvas-cert-manager
  namespace: cert-manager
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "controller"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/instance: canvas
      app.kubernetes.io/component: "controller"
  template:
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/instance: canvas
        app.kubernetes.io/component: "controller"
        app.kubernetes.io/version: "v1.11.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: cert-manager-v1.11.0
      annotations:
        prometheus.io/path: "/metrics"
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9402'
    spec:
      serviceAccountName: canvas-cert-manager
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: cert-manager-controller
          image: "quay.io/jetstack/cert-manager-controller:v1.11.0"
          imagePullPolicy: IfNotPresent
          args:
          - --v=2
          - --cluster-resource-namespace=$(POD_NAMESPACE)
          - --leader-election-namespace=kube-system
          - --acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.11.0
          - --max-concurrent-challenges=60
          ports:
          - containerPort: 9402
            name: http-metrics
            protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/webhook-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: canvas-cert-manager-webhook
  namespace: cert-manager
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: webhook
      app.kubernetes.io/instance: canvas
      app.kubernetes.io/component: "webhook"
  template:
    metadata:
      labels:
        app: webhook
        app.kubernetes.io/name: webhook
        app.kubernetes.io/instance: canvas
        app.kubernetes.io/component: "webhook"
        app.kubernetes.io/version: "v1.11.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: cert-manager-v1.11.0
    spec:
      serviceAccountName: canvas-cert-manager-webhook
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: cert-manager-webhook
          image: "quay.io/jetstack/cert-manager-webhook:v1.11.0"
          imagePullPolicy: IfNotPresent
          args:
          - --v=2
          - --secure-port=10250
          - --dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)
          - --dynamic-serving-ca-secret-name=canvas-cert-manager-webhook-ca
          - --dynamic-serving-dns-names=canvas-cert-manager-webhook
          - --dynamic-serving-dns-names=canvas-cert-manager-webhook.$(POD_NAMESPACE)
          - --dynamic-serving-dns-names=canvas-cert-manager-webhook.$(POD_NAMESPACE).svc
          
          ports:
          - name: https
            protocol: TCP
            containerPort: 10250
          - name: healthcheck
            protocol: TCP
            containerPort: 6080
          livenessProbe:
            httpGet:
              path: /livez
              port: 6080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: 6080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: canvas-oda/charts/component-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: component-operator
  namespace: canvas
  labels:
    helm.sh/chart: component-operator-1.2.1
    app.kubernetes.io/name: component-operator
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/version: "v1beta4"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: component-operator
  template:
    metadata:
      namespace: canvas
      labels:
        app: component-operator
        helm.sh/chart: component-operator-1.2.1
        app.kubernetes.io/name: component-operator
        app.kubernetes.io/instance: canvas
        app.kubernetes.io/version: "v1beta4"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: odacomponent-account
      containers:
      - name: component-operator
        image: tmforumodacanvas/component-operator:0.6.0
        imagePullPolicy: IfNotPresent
        envFrom:
          - configMapRef:
              name: component-operator-configmap
          - secretRef:
              name: component-operator-secret
      - name: seccon
        image: tmforumodacanvas/security-listener:0.7.1
        imagePullPolicy: IfNotPresent
        envFrom:
          - configMapRef:
              name: component-operator-configmap
          - secretRef:
              name: component-operator-secret
        ports:
        - name: seccon
          containerPort: 5000
---
# Source: canvas-oda/charts/dependentapi-simple-operator/templates/depapi-operator-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: canvas-depapi-op
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: canvas-depapi-op
  template:
    metadata:
      labels:
        app: canvas-depapi-op
    spec:
      serviceAccountName: canvas-depapi-op-account
      containers:
      - name: canvas-depapi-op
        image: tmforumodacanvas/dependentapi-simple-operator:0.2.4
        imagePullPolicy: IfNotPresent
        env:
        - name: LOGGING
          value: "20"
        ports:
        - containerPort: 9443
---
# Source: canvas-oda/charts/dependentapi-simple-operator/templates/serviceinventoryapi-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: canvas-info-service
  labels:
    app: canvas-info-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: canvas-info-service
  template:
    metadata:
      labels:
        app: canvas-info-service
    spec:
      containers:
      - name: canvas-info-service
        image: tmforumodacanvas/tmf638-service-inventory-api:0.1.1
        imagePullPolicy: IfNotPresent
        env:
        - name: SERVER_URL
          value: http://info.canvas.svc.cluster.local
        ports:
        - containerPort: 8638
---
# Source: canvas-oda/charts/dependentapi-simple-operator/templates/serviceinventoryapi-mongodb-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: canvas-svcinv-mongodb
  labels:
    app: canvas-svcinv-mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: canvas-svcinv-mongodb
  template:
    metadata:
      labels:
        app: canvas-svcinv-mongodb
    spec:
      containers:
      - name: canvas-svcinv-mongodb
        image: mongo:6.0
        ports:
        - name: svcinv-mongodb
          containerPort: 27017
        volumeMounts:
        - name: canvas-svcinv-mongodb-pv-storage
          mountPath: "/data/db"
      volumes:
      - name: canvas-svcinv-mongodb-pv-storage
        persistentVolumeClaim:
          claimName: canvas-svcinv-mongodb-pv-claim
---
# Source: canvas-oda/charts/oda-webhook/templates/deployment-componentcrdwebhook.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: compcrdwebhook
  namespace: canvas  
  labels:
    helm.sh/chart: oda-webhook-1.1.4
    app.kubernetes.io/name: oda-webhook
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/version: "v1beta4"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: compcrdwebhook
  template:
    metadata:
      labels:
        app: compcrdwebhook
        helm.sh/chart: oda-webhook-1.1.4
        app.kubernetes.io/name: oda-webhook
        app.kubernetes.io/instance: canvas
        app.kubernetes.io/version: "v1beta4"
        app.kubernetes.io/managed-by: Helm
    spec:
      containers:
      - name: compcrdwebhook
        image: tmforumodacanvas/compcrdwebhook:0.11.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8443
        volumeMounts:
          - name: secret-volume
            mountPath: /etc/secret-volume
      volumes:
        - name: secret-volume
          secret:
            secretName: compcrdwebhook-secret
---
# Source: canvas-oda/charts/secretsmanagement-operator/templates/smanop-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: canvas-smanop
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: canvas-smanop
  template:
    metadata:
      labels:
        app: canvas-smanop
    spec:
      serviceAccountName: canvas-smanop-account
      containers:
      - name: canvas-smanop
        image: tmforumodacanvas/secretsmanagement-operator:0.1.3
        imagePullPolicy: IfNotPresent
        env:
        - name: LOGGING
          value: "20"

        - name: VAULT_ADDR
          value: "https://canvas-vault-hc.canvas-vault.svc.cluster.local:8200"
        - name: VAULT_SKIP_VERIFY
          value: "true"
        - name: AUTH_PATH
          value: "jwt-k8s-sman"
        - name: LOGIN_ROLE_TPL
          value: "sman-{0}-role"
        - name: POLICY_NAME_TPL
          value: "sman-{0}-policy"
        - name: SECRETS_MOUNT_TPL
          value: "kv-sman-{0}"
        - name: SECRETS_BASE_PATH_TPL
          value: "sidecar"
        - name: AUDIENCE
          valueFrom:
            configMapKeyRef:
              name: canvas-sman-autodetect 
              key: issuer
        - name: SIDECAR_IMAGE
          value: "tmforumodacanvas/secretsmanagement-sidecar:0.1.0"
        - name: SIDECAR_IMAGEPULLPOLICY
          value: "IfNotPresent"
        
        
        - name: HVAC_TOKEN
          valueFrom:
            secretKeyRef:
              name: "canvas-vault-hc-secrets"
              key: "rootToken"
        
        - name: WEBHOOK_SERVICE_NAME
          value: "canvas-smanop-svc"
        - name: WEBHOOK_SERVICE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: WEBHOOK_SERVICE_PORT
          value: "443"
        ports:
        - containerPort: 9443
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/charts/etcd/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: canvas-etcd
  namespace: "canvas"
  labels:
    app.kubernetes.io/name: etcd
    helm.sh/chart: etcd-8.7.7
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: etcd
      app.kubernetes.io/instance: canvas
  serviceName: canvas-etcd-headless
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: etcd
        helm.sh/chart: etcd-8.7.7
        app.kubernetes.io/instance: canvas
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/token-secret: 240a7a812d65db2a9d72c1f73e985533bd6821def606ddf27b7af0513f1b78bf
    spec:
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: etcd
                    app.kubernetes.io/instance: canvas
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      serviceAccountName: "default"
      containers:
        - name: etcd
          image: docker.io/bitnami/etcd:3.5.7-debian-11-r14
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_STS_NAME
              value: "canvas-etcd"
            - name: ETCDCTL_API
              value: "3"
            - name: ETCD_ON_K8S
              value: "yes"
            - name: ETCD_START_FROM_SNAPSHOT
              value: "no"
            - name: ETCD_DISASTER_RECOVERY
              value: "no"
            - name: ETCD_NAME
              value: "$(MY_POD_NAME)"
            - name: ETCD_DATA_DIR
              value: "/bitnami/etcd/data"
            - name: ETCD_LOG_LEVEL
              value: "info"
            - name: ALLOW_NONE_AUTHENTICATION
              value: "yes"
            - name: ETCD_AUTH_TOKEN
              value: "jwt,priv-key=/opt/bitnami/etcd/certs/token/jwt-token.pem,sign-method=RS256,ttl=10m"
            - name: ETCD_ADVERTISE_CLIENT_URLS
              value: "http://$(MY_POD_NAME).canvas-etcd-headless.canvas.svc.cluster.local:2379,http://canvas-etcd.canvas.svc.cluster.local:2379"
            - name: ETCD_LISTEN_CLIENT_URLS
              value: "http://0.0.0.0:2379"
            - name: ETCD_INITIAL_ADVERTISE_PEER_URLS
              value: "http://$(MY_POD_NAME).canvas-etcd-headless.canvas.svc.cluster.local:2380"
            - name: ETCD_LISTEN_PEER_URLS
              value: "http://0.0.0.0:2380"
            - name: ETCD_INITIAL_CLUSTER_TOKEN
              value: "etcd-cluster-k8s"
            - name: ETCD_INITIAL_CLUSTER_STATE
              value: "new"
            - name: ETCD_INITIAL_CLUSTER
              value: "canvas-etcd-0=http://canvas-etcd-0.canvas-etcd-headless.canvas.svc.cluster.local:2380,canvas-etcd-1=http://canvas-etcd-1.canvas-etcd-headless.canvas.svc.cluster.local:2380,canvas-etcd-2=http://canvas-etcd-2.canvas-etcd-headless.canvas.svc.cluster.local:2380"
            - name: ETCD_CLUSTER_DOMAIN
              value: "canvas-etcd-headless.canvas.svc.cluster.local"
          envFrom:
          ports:
            - name: client
              containerPort: 2379
              protocol: TCP
            - name: peer
              containerPort: 2380
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - /opt/bitnami/scripts/etcd/healthcheck.sh
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
                - /opt/bitnami/scripts/etcd/healthcheck.sh
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          lifecycle:
            preStop:
              exec:
                command:
                  - /opt/bitnami/scripts/etcd/prestop.sh
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: data
              mountPath: /bitnami/etcd
            - name: etcd-jwt-token
              mountPath: /opt/bitnami/etcd/certs/token/
              readOnly: true
      volumes:
        - name: etcd-jwt-token
          secret:
            secretName: canvas-etcd-jwt-token
            defaultMode: 256
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: canvas-oda/charts/canvas-vault/charts/vault/templates/server-statefulset.yaml
# StatefulSet to run the actual vault server cluster.
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: canvas-vault-hc
  namespace: canvas-vault
  labels:
    app.kubernetes.io/name: vault-hc
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: canvas-vault-hc-internal
  podManagementPolicy: Parallel
  replicas: 1
  updateStrategy:
    type: OnDelete
  selector:
    matchLabels:
      app.kubernetes.io/name: vault-hc
      app.kubernetes.io/instance: canvas
      component: server
  template:
    metadata:
      labels:
        helm.sh/chart: vault-0.26.1
        app.kubernetes.io/name: vault-hc
        app.kubernetes.io/instance: canvas
        component: server
    spec:
      
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: vault-hc
                  app.kubernetes.io/instance: "canvas"
                  component: server
              topologyKey: kubernetes.io/hostname
  
      
      
      
      terminationGracePeriodSeconds: 10
      serviceAccountName: canvas-vault-hc
      
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 100
        supplementalGroups:
        - 1000
      hostNetwork: false
      volumes:
        
        - name: config
          configMap:
            name: canvas-vault-hc-config
  
        - emptyDir: {}
          name: tmpvol
        - name: userconfig-canvasvault-tls
          secret:
            defaultMode: 420
            secretName: canvasvault-tls
        - name: home
          emptyDir: {}
      containers:
        - name: vault
          
          image: hashicorp/vault:1.14.8
          imagePullPolicy: IfNotPresent
          command:
          - "/bin/sh"
          - "-ec"
          args: 
          - |
            cp /vault/config/extraconfig-from-values.hcl /tmp/storageconfig.hcl;
            [ -n "${HOST_IP}" ] && sed -Ei "s|HOST_IP|${HOST_IP?}|g" /tmp/storageconfig.hcl;
            [ -n "${POD_IP}" ] && sed -Ei "s|POD_IP|${POD_IP?}|g" /tmp/storageconfig.hcl;
            [ -n "${HOSTNAME}" ] && sed -Ei "s|HOSTNAME|${HOSTNAME?}|g" /tmp/storageconfig.hcl;
            [ -n "${API_ADDR}" ] && sed -Ei "s|API_ADDR|${API_ADDR?}|g" /tmp/storageconfig.hcl;
            [ -n "${TRANSIT_ADDR}" ] && sed -Ei "s|TRANSIT_ADDR|${TRANSIT_ADDR?}|g" /tmp/storageconfig.hcl;
            [ -n "${RAFT_ADDR}" ] && sed -Ei "s|RAFT_ADDR|${RAFT_ADDR?}|g" /tmp/storageconfig.hcl;
            /usr/local/bin/docker-entrypoint.sh vault server -config=/tmp/storageconfig.hcl 
   
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          env:
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: VAULT_K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: VAULT_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: VAULT_ADDR
              value: "https://127.0.0.1:8200"
            - name: VAULT_API_ADDR
              value: "https://$(POD_IP):8200"
            - name: SKIP_CHOWN
              value: "true"
            - name: SKIP_SETCAP
              value: "true"
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: VAULT_CLUSTER_ADDR
              value: "https://$(HOSTNAME).canvas-vault-hc-internal:8201"
            - name: HOME
              value: "/home/vault"
            
            
            - name: "VAULT_CACERT"
              value: "/vault/userconfig/canvasvault-tls/ca.crt"
            - name: "VAULT_TLSCERT"
              value: "/vault/userconfig/canvasvault-tls/tls.crt"
            - name: "VAULT_TLSKEY"
              value: "/vault/userconfig/canvasvault-tls/tls.key"
            
          volumeMounts:
          
  
    
            - name: data
              mountPath: /vault/data
    
  
  
            - name: config
              mountPath: /vault/config
  
            - mountPath: /tmp
              name: tmpvol
            - mountPath: /vault/userconfig/canvasvault-tls
              name: userconfig-canvasvault-tls
              readOnly: true
            - name: home
              mountPath: /home/vault
          ports:
            - containerPort: 8200
              name: https
            - containerPort: 8201
              name: https-internal
            - containerPort: 8202
              name: https-rep
          readinessProbe:
            # Check status; unsealed vault servers return 0
            # The exit code reflects the seal status:
            #   0 - unsealed
            #   1 - error
            #   2 - sealed
            exec:
              command: ["/bin/sh", "-ec", "vault status -tls-skip-verify"]
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          lifecycle:
            # Vault container doesn't receive SIGTERM from Kubernetes
            # and after the grace period ends, Kube sends SIGKILL.  This
            # causes issues with graceful shutdowns such as deregistering itself
            # from Consul (zombie services).
            preStop:
              exec:
                command: [
                  "/bin/sh", "-c",
                  # Adding a sleep here to give the pod eviction a
                  # chance to propagate, so requests will not be made
                  # to this pod while it's terminating
                  "sleep 5 && kill -SIGTERM $(pidof vault)",
                ]
      
  
  volumeClaimTemplates:
    - metadata:
        name: data
      
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 128M
---
# Source: canvas-oda/charts/keycloak/charts/postgresql/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: canvas-postgresql
  namespace: "canvas"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-12.1.9
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  replicas: 1
  serviceName: canvas-postgresql-hl
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: canvas
      app.kubernetes.io/component: primary
  template:
    metadata:
      name: canvas-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-12.1.9
        app.kubernetes.io/instance: canvas
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
      annotations:
    spec:
      serviceAccountName: default
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: postgresql
                    app.kubernetes.io/instance: canvas
                    app.kubernetes.io/component: primary
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      hostNetwork: false
      hostIPC: false
      initContainers:
      containers:
        - name: postgresql
          image: docker.io/bitnami/postgresql:15.2.0-debian-11-r31
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: "/bitnami/postgresql"
            - name: PGDATA
              value: "/bitnami/postgresql/data"
            # Authentication
            - name: POSTGRES_USER
              value: "keycloak"
            - name: POSTGRES_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: canvas-postgresql
                  key: postgres-password
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: canvas-postgresql
                  key: password
            - name: POSTGRES_DB
              value: "keycloak"
            # Replication
            # Initdb
            # Standby
            # LDAP
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            # TLS
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            # Audit
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            # Others
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: "error"
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: "pgaudit"
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "keycloak" -d "dbname=keycloak" -h 127.0.0.1 -p 5432
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                
                - |
                  exec pg_isready -U "keycloak" -d "dbname=keycloak" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
          resources:
            limits: {}
            requests:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: canvas-oda/charts/keycloak/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: canvas-keycloak
  namespace: "canvas"
  labels:
    app.kubernetes.io/name: keycloak
    helm.sh/chart: keycloak-13.0.2
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: keycloak
spec:
  replicas: 1
  podManagementPolicy: Parallel
  serviceName: canvas-keycloak-headless
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels: 
      app.kubernetes.io/name: keycloak
      app.kubernetes.io/instance: canvas
      app.kubernetes.io/component: keycloak
  template:
    metadata:
      annotations:
        checksum/configmap-env-vars: 51a146bc1e8e77b70ed3e35d405edd95ef53f2bf41ddf655adc991ed5d818f8b
        checksum/secrets: 9a1ff6abdefa54950667d50f7f572127b3b5a7af0ee63741c59929de01ae5210
      labels:
        app.kubernetes.io/name: keycloak
        helm.sh/chart: keycloak-13.0.2
        app.kubernetes.io/instance: canvas
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: keycloak
    spec:
      serviceAccountName: canvas-keycloak
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: keycloak
                    app.kubernetes.io/instance: canvas
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      initContainers:
      containers:
        - name: keycloak
          image: docker.io/bitnami/keycloak:20.0.5-debian-11-r2
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: BITNAMI_DEBUG
              value: "false"
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: canvas-keycloak
                  key: admin-password
            - name: KEYCLOAK_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: canvas-postgresql
                  key: password
            - name: KEYCLOAK_HTTP_RELATIVE_PATH
              value: "/auth/"
          envFrom:
            - configMapRef:
                name: canvas-keycloak-env-vars
          resources:
            limits: {}
            requests: {}
          ports:
            - name: http
              containerPort: 8083
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 300
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 5
            httpGet:
              path: /auth/
              port: http
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            httpGet:
              path: /auth/realms/master
              port: http
          volumeMounts:
      volumes:
---
# Source: canvas-oda/charts/canvas-vault/templates/autounseal-cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  namespace: canvas-vault
  name: canvas-vault-hc-cronjob
spec:
  schedule: "*/1 * * * *"   # "At every 5th minute." (crontab.guru)
  successfulJobsHistoryLimit: 0
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      ttlSecondsAfterFinished: 3600
      template:
        spec:
          containers:
          - name: autounsealvault
            # TODO[FH] remove suffix before merging to master/main
            image: tmforumodacanvas/baseimage-kubectl-curl:1.30.5
            imagePullPolicy: IfNotPresent
            env:
            - name: VAULT_ADDR
              value: "https://canvas-vault-hc.canvas-vault.svc.cluster.local:8200"
            - name: UNSEAL_KEY1
              valueFrom:
                secretKeyRef:
                  name: canvas-vault-hc-secrets
                  key: unsealKey1
            command: ["/bin/sh"]
            args: ["-c", "echo Vault Autounseal Job starting for $VAULT_ADDR;
            date -Iseconds;
            STATUS_JSON=$(curl -k -s -H 'X-Vault-Request:true'  $VAULT_ADDR/v1/sys/seal-status || true);
            echo --- STATUS ---;
            echo $STATUS_JSON | jq .;
            if echo $STATUS_JSON | jq -e '.initialized == true' >/dev/null;
            then
              if  echo $STATUS_JSON | jq -e '.sealed == true' >/dev/null;
              then
                echo Vault is sealed, unsealing;
                curl -k -s -X PUT -H 'X-Vault-Request:true' -d \"{\\\"key\\\":\\\"$UNSEAL_KEY1\\\",\\\"reset\\\":false,\\\"migrate\\\":false}\" $VAULT_ADDR/v1/sys/unseal | jq .;
              else
                echo alreayd unsealed, nothing to do;
              fi;
            else
              echo 'Vault not initialized';
              exit 3;
            fi;
            date -Iseconds;
            echo finished"]
          restartPolicy: Never
      backoffLimit: 0
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/charts/ingress-controller/templates/ingress-class.yaml
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: "apisix"
spec:
  controller: apisix.apache.org/apisix-ingress # fix: https://github.com/apache/apisix-ingress-controller/issues/1653
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/charts/ingress-controller/templates/apisix-configmap.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/charts/ingress-controller/templates/hpa.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/charts/ingress-controller/templates/servicemonitor.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/templates/apisix-config-cm.yml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/templates/clusterrole.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/templates/clusterrolebinding.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/templates/hpa.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/templates/ingress-admin.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/templates/ingress.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/templates/pdb.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/templates/service-metrics.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/templates/service-monitor.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: canvas-oda/charts/apisix-gateway/charts/apisix/templates/serviceaccount.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/webhook-mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: canvas-cert-manager-webhook
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
  annotations:
    cert-manager.io/inject-ca-from-secret: "cert-manager/canvas-cert-manager-webhook-ca"
webhooks:
  - name: webhook.cert-manager.io
    rules:
      - apiGroups:
          - "cert-manager.io"
          - "acme.cert-manager.io"
        apiVersions:
          - "v1"
        operations:
          - CREATE
          - UPDATE
        resources:
          - "*/*"
    admissionReviewVersions: ["v1"]
    # This webhook only accepts v1 cert-manager resources.
    # Equivalent matchPolicy ensures that non-v1 resource requests are sent to
    # this webhook (after the resources have been converted to v1).
    matchPolicy: Equivalent
    timeoutSeconds: 10
    failurePolicy: Fail
    # Only include 'sideEffects' field in Kubernetes 1.12+
    sideEffects: None
    clientConfig:
      service:
        name: canvas-cert-manager-webhook
        namespace: cert-manager
        path: /mutate
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/webhook-validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: canvas-cert-manager-webhook
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
  annotations:
    cert-manager.io/inject-ca-from-secret: "cert-manager/canvas-cert-manager-webhook-ca"
webhooks:
  - name: webhook.cert-manager.io
    namespaceSelector:
      matchExpressions:
      - key: "cert-manager.io/disable-validation"
        operator: "NotIn"
        values:
        - "true"
      - key: "name"
        operator: "NotIn"
        values:
        - cert-manager
    rules:
      - apiGroups:
          - "cert-manager.io"
          - "acme.cert-manager.io"
        apiVersions:
          - "v1"
        operations:
          - CREATE
          - UPDATE
        resources:
          - "*/*"
    admissionReviewVersions: ["v1"]
    # This webhook only accepts v1 cert-manager resources.
    # Equivalent matchPolicy ensures that non-v1 resource requests are sent to
    # this webhook (after the resources have been converted to v1).
    matchPolicy: Equivalent
    timeoutSeconds: 10
    failurePolicy: Fail
    sideEffects: None
    clientConfig:
      service:
        name: canvas-cert-manager-webhook
        namespace: cert-manager
        path: /validate
---
# Source: canvas-oda/charts/canvas-vault/templates/post-install-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: canvas-vault-hc-pih-sa
  namespace: canvas-vault
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/startupapicheck-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: canvas-cert-manager-startupapicheck
  namespace: cert-manager
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-5"
  labels:
    app: startupapicheck
    app.kubernetes.io/name: startupapicheck
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "startupapicheck"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
---
# Source: canvas-oda/charts/secretsmanagement-operator/templates/preinst-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: canvas-sm-preinst-sa
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
---
# Source: canvas-oda/charts/canvas-vault/templates/post-install-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: canvas-vault-canvas-vault-hc-pih-clusterrole
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
rules:
  - apiGroups: [""] 
    resources: ["secrets"]
    #resourceNames: ["canvas-vault-hc-secrets"]    
    verbs: [create, get, delete, patch]
---
# Source: canvas-oda/charts/canvas-vault/templates/post-install-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: canvas-vault-canvas-vault-hc-pih-clusterrolebinding
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: canvas-vault-canvas-vault-hc-pih-clusterrole
subjects:
  - kind: ServiceAccount
    name: canvas-vault-hc-pih-sa
    namespace: canvas-vault
---
# Source: canvas-oda/charts/canvas-vault/templates/post-install-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: canvas-vault-hc-pih-role
  namespace: canvas-vault
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["namespaces"]
    verbs: [list]
  - apiGroups: [""] # "" indicates the core API group
    resources: ["configmaps"]
    verbs: [create]
  - apiGroups: [""] # "" indicates the core API group
    resources: ["pods"]
    verbs: [get, list, "watch"]   # "list" for kubectl wait
  - apiGroups: [""] # "" indicates the core API group
    resources: ["pods/exec"]
    verbs: [create]
  - apiGroups: [""] 
    resources: ["secrets"]
    resourceNames: ["canvas-vault-hc-secrets"]    
    verbs: [create, get, delete, patch]
  - apiGroups: ["cert-manager.io"] # "" indicates the core API group
    resources: ["certificates"]
    verbs: [create, get, patch]
  # https://github.com/kubernetes/kubectl/issues/580#issuecomment-489117173
  #- apiGroups: [""]
  #  resources: ["statefulsets", "deployments"]
  #  verbs: ["get", "list", "watch", "patch"]
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/startupapicheck-rbac.yaml
# create certificate role
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: canvas-cert-manager-startupapicheck:create-cert
  namespace: cert-manager
  labels:
    app: startupapicheck
    app.kubernetes.io/name: startupapicheck
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "startupapicheck"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-5"
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates"]
    verbs: ["create"]
---
# Source: canvas-oda/charts/secretsmanagement-operator/templates/preinst-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: canvas-sm-preinst-role
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["namespaces"]
    verbs: [list]
  - apiGroups: [""] # "" indicates the core API group
    resources: ["configmaps"]
    verbs: [get, create, patch]
  - apiGroups: [""] # "" indicates the core API group
    resources: ["pods"]
    verbs: [get, list, "watch"]   # "list" for kubectl wait
  - apiGroups: [""] # "" indicates the core API group
    resources: ["pods/exec"]
    verbs: [create]
  # https://github.com/kubernetes/kubectl/issues/580#issuecomment-489117173
  #- apiGroups: [""]
  #  resources: ["statefulsets", "deployments"]
  #  verbs: ["get", "list", "watch", "patch"]
---
# Source: canvas-oda/charts/canvas-vault/templates/post-install-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: canvas-vault-hc-pih-rolebinding
  namespace: canvas-vault
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: canvas-vault-hc-pih-role
subjects:
  - kind: ServiceAccount
    name: canvas-vault-hc-pih-sa
    namespace: canvas-vault
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/startupapicheck-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: canvas-cert-manager-startupapicheck:create-cert
  namespace: cert-manager
  labels:
    app: startupapicheck
    app.kubernetes.io/name: startupapicheck
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "startupapicheck"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-5"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: canvas-cert-manager-startupapicheck:create-cert
subjects:
  - kind: ServiceAccount
    name: canvas-cert-manager-startupapicheck
    namespace: cert-manager
---
# Source: canvas-oda/charts/secretsmanagement-operator/templates/preinst-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: canvas-sm-preinst-rolebinding
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: canvas-sm-preinst-role
subjects:
  - kind: ServiceAccount
    name: canvas-sm-preinst-sa
---
# Source: canvas-oda/charts/canvas-vault/charts/vault/templates/tests/server-test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: canvas-vault-hc-server-test
  namespace: canvas-vault
  annotations:
    "helm.sh/hook": test
spec:
  
  containers:
    - name: canvas-server-test
      image: hashicorp/vault:1.14.8
      imagePullPolicy: IfNotPresent
      env:
        - name: VAULT_ADDR
          value: https://canvas-vault-hc.canvas-vault.svc:8200
        
        - name: "VAULT_CACERT"
          value: "/vault/userconfig/canvasvault-tls/ca.crt"
        - name: "VAULT_TLSCERT"
          value: "/vault/userconfig/canvasvault-tls/tls.crt"
        - name: "VAULT_TLSKEY"
          value: "/vault/userconfig/canvasvault-tls/tls.key"
      command:
        - /bin/sh
        - -c
        - |
          echo "Checking for sealed info in 'vault status' output"
          ATTEMPTS=10
          n=0
          until [ "$n" -ge $ATTEMPTS ]
          do
            echo "Attempt" $n...
            vault status -format yaml | grep -E '^sealed: (true|false)' && break
            n=$((n+1))
            sleep 5
          done
          if [ $n -ge $ATTEMPTS ]; then
            echo "timed out looking for sealed info in 'vault status' output"
            exit 1
          fi

          exit 0
      volumeMounts:
        - mountPath: /tmp
          name: tmpvol
        - mountPath: /vault/userconfig/canvasvault-tls
          name: userconfig-canvasvault-tls
          readOnly: true
  volumes:
    - emptyDir: {}
      name: tmpvol
    - name: userconfig-canvasvault-tls
      secret:
        defaultMode: 420
        secretName: canvasvault-tls
  restartPolicy: Never
---
# Source: canvas-oda/charts/apisix-gateway/templates/DisableIstioLB.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: canvas-patch-istio-ingress
  namespace: canvas
  annotations:
    "helm.sh/hook": post-install
    #"helm.sh/hook-weight": "2"
spec:
  template:
    spec:
      serviceAccountName: canvas-operator
      containers:
      - name: patch-istio-ingress
        image: bitnami/kubectl:latest
        command:
          - /bin/sh
          - -c
          - |
            kubectl patch svc istio-ingress -n istio-ingress -p '{"spec": {"type": "ClusterIP", "externalIPs": null}}'
      restartPolicy: Never
  backoffLimit: 3
---
# Source: canvas-oda/charts/apisix-gateway/templates/EnableIstioLB.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: canvas-preuninstall-patch-istio-ingress
  namespace: canvas
  annotations:
    "helm.sh/hook": pre-delete 
spec:
  template:
    spec:
      serviceAccountName: canvas-operator
      containers:
      - name: patch-istio-ingress
        image: bitnami/kubectl:latest  # Using kubectl image
        command:
          - /bin/sh
          - -c
          - |
            kubectl patch svc istio-ingress -n istio-ingress -p '{"spec": {"type": "LoadBalancer", "externalIPs": null}}'
      restartPolicy: Never
  backoffLimit: 3
---
# Source: canvas-oda/charts/canvas-vault/templates/post-install-hook.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "canvas-vault-hc-post-install-hook"
  namespace: canvas-vault
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "canvas"
    app.kubernetes.io/version: 1.14.8
    helm.sh/chart: "canvas-vault-0.2.1"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      name: "canvas-vault-hc-post-install-hook"
      labels:
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/instance: "canvas"
        helm.sh/chart: "canvas-vault-0.2.1"
    spec:
      restartPolicy: Never
      containers:
      - name: post-install-job
        # TODO[FH] remove suffix before merging to master/main
        image: tmforumodacanvas/baseimage-kubectl-curl:1.30.5
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args: ["-c", "echo starting canvas vault post install hook;
           date;
           set -xev;
           NAMESPACE=canvas-vault;
           VAULTPOD=canvas-vault-hc-0;
           SECRET_NAME=canvas-vault-hc-secrets;
           AUTH_PATH=jwt-k8s-sman;
           JWT=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token);
           JWT_PL=$(echo $JWT | cut -d '.' -f2);
           ISSUER=$(echo $JWT_PL==== | base64 -d 2>/dev/null | jq -r '.aud[0]');
           VAULT_ADDR=https://canvas-vault-hc.$NAMESPACE.svc.cluster.local:8200;
           echo requesting certificate;
           kubectl apply -f /cert-configmap/canvas-vault-certificate.yaml;
           echo configuring authenticator \"$AUTH_PATH\" for issuer \"$ISSUER\";
           date;
           echo waiting up to 60 seconds for the vault to be running;
           kubectl -n $NAMESPACE wait -l  statefulset.kubernetes.io/pod-name=$VAULTPOD --for jsonpath=\"{.status.conditions[?(@.type=='Initialized')]['status']}\"=True pod --timeout=60s;
           echo running;
           date;
           export STATUS_JSON=$(curl -k -m1 -s -H 'X-Vault-Request:true' $VAULT_ADDR/v1/sys/seal-status || true);
           for i in $(seq 1 60);
           do
             if [ -z \"$STATUS_JSON\" ];
             then
               echo waiting for status;
               sleep 1;
               export STATUS_JSON=$(curl -k -m1 -s -H 'X-Vault-Request:true' $VAULT_ADDR/v1/sys/seal-status || true);
             fi;
           done;
           echo --- STATUS ---;
           echo $STATUS_JSON | jq .;
           if echo $STATUS_JSON | jq -e '.initialized == false' >/dev/null;
           then
             echo --- init ---;
             export JSON_RESULT=$(curl -k -s -X PUT -H 'X-Vault-Request:true' -d '{\"secret_shares\":1,\"secret_threshold\":1}' $VAULT_ADDR/v1/sys/init);
             echo $JSON_RESULT;
             echo $JSON_RESULT | jq .;
             if echo $JSON_RESULT | jq -e '.root_token != null';
             then
               export ROOT_TOKEN=$(echo $JSON_RESULT | jq -r '.root_token');
               export UNSEAL_KEY1=$(echo $JSON_RESULT | jq -r '.keys[0]');
               echo CREATE SECRETS;
               kubectl create secret -n $NAMESPACE generic $SECRET_NAME  --from-literal=rootToken=$ROOT_TOKEN --from-literal=unsealKey1=$UNSEAL_KEY1 --dry-run=client -o yaml | kubectl apply -f -;
               kubectl create secret -n canvas generic $SECRET_NAME  --from-literal=rootToken=$ROOT_TOKEN --from-literal=unsealKey1=$UNSEAL_KEY1 --dry-run=client -o yaml | kubectl apply -f -;
               echo UNSEALING;
               curl -k -s -X PUT -H 'X-Vault-Request:true' -d \"{\\\"key\\\":\\\"$UNSEAL_KEY1\\\",\\\"reset\\\":false,\\\"migrate\\\":false}\" $VAULT_ADDR/v1/sys/unseal | jq .;
             else
               echo ERROR initializing Vault $JSON_RESULT;
               exit 2;
             fi;
           else
             echo Vault already initialized;
             if echo $STATUS_JSON | jq -e '.sealed == true' >/dev/null;
             then
               echo Vault is sealed, unsealing;
               UNSEAL_KEY1=$( kubectl get secret -n $NAMESPACE $SECRET_NAME -ojsonpath='{.data.unsealKey1}' | base64 -d);
               curl -k -s -X PUT -H 'X-Vault-Request:true' -d \"{\\\"key\\\":\\\"$UNSEAL_KEY1\\\",\\\"reset\\\":false,\\\"migrate\\\":false}\" $VAULT_ADDR/v1/sys/unseal | jq .;
             fi;
           fi;
           echo waiting up to 60 seconds for the vault to be ready;
           kubectl -n $NAMESPACE wait -l  statefulset.kubernetes.io/pod-name=$VAULTPOD --for=condition=ready pod --timeout=60s;
           echo ready;
           date;
           echo reading secret;
           ROOT_TOKEN=$(kubectl get secret -n $NAMESPACE $SECRET_NAME -ojsonpath='{.data.rootToken}' | base64 -d);
           UNSEAL_KEY1=$( kubectl get secret -n $NAMESPACE $SECRET_NAME -ojsonpath='{.data.unsealKey1}' | base64 -d);
           echo removethis;
           kubectl create secret -n canvas generic $SECRET_NAME  --from-literal=rootToken=$ROOT_TOKEN --from-literal=unsealKey1=$UNSEAL_KEY1 --dry-run=client -o yaml | kubectl apply -f -;
           echo getting issuer;
           if [ -z \"$ISSUER\" ];then
             JSON=$(kubectl exec -n $NAMESPACE -i $VAULTPOD -- sh -c 'wget -O- --no-check-certificate https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_SERVICE_PORT_HTTPS/.well-known/openid-configuration 2>/dev/null');
             echo ----- response -----;
             echo $JSON;
             echo ----- -------- -----;
             ISSUER=$(echo $JSON | sed -e 's/.*\"issuer\":\"\\([^\"]\\+\\).*/\\1/');
           fi;
           echo ISSUER=$ISSUER;
           if [ -z \"$CACERT\" ]; then
             if curl $ISSUER/.well-known/openid-configuration >/dev/null 2>&1; then
               echo no CACERT needed;
             else
               CACERT=/run/secrets/kubernetes.io/serviceaccount/ca.crt;
               if curl $ISSUER/.well-known/openid-configuration --cacert $CACERT >/dev/null 2>&1;then
                 echo CACERT=$CACERT;
               else
                 echo could not curl -k $ISSUER/.well-known/openid-configuration --cacert $CACERT; 
                 ls -la $CACERT;
                 curl -k -v $ISSUER/.well-known/openid-configuration --cacert $CACERT;
                 exit 60;
               fi;
             fi;
           fi;
           echo kubectl exec -i -n $NAMESPACE $VAULTPOD -- /bin/sh -c \"echo $ROOT_TOKEN | vault login -tls-skip-verify -non-interactive -no-print -\";
           kubectl exec -i -n $NAMESPACE $VAULTPOD -- /bin/sh -c \"echo $ROOT_TOKEN | vault login -tls-skip-verify -non-interactive -no-print -\";
           X=$(kubectl exec -n $NAMESPACE -i $VAULTPOD -- vault auth list -tls-skip-verify -non-interactive | grep \"$AUTH_PATH\" || true);
           echo X=$X;
           if [ -z \"$X\" ]; then
             echo enable $AUTH_PATH in vault;
             kubectl exec -n $NAMESPACE -i $VAULTPOD -- vault auth enable -tls-skip-verify -non-interactive -path \"$AUTH_PATH\" jwt;
           else
             echo auth method $AUTH_PATH already enabled;
           fi;
           echo vault write oidc_discovery_url;
           if [ -z \"$CACERT\" ]; then
             kubectl exec -n $NAMESPACE -i $VAULTPOD -- vault write -tls-skip-verify -non-interactive auth/$AUTH_PATH/config oidc_discovery_url=$ISSUER;
           else
             kubectl exec -n $NAMESPACE -i $VAULTPOD -- vault write -tls-skip-verify -non-interactive auth/$AUTH_PATH/config oidc_discovery_url=$ISSUER oidc_discovery_ca_pem=@$CACERT;
           fi;
           echo --- FINISHED ---"]
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-pih
          readOnly: true
        - mountPath: /cert-configmap
          name: cert-configmap
          readOnly: true
      serviceAccountName: canvas-vault-hc-pih-sa
      volumes:
      - name: cert-configmap
        configMap:
          name: canvas-canvasvault-cert-cm 
      - name: kube-api-access-pih
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 600
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
---
# Source: canvas-oda/charts/cert-manager-init/charts/cert-manager/templates/startupapicheck-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: canvas-cert-manager-startupapicheck
  namespace: cert-manager
  labels:
    app: startupapicheck
    app.kubernetes.io/name: startupapicheck
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/component: "startupapicheck"
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.11.0
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "1"
spec:
  backoffLimit: 4
  template:
    metadata:
      labels:
        app: startupapicheck
        app.kubernetes.io/name: startupapicheck
        app.kubernetes.io/instance: canvas
        app.kubernetes.io/component: "startupapicheck"
        app.kubernetes.io/version: "v1.11.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: cert-manager-v1.11.0
    spec:
      restartPolicy: OnFailure
      serviceAccountName: canvas-cert-manager-startupapicheck
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: cert-manager-startupapicheck
          image: "quay.io/jetstack/cert-manager-ctl:v1.11.0"
          imagePullPolicy: IfNotPresent
          args:
          - check
          - api
          - --wait=1m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: canvas-oda/charts/cert-manager-init/templates/webhook.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: job-hook-postinstall
  annotations:
    "helm.sh/hook-weight": "-10"  
    "helm.sh/hook": "post-install"
    "helm.sh/hook-delete-policy": "before-hook-creation"
spec:
  template:
    spec:
      containers:
        - name: post-install
          image: busybox:1.35
          imagePullPolicy: IfNotPresent
          command: ['sleep', '80']
      restartPolicy: OnFailure
      terminationGracePeriodSeconds: 0

  backoffLimit: 1
  completions: 1
---
# Source: canvas-oda/charts/keycloak/templates/keycloak-config-cli-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: canvas-keycloak-keycloak-config-cli
  namespace: "canvas"
  labels:
    app.kubernetes.io/name: keycloak
    helm.sh/chart: keycloak-13.0.2
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: keycloak-config-cli
  annotations:
    helm.sh/hook: post-install,post-upgrade,post-rollback
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
    helm.sh/hook-weight: "5"
spec:
  backoffLimit: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: keycloak
        helm.sh/chart: keycloak-13.0.2
        app.kubernetes.io/instance: canvas
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: keycloak-config-cli
      annotations:
        checksum/configuration: dbc0a09261f086f458916c263b5373498d51afbd0081fafca973396ebc7f7f22
    spec:
      serviceAccountName: canvas-keycloak
      
      restartPolicy: Never
      securityContext:
        fsGroup: 1001
      containers:
        - name: keycloak-config-cli
          image: docker.io/bitnami/keycloak-config-cli:5.5.0-debian-11-r35
          imagePullPolicy: IfNotPresent
          command:
            - java
            - -jar
            - /opt/keycloak-config-cli.jar
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: KEYCLOAK_URL
              value: http://canvas-keycloak-headless:8083/auth/
            - name: KEYCLOAK_USER
              value: "admin"
            - name: KEYCLOAK_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: canvas-keycloak
                  key: admin-password
            - name: IMPORT_FILES_LOCATIONS
              value: /config/*
            - name: KEYCLOAK_AVAILABILITYCHECK_ENABLED
              value: "true"
          volumeMounts:
            - name: config-volume
              mountPath: /config
          resources:
            limits: {}
            requests: {}
      volumes:
        - name: config-volume
          configMap:
            name: canvas-keycloak-keycloak-config-cli-configmap
---
# Source: canvas-oda/charts/secretsmanagement-operator/templates/preinst-autodetect-audience-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "canvas-sm-preinst-autodetect-audience"
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "canvas"
    app.kubernetes.io/version: 0.1.2
    helm.sh/chart: "secretsmanagement-operator-0.1.3"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      name: "canvas-sm-preinst-autodetect-audience"
      labels:
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/instance: "canvas"
        helm.sh/chart: "secretsmanagement-operator-0.1.3"
    spec:
      restartPolicy: Never
      containers:
      - name: autodetect-audience
        # TODO[FH]: remove prereleasesuffix
        image: "tmforumodacanvas/baseimage-kubectl-curl:1.30.5"
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args: ["-c", "echo starting autodetect audience pre install hook;
           date;
           set -xev;
           NAMESPACE=canvas;
           CMNAME=canvas-sman-autodetect;
           echo NAMESPACE=$NAMESPACE;
           echo CMNAME=$CMNAME;
           cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt;
           JWT=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token);
           JWT_PL=$(echo $JWT | cut -d '.' -f2);
           ISSUER=$(echo $JWT_PL==== | base64 -d 2>/dev/null | jq -r '.aud[0]');
           echo $ISSUER;
           kubectl create configmap -n $NAMESPACE $CMNAME --from-file=ca.crt=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt --from-literal=issuer=$ISSUER --dry-run=client -oyaml | kubectl apply -f -;
           echo --- FINISHED ---"]
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-pih
          readOnly: true
      serviceAccountName: canvas-sm-preinst-sa
      volumes:
      - name: kube-api-access-pih
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 600
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
---
# Source: canvas-oda/charts/cert-manager-init/templates/IstioIngressCertificate.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "0"
    "helm.sh/resource-policy": keep
  name: istio-ingress-cert
  namespace: istio-ingress  
spec:
  secretName: istio-ingress-cert
  duration: 21600h  
  renewBefore: 360h 
  commonName: tmf-canvas-env
  dnsNames:
    - "*"
  issuerRef:
    name: istio-ingress-issuer
    kind: Issuer
---
# Source: canvas-oda/charts/cert-manager-init/templates/certificate.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "0"
    "helm.sh/resource-policy": keep
  labels:
    helm.sh/chart: cert-manager-init-1.0.2
    app.kubernetes.io/name: cert-manager-init
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/version: "v1beta4"
    app.kubernetes.io/managed-by: Helm
  name: compcrdwebhook
  namespace: canvas
spec:
  secretName: compcrdwebhook-secret
  duration: 21600h
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 2048
  commonName: compcrdwebhook
  isCA: false
  usages:
    - digital signature
    - content commitment # replaces nonRepudiation
    - key encipherment
    - server auth
  dnsNames:
  - compcrdwebhook
  - compcrdwebhook.canvas
  - compcrdwebhook.canvas.svc
  - compcrdwebhook.canvas.svc.cluster.local
  issuerRef:
    name: canvas-cert-manager-init-selfsigned
---
# Source: canvas-oda/charts/cert-manager-init/templates/cluster_issuer.yaml
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/resource-policy": keep
  labels:
    helm.sh/chart: cert-manager-init-1.0.2
    app.kubernetes.io/name: cert-manager-init
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/version: "v1beta4"
    app.kubernetes.io/managed-by: Helm
  name: canvas-cert-manager-init-selfsigned-cluster
spec:
  selfSigned: {}
---
# Source: canvas-oda/charts/apisix-gateway/templates/ingressGatewaywhenApiGatewayenabled.yaml
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "5"
    "helm.sh/resource-policy": keep
  name: component-gateway
  namespace: components
spec:
  selector:
    istio: ingressgateway  # use istio default controller
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"
---
# Source: canvas-oda/charts/cert-manager-init/templates/IstioIngressIssuer.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/resource-policy": keep
  name: istio-ingress-issuer
  namespace: istio-ingress
spec:
  selfSigned: {}
---
# Source: canvas-oda/charts/cert-manager-init/templates/issuer.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/resource-policy": keep
  labels:
    helm.sh/chart: cert-manager-init-1.0.2
    app.kubernetes.io/name: cert-manager-init
    app.kubernetes.io/instance: canvas
    app.kubernetes.io/version: "v1beta4"
    app.kubernetes.io/managed-by: Helm
  name: canvas-cert-manager-init-selfsigned
  namespace:  canvas
spec:
  selfSigned: {}
